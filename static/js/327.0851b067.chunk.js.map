{"version":3,"file":"static/js/327.0851b067.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Header/Header.styled.js","components/RegistrationForm/RegistrationForm.jsx","auth.jsx","components/Header/Header.jsx","firebase.js","components/Filters/Filters.styled.js","components/Filters/Filters.jsx","components/PsyCard/PsyCard.jsx","components/PsyList/PsyList.styled.js","components/PsyList/PsyList.jsx","pages/PsychologistsPage/PsychologistsPage.styled.js","pages/PsychologistsPage/PsychologistsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  padding: 0px 128px;\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  padding: 24px 0px;\n\n  border-bottom: 1px solid rgba(25, 26, 21, 0.1);\n`;\n\nexport const HeaderContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const LogoStyled = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.2;\n  letter-spacing: -0.4px;\n`;\n\nexport const LogoAccent = styled.span`\n  color: var(--color-accent);\n  font-weight: 700;\n  letter-spacing: -0.4px;\n`;\n\nexport const DotAccent = styled.span`\n  font-weight: 500;\n`;\n\nexport const NavItemStyled = styled(NavLink)`\n  position: relative;\n  font-size: 16px;\n  line-height: 1.2;\n  color: var(--color-text);\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &.psychologists-active {\n    &::after {\n      content: '';\n      position: absolute;\n      top: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      display: block;\n      margin-top: 4px;\n      background-color: var(--color-accent);\n      width: 8px;\n      height: 8px;\n\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const ButtonBlockStyled = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const NavBlockStyled = styled.ul`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const LogoAndNav = styled.div`\n  display: flex;\n  gap: 130px;\n  align-items: center;\n`;\n\nexport const BtnLogIn = styled.button`\n  padding: 14px 39px;\n\n  border-radius: 30px;\n  border: 1px solid rgba(25, 26, 21, 0.2);\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.16px;\n  background-color: transparent;\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport Button from 'components/Button';\nimport sprite from '../../assets/sprite.svg';\nimport {\n  RegTitle,\n  RegText,\n  FormWrapper,\n  EyeIcon,\n} from './RegistrationForm.styled';\nimport {\n  ErrorText,\n  Input,\n  FormikWrapper,\n  InputWrapper,\n} from 'components/LogInForm/LoginForm.styled';\n\nconst RegistrationForm = () => {\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n  };\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Name is a required field.'),\n    email: yup.string().email().required('Email is a required field.'),\n    password: yup\n      .string()\n      .min(6)\n      .max(20)\n      .required('Password is a required field.'),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  return (\n    <FormWrapper>\n      <RegTitle>Registration</RegTitle>\n      <RegText>\n        Thank you for your interest in our platform! In order to register, we\n        need some information. Please provide us with the following information.\n      </RegText>\n      <Formik\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n        initialValues={initialValues}\n      >\n        <Form autoComplete=\"off\">\n          <FormikWrapper>\n            <label>\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <FormError name=\"name\" />\n            </label>\n            <label>\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n              <FormError name=\"email\" />\n            </label>\n            <InputWrapper>\n              <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n              <EyeIcon>\n                <use href={`${sprite}#icon-eye-off`} />\n              </EyeIcon>\n            </InputWrapper>\n            <FormError name=\"password\" />\n          </FormikWrapper>\n          <Button type=\"submit\" width=\"100%\">\n            Sign Up\n          </Button>\n        </Form>\n      </Formik>\n    </FormWrapper>\n  );\n};\n\nexport default RegistrationForm;\n","import { useEffect, useState } from 'react';\nimport { getAuth, signInWithPopup } from 'firebase/auth';\nimport { app, googleAuthProvider } from './firebase';\n\nexport const AuthProvider = () => {\n  const auth = getAuth(app);\n  const [user, setUser] = useState(auth.currentUser);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged(maybeUser => {\n      if (maybeUser == null) {\n        return setUser(maybeUser);\n      }\n\n      signInWithPopup(auth, googleAuthProvider).then(credentials => {\n        setUser(credentials.user).catch(e => console.error(e));\n      });\n    });\n\n    return unsub;\n  }, [auth]);\n\n  return user != null ? <>{user.displayName}</> : <>loading</>;\n};\n","import { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Button from 'components/Button';\nimport PopUpWindow from 'components/PopUpWindow';\nimport { ContainerStyled } from 'components/Container/Container.styled';\nimport {\n  HeaderWrapper,\n  LogoStyled,\n  LogoAccent,\n  NavItemStyled,\n  ButtonBlockStyled,\n  NavBlockStyled,\n  LogoAndNav,\n  DotAccent,\n  HeaderContentWrapper,\n} from './Header.styled';\nimport LogInForm from 'components/LogInForm';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { AuthProvider } from 'auth';\n\nconst Header = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n\n  const location = useLocation();\n\n  const toggleModal = content => {\n    setShowModal(prevState => !prevState);\n    setModalContent(content);\n  };\n\n  return (\n    <HeaderWrapper>\n      <ContainerStyled>\n        <HeaderContentWrapper>\n          <LogoAndNav>\n            <LogoStyled to=\"/\">\n              <LogoAccent>\n                psychologists<DotAccent>.</DotAccent>\n              </LogoAccent>\n              services\n            </LogoStyled>\n            <NavBlockStyled>\n              <li>\n                <NavItemStyled to=\"/\">Home</NavItemStyled>\n              </li>\n              <li>\n                <NavItemStyled\n                  to=\"/psychologists\"\n                  className={\n                    location.pathname === '/psychologists'\n                      ? 'psychologists-active'\n                      : ''\n                  }\n                >\n                  Psychologists\n                </NavItemStyled>\n              </li>\n            </NavBlockStyled>\n          </LogoAndNav>\n          <AuthProvider />\n          <ButtonBlockStyled>\n            <div onClick={() => toggleModal('login')}>\n              <Button\n                backgroundcolor=\"transparent\"\n                border=\"rgba(25, 26, 21, 0.20)\"\n                color=\"var(--color-text)\"\n                fontSize=\"16px\"\n                type=\"button\"\n              >\n                Log In\n              </Button>\n            </div>\n            <div onClick={() => toggleModal('registration')}>\n              <Button type=\"button\" fontSize=\"16px\">\n                Registration\n              </Button>\n            </div>\n          </ButtonBlockStyled>\n        </HeaderContentWrapper>\n      </ContainerStyled>\n      {showModal && (\n        <PopUpWindow onClick={toggleModal}>\n          {modalContent === 'login' ? <LogInForm /> : <RegistrationForm />}\n        </PopUpWindow>\n      )}\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import { initializeApp } from '@firebase/app';\nimport { GoogleAuthProvider } from '@firebase/auth';\nimport { getDatabase } from '@firebase/database';\n\nconst fireBaseConfig = {\n  apiKey: 'AIzaSyBU4qg5O9osiestHflSvgxAs7ezEMOURuw',\n  authDomain: 'psychologistsservice.firebaseapp.com',\n  databaseURL:\n    'https://psychologistsservice-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'psychologistsservice',\n  storageBucket: 'psychologistsservice.appspot.com',\n  messagingSenderId: '528389251216',\n  appId: '1:528389251216:web:9ed73bceaa0704a7e0b815',\n  measurementId: 'G-W4HSX9E1T1',\n};\n\nexport const app = initializeApp(fireBaseConfig);\nexport const googleAuthProvider = new GoogleAuthProvider();\nexport const db = getDatabase(app);\n","import styled from 'styled-components';\n\nexport const FilterText = styled.label`\n  color: #8a8a89;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.285;\n`;\n\nexport const FilterContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  margin-bottom: 32px;\n  margin-top: 64px;\n\n  max-width: 226px;\n`;\n\nexport const SelectPsyCategory = styled.select`\n  width: 100%;\n  padding: 14px 18px;\n  border: transparent;\n  border-radius: 14px;\n  background: var(--color-accent);\n  color: var(--color-white);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n\n  &:focus:active {\n    border: transparent;\n  }\n`;\n","import {\n  FilterText,\n  FilterContainer,\n  SelectPsyCategory,\n} from './Filters.styled';\n\nconst Filters = () => {\n  return (\n    <FilterContainer>\n      <FilterText>Filters</FilterText>\n      <SelectPsyCategory>\n        <option>A to Z</option>\n        <option>Z to A</option>\n        <option>Less than 10$</option>\n        <option>Greater than 10$</option>\n        <option>Popular</option>\n        <option>Not popular</option>\n        <option>Show all</option>\n      </SelectPsyCategory>\n    </FilterContainer>\n  );\n};\n\nexport default Filters;\n","import {\n  CardWrapper,\n  ImgPsy,\n  ImgWrapper,\n  JobTitle,\n  NameText,\n  JobBlock,\n  CategoryText,\n  CategoryValue,\n  CategoryWrapper,\n  DescriptionText,\n  RatingText,\n  PriceText,\n  PriceAccentText,\n  RatingPriceBlock,\n  ContentWrapper,\n  JobRatingBlock,\n  StarSvg,\n  HeartSvg,\n  RatingBlock,\n  OnlineCircleBig,\n  ReadMoreText,\n} from './PsyCard.styled';\nimport sprite from '../../assets/sprite.svg';\nimport { useState } from 'react';\nimport Reviews from 'components/Reviews/Reviews';\n\nconst PsyCard = ({ psychologist }) => {\n  const {\n    about,\n    avatar_url,\n    experience,\n    initial_consultation,\n    license,\n    name,\n    price_per_hour,\n    rating,\n    specialization,\n  } = psychologist;\n\n  const [fullInfo, setFullInfo] = useState(false);\n\n  return (\n    <>\n      <CardWrapper>\n        <ImgWrapper>\n          <ImgPsy alt=\"psychologist\" src={avatar_url} />\n          <OnlineCircleBig></OnlineCircleBig>\n        </ImgWrapper>\n        <ContentWrapper>\n          <JobRatingBlock>\n            <JobBlock>\n              <JobTitle>Psychologist</JobTitle>\n              <NameText>{name}</NameText>\n            </JobBlock>\n            <RatingPriceBlock>\n              <RatingBlock>\n                <StarSvg>\n                  <use href={`${sprite}#icon-star`} />\n                </StarSvg>\n                <RatingText>Rating: {rating}</RatingText>\n              </RatingBlock>\n\n              <PriceText>\n                Price / 1 hour:{' '}\n                <PriceAccentText>{price_per_hour}$</PriceAccentText>\n              </PriceText>\n              <HeartSvg>\n                <use href={`${sprite}#icon-heart`} />\n              </HeartSvg>\n            </RatingPriceBlock>\n          </JobRatingBlock>\n\n          <CategoryWrapper>\n            <CategoryText>\n              Experience: <CategoryValue>{experience}</CategoryValue>\n            </CategoryText>\n            <CategoryText>\n              License: <CategoryValue>{license}</CategoryValue>\n            </CategoryText>\n            <CategoryText>\n              Specialization: <CategoryValue>{specialization}</CategoryValue>\n            </CategoryText>\n            <CategoryText>\n              Initial_consultation:{' '}\n              <CategoryValue>{initial_consultation}</CategoryValue>\n            </CategoryText>\n          </CategoryWrapper>\n\n          <DescriptionText>{about}</DescriptionText>\n\n          {fullInfo ? (\n            <Reviews psychologist={psychologist} />\n          ) : (\n            <ReadMoreText\n              onClick={() => {\n                setFullInfo(true);\n              }}\n            >\n              Read more\n            </ReadMoreText>\n          )}\n        </ContentWrapper>\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default PsyCard;\n","import styled from 'styled-components';\n\nexport const PsyListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nexport const LoadMoreWrapper = styled.div`\n  margin: 0 auto;\n  margin-top: 32px;\n`;\n","import { useEffect, useState } from 'react';\n// import { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport PsyCard from 'components/PsyCard';\nimport { PsyListWrapper, LoadMoreWrapper } from './PsyList.styled.js';\n\nimport { db } from '../../firebase.js';\nimport { ref, onValue } from 'firebase/database';\nimport Button from 'components/Button/index.js';\n// import { selectPsychologists } from '../../redux/selectors.js';\n\nconst PsyList = () => {\n  const [psychologists, setPsychologists] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const psyPerPage = 3;\n\n  // const psychologistsList = useSelector(selectPsychologists);\n  // console.log('psy', psychologistsList);\n\n  const onLoadMore = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  useEffect(() => {\n    const psychologistsRef = ref(db, 'psycologists');\n    const startAt = (currentPage - 1) * psyPerPage;\n    const endAt = startAt + psyPerPage;\n\n    const unsubscribe = onValue(psychologistsRef, snapshot => {\n      const data = snapshot.val();\n\n      if (data) {\n        const psychologistsArray = Object.values(data).slice(startAt, endAt);\n        setPsychologists(psychologistsArray);\n      }\n    });\n\n    return () => unsubscribe();\n  }, [currentPage]);\n\n  return (\n    <>\n      <PsyListWrapper>\n        {psychologists.map(psychologist => (\n          <PsyCard psychologist={psychologist} key={nanoid()} />\n        ))}\n\n        <LoadMoreWrapper>\n          <Button\n            type=\"button\"\n            fontSize={16}\n            padding=\"14px 48px\"\n            onClick={onLoadMore}\n          >\n            Load more\n          </Button>\n        </LoadMoreWrapper>\n      </PsyListWrapper>\n    </>\n  );\n};\n\nexport default PsyList;\n","import styled from 'styled-components';\n\nexport const PsyPageWrapper = styled.main`\n  background-color: #f3f3f3;\n  width: 100%;\n  height: 100%;\n  padding-bottom: 100px;\n`;\n","import Header from 'components/Header';\nimport Filters from 'components/Filters';\nimport PsyList from 'components/PsyList/PsyList';\nimport { ContainerStyled } from 'components/Container/Container.styled';\nimport { PsyPageWrapper } from './PsychologistsPage.styled';\n\nconst PsychologistsPage = ({ psychologists }) => {\n  return (\n    <PsyPageWrapper>\n      <Header />\n      <ContainerStyled>\n        <Filters />\n        <PsyList psychologists={psychologists} />\n      </ContainerStyled>\n    </PsyPageWrapper>\n  );\n};\n\nexport default PsychologistsPage;\n"],"names":["ContainerStyled","styled","_templateObject","_taggedTemplateLiteral","HeaderWrapper","HeaderContentWrapper","_templateObject2","LogoStyled","NavLink","_templateObject3","LogoAccent","_templateObject4","DotAccent","_templateObject5","NavItemStyled","_templateObject6","ButtonBlockStyled","_templateObject7","NavBlockStyled","_templateObject8","LogoAndNav","_templateObject9","_templateObject10","schema","yup","shape","name","required","email","password","min","max","FormError","_ref2","_jsx","ErrorMessage","render","message","ErrorText","children","_jsxs","FormWrapper","RegTitle","RegText","Formik","onSubmit","values","_ref","resetForm","validationSchema","initialValues","Form","autoComplete","FormikWrapper","Input","type","placeholder","InputWrapper","EyeIcon","href","concat","sprite","Button","width","AuthProvider","auth","getAuth","app","_useState","useState","currentUser","_useState2","_slicedToArray","user","setUser","useEffect","onAuthStateChanged","maybeUser","signInWithPopup","googleAuthProvider","then","credentials","catch","e","console","error","_Fragment","displayName","showModal","setShowModal","_useState3","_useState4","modalContent","setModalContent","location","useLocation","toggleModal","content","prevState","to","className","pathname","onClick","backgroundcolor","border","color","fontSize","PopUpWindow","LogInForm","RegistrationForm","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","GoogleAuthProvider","db","getDatabase","FilterText","FilterContainer","SelectPsyCategory","psychologist","about","avatar_url","experience","initial_consultation","license","price_per_hour","rating","specialization","fullInfo","setFullInfo","CardWrapper","ImgWrapper","ImgPsy","alt","src","OnlineCircleBig","ContentWrapper","JobRatingBlock","JobBlock","JobTitle","NameText","RatingPriceBlock","RatingBlock","StarSvg","RatingText","PriceText","PriceAccentText","HeartSvg","CategoryWrapper","CategoryText","CategoryValue","DescriptionText","Reviews","ReadMoreText","PsyListWrapper","LoadMoreWrapper","psychologists","setPsychologists","currentPage","setCurrentPage","psychologistsRef","ref","startAt","endAt","unsubscribe","onValue","snapshot","data","val","psychologistsArray","Object","slice","map","PsyCard","nanoid","padding","PsyPageWrapper","Header","Filters","PsyList"],"sourceRoot":""}