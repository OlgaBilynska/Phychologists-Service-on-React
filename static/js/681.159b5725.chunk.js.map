{"version":3,"file":"static/js/681.159b5725.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Filters/Filters.styled.js","components/Filters/Filters.jsx","components/Header/Header.styled.js","components/RegistrationForm/RegistrationForm.jsx","components/LogoutBtn/LogoutBtn.jsx","components/Auth/Auth.styled.js","redux/selectors.js","components/Auth/Auth.js","components/Header/Header.jsx","pages/FavoritesPage/FavoritesPage.jsx","pages/PsychologistsPage/PsychologistsPage.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  padding: 0px 128px;\n`;\n","import styled from 'styled-components';\n\nexport const FilterText = styled.label`\n  color: #8a8a89;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.285;\n`;\n\nexport const FilterContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  margin-bottom: 32px;\n  margin-top: 64px;\n\n  max-width: 226px;\n`;\n\nexport const SelectPsyCategory = styled.select`\n  width: 100%;\n  padding: 14px 18px;\n  border: transparent;\n  border-radius: 14px;\n  background: var(--color-accent);\n  color: var(--color-white);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n\n  &:focus:active {\n    border: transparent;\n  }\n`;\n","import {\n  FilterText,\n  FilterContainer,\n  SelectPsyCategory,\n} from './Filters.styled';\n\nconst Filters = () => {\n  return (\n    <FilterContainer>\n      <FilterText>Filters</FilterText>\n      <SelectPsyCategory>\n        <option>A to Z</option>\n        <option>Z to A</option>\n        <option>Less than 10$</option>\n        <option>Greater than 10$</option>\n        <option>Popular</option>\n        <option>Not popular</option>\n        <option>Show all</option>\n      </SelectPsyCategory>\n    </FilterContainer>\n  );\n};\n\nexport default Filters;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  padding: 24px 0px;\n\n  border-bottom: 1px solid rgba(25, 26, 21, 0.1);\n`;\n\nexport const HeaderContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const LogoStyled = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.2;\n  letter-spacing: -0.4px;\n`;\n\nexport const LogoAccent = styled.span`\n  color: var(--color-accent);\n  font-weight: 700;\n  letter-spacing: -0.4px;\n`;\n\nexport const DotAccent = styled.span`\n  font-weight: 500;\n`;\n\nexport const NavItemStyled = styled(NavLink)`\n  position: relative;\n  font-size: 16px;\n  line-height: 1.2;\n  color: var(--color-text);\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &.active {\n    &::after {\n      content: '';\n      position: absolute;\n      top: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      display: block;\n      margin-top: 4px;\n      background-color: var(--color-accent);\n      width: 8px;\n      height: 8px;\n\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const ButtonBlockStyled = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const NavBlockStyled = styled.ul`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const LogoAndNav = styled.div`\n  display: flex;\n  gap: 130px;\n  align-items: center;\n`;\n\nexport const BtnLogIn = styled.button`\n  padding: 14px 39px;\n\n  border-radius: 30px;\n  border: 1px solid rgba(25, 26, 21, 0.2);\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.16px;\n  background-color: transparent;\n`;\n\nexport const AuthAndButtonBlock = styled.div`\n  display: flex;\n  gap: 28px;\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { auth } from '../../firebase.js';\nimport { createUserWithEmailAndPassword } from '@firebase/auth';\nimport { useState } from 'react';\n\nimport Button from 'components/Button';\nimport sprite from '../../assets/sprite.svg';\nimport {\n  RegTitle,\n  RegText,\n  FormWrapper,\n  EyeIcon,\n} from './RegistrationForm.styled';\nimport {\n  ErrorText,\n  Input,\n  FormikWrapper,\n  InputWrapper,\n} from 'components/LogInForm/LoginForm.styled';\n\nconst RegistrationForm = () => {\n  console.log('registration');\n  const [values, setValues] = useState('');\n\n  console.log('v', values);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Name is a required field.'),\n    email: yup.string().email().required('Email is a required field.'),\n    password: yup\n      .string()\n      .min(6)\n      .max(20)\n      .required('Password is a required field.'),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    console.log('val', values);\n    try {\n      await createUserWithEmailAndPassword(\n        auth,\n        values.name,\n        values.email,\n        values.password\n      );\n      setValues(values);\n      resetForm();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <RegTitle>Registration</RegTitle>\n      <RegText>\n        Thank you for your interest in our platform! In order to register, we\n        need some information. Please provide us with the following information.\n      </RegText>\n      <Formik\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n        initialValues={initialValues}\n      >\n        <Form autoComplete=\"off\">\n          <FormikWrapper>\n            <label>\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <FormError name=\"name\" />\n            </label>\n            <label>\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n              <FormError name=\"email\" />\n            </label>\n            <InputWrapper>\n              <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n              <EyeIcon>\n                <use href={`${sprite}#icon-eye-off`} />\n              </EyeIcon>\n            </InputWrapper>\n            <FormError name=\"password\" />\n          </FormikWrapper>\n          <Button type=\"submit\" width=\"100%\">\n            Sign Up\n          </Button>\n        </Form>\n      </Formik>\n    </FormWrapper>\n  );\n};\n\nexport default RegistrationForm;\n","import { signOut } from '@firebase/auth';\nimport { auth } from '../../firebase';\nimport { ButtonStyled } from 'components/Button/Button.styled';\n\nconst LogoutBtn = () => {\n  const onLogOutClick = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <ButtonStyled\n      backgroundcolor=\"transparent\"\n      border=\"rgba(25, 26, 21, 0.20)\"\n      color=\"var(--color-text)\"\n      fontSize=\"16px\"\n      type=\"submit\"\n      onClick={onLogOutClick}\n    >\n      Logout\n    </ButtonStyled>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from 'styled-components';\n\nexport const AuthBlock = styled.div`\n  display: flex;\n  gap: 14px;\n  align-items: center;\n`;\n\nexport const AuthText = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.16px;\n`;\n\nexport const IconUser = styled.svg`\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n  border-radius: 10px;\n\n  fill: var(--color-white);\n  background-color: var(--color-accent);\n`;\n\nexport const AuthLogoutBlock = styled.div`\n  display: flex;\n  gap: 28px;\n  align-items: center;\n`;\n","// Psychologists\nexport const selectPsychologists = state => state.psychologists.psychologists;\nexport const selectPsychologistsIsLoading = state =>\n  state.psychologists.isLoading;\nexport const selectPsychologistsError = state => state.psychologists.error;\n\n// Favorites\nexport const selectFavoritePsychologists = state => state.favorites.favorites;\nexport const selectFavoritesIsLoading = state => state.favorites.isLoading;\nexport const selectFavoritesError = state => state.favorites.error;\n\n// Authentication\nexport const selectUserAuthenticated = state => state.auth.isAuthenticated;\nexport const selectUserData = state => state.auth.userData;\nexport const selectUserIsLoading = state => state.auth.isLoading;\nexport const selectUserError = state => state.auth.error;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAuth, signInWithPopup } from 'firebase/auth';\nimport LogoutBtn from 'components/LogoutBtn';\nimport { app, googleAuthProvider } from '../../firebase';\nimport { AuthBlock, IconUser, AuthText, AuthLogoutBlock } from './Auth.styled';\nimport sprite from '../../assets/sprite.svg';\nimport { selectUserData } from '../../redux/selectors';\n\nconst AuthProvider = ({ onAuthStateChanged }) => {\n  const auth = getAuth(app);\n  const [user, setUser] = useState(auth.currentUser);\n\n  const userInfo = useSelector(selectUserData);\n  console.log('userInfo', userInfo);\n\n  console.log('email', auth?.currentUser?.email);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged(maybeUser => {\n      if (maybeUser === null) {\n        setUser(maybeUser);\n\n        if (onAuthStateChanged) {\n          onAuthStateChanged(false);\n        }\n      } else {\n        signInWithPopup(auth, googleAuthProvider)\n          .then(credentials => {\n            setUser(credentials.user);\n            if (onAuthStateChanged) {\n              onAuthStateChanged(true);\n            }\n          })\n          .catch(e => console.error(e));\n\n        // createUserWithEmailAndPassword(auth, values.email, values.password)\n        //   .then(credentials => {\n        //     console.log('cre', credentials);\n        //   })\n        //   .catch(e => console.error(e));\n      }\n    });\n\n    return unsub;\n  }, [auth, onAuthStateChanged]);\n\n  return user !== null ? (\n    <AuthLogoutBlock>\n      <AuthBlock>\n        <IconUser>\n          <use href={`${sprite}#icon-user`} />\n        </IconUser>\n        <AuthText> {user.displayName}</AuthText>\n      </AuthBlock>\n      <LogoutBtn />\n    </AuthLogoutBlock>\n  ) : null;\n};\n\nexport default AuthProvider;\n","import { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Button from 'components/Button';\nimport PopUpWindow from 'components/PopUpWindow';\nimport { ContainerStyled } from 'components/Container/Container.styled';\nimport {\n  HeaderWrapper,\n  LogoStyled,\n  LogoAccent,\n  NavItemStyled,\n  ButtonBlockStyled,\n  NavBlockStyled,\n  LogoAndNav,\n  DotAccent,\n  HeaderContentWrapper,\n  AuthAndButtonBlock,\n} from './Header.styled';\nimport LogInForm from 'components/LogInForm';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport GoogleAuthProvider from 'components/Auth/Auth';\n\nconst Header = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const location = useLocation();\n\n  const toggleModal = content => {\n    setShowModal(prevState => !prevState);\n    setModalContent(content);\n  };\n\n  const handleAuthStateChanged = newState => {\n    setIsAuthenticated(newState);\n  };\n\n  // const setUserStatus = user => {\n  //   if (user) {\n  //     return setIsAuthenticated(true);\n  //   }\n  // };\n\n  return (\n    <HeaderWrapper>\n      <ContainerStyled>\n        <HeaderContentWrapper>\n          <LogoAndNav>\n            <LogoStyled to=\"/\">\n              <LogoAccent>\n                psychologists<DotAccent>.</DotAccent>\n              </LogoAccent>\n              services\n            </LogoStyled>\n            <NavBlockStyled>\n              <li>\n                <NavItemStyled to=\"/\">Home</NavItemStyled>\n              </li>\n              <li>\n                <NavItemStyled\n                  to=\"/psychologists\"\n                  className={\n                    location.pathname === '/psychologists' ? 'active' : ''\n                  }\n                >\n                  Psychologists\n                </NavItemStyled>\n              </li>\n              <li>\n                <NavItemStyled\n                  to=\"/favorites\"\n                  className={location.pathname === '/favorites' ? 'active' : ''}\n                >\n                  Favorites\n                </NavItemStyled>\n              </li>\n            </NavBlockStyled>\n          </LogoAndNav>\n\n          <AuthAndButtonBlock>\n            {isAuthenticated ? (\n              <div>\n                <GoogleAuthProvider\n                  // user={user => setUserStatus(user)}\n                  onAuthStateChanged={handleAuthStateChanged}\n                />\n              </div>\n            ) : (\n              <ButtonBlockStyled>\n                <div onClick={() => toggleModal('login')}>\n                  <Button\n                    backgroundcolor=\"transparent\"\n                    border=\"rgba(25, 26, 21, 0.20)\"\n                    color=\"var(--color-text)\"\n                    fontSize=\"16px\"\n                    type=\"button\"\n                  >\n                    Log In\n                  </Button>\n                </div>\n                <div onClick={() => toggleModal('registration')}>\n                  <Button type=\"button\" fontSize=\"16px\">\n                    Registration\n                  </Button>\n                </div>\n              </ButtonBlockStyled>\n            )}\n          </AuthAndButtonBlock>\n        </HeaderContentWrapper>\n      </ContainerStyled>\n      {showModal && (\n        <PopUpWindow onClick={toggleModal}>\n          {modalContent === 'login' ? <LogInForm /> : <RegistrationForm />}\n        </PopUpWindow>\n      )}\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import { ContainerStyled } from 'components/Container/Container.styled';\nimport Filters from 'components/Filters';\nimport Header from 'components/Header';\nimport { PsyPageWrapper } from 'pages/PsychologistsPage/PsychologistsPage.styled';\n\nconst FavoritePage = () => {\n  return (\n    <PsyPageWrapper>\n      <Header />\n      <ContainerStyled>\n        <Filters />\n      </ContainerStyled>\n    </PsyPageWrapper>\n  );\n};\n\nexport default FavoritePage;\n","import styled from 'styled-components';\n\nexport const PsyPageWrapper = styled.main`\n  background-color: #f3f3f3;\n  width: 100%;\n  min-height: 100%;\n  padding-bottom: 100px;\n`;\n"],"names":["ContainerStyled","styled","_templateObject","_taggedTemplateLiteral","FilterText","FilterContainer","_templateObject2","SelectPsyCategory","_templateObject3","_jsxs","children","_jsx","HeaderWrapper","HeaderContentWrapper","LogoStyled","NavLink","LogoAccent","_templateObject4","DotAccent","_templateObject5","NavItemStyled","_templateObject6","ButtonBlockStyled","_templateObject7","NavBlockStyled","_templateObject8","LogoAndNav","_templateObject9","AuthAndButtonBlock","_templateObject10","_templateObject11","console","log","_useState","useState","_useState2","_slicedToArray","values","setValues","schema","yup","shape","name","required","email","password","min","max","FormError","_ref","ErrorMessage","render","message","ErrorText","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref2","resetForm","_context","prev","next","createUserWithEmailAndPassword","auth","t0","error","stop","_x","_x2","apply","arguments","FormWrapper","RegTitle","RegText","Formik","onSubmit","validationSchema","initialValues","Form","autoComplete","FormikWrapper","Input","type","placeholder","InputWrapper","EyeIcon","href","concat","sprite","Button","width","onLogOutClick","signOut","ButtonStyled","backgroundcolor","border","color","fontSize","onClick","AuthBlock","AuthText","IconUser","AuthLogoutBlock","selectUserData","state","userData","_auth$currentUser","onAuthStateChanged","getAuth","app","currentUser","user","setUser","userInfo","useSelector","useEffect","maybeUser","signInWithPopup","googleAuthProvider","then","credentials","catch","e","displayName","LogoutBtn","showModal","setShowModal","_useState3","_useState4","modalContent","setModalContent","_useState5","_useState6","isAuthenticated","setIsAuthenticated","location","useLocation","toggleModal","content","prevState","to","className","pathname","GoogleAuthProvider","newState","PopUpWindow","LogInForm","RegistrationForm","PsyPageWrapper","Header","Filters"],"sourceRoot":""}