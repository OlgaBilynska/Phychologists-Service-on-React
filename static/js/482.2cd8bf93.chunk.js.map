{"version":3,"file":"static/js/482.2cd8bf93.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Filters/Filters.styled.js","components/Filters/Filters.jsx","components/Header/Header.styled.js","components/RegistrationForm/RegistrationForm.jsx","components/LogoutBtn/LogoutBtn.jsx","components/Auth/Auth.styled.js","components/Auth/Auth.jsx","components/Header/Header.jsx","components/PsyCard/PsyCard.styled.js","components/PsyCard/PsyCard.jsx","components/PsyList/PsyList.styled.js","components/ReviewsCard/ReviewsCard.styled.js","components/ReviewsCard/ReviewsCard.jsx","components/Reviews/Reviews.styled.js","components/Appointment/Appointment.styled.js","components/Appointment/Appointment.jsx","components/Reviews/Reviews.jsx","pages/PsychologistsPage/PsychologistsPage.styled.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  padding: 0px 128px;\n`;\n","import styled from 'styled-components';\n\nexport const FilterText = styled.label`\n  color: #8a8a89;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.285;\n`;\n\nexport const FilterContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  margin-bottom: 32px;\n  margin-top: 64px;\n\n  max-width: 226px;\n`;\n\nexport const SelectPsyCategory = styled.select`\n  width: 100%;\n  padding: 14px 18px;\n  border: transparent;\n  border-radius: 14px;\n  background: var(--color-accent);\n  color: var(--color-white);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n\n  &:focus:active {\n    border: transparent;\n  }\n`;\n\nexport const FilterOption = styled.option`\n  background-color: var(--color-white);\n  color: var(--color-text);\n`;\n","import {\n  FilterText,\n  FilterContainer,\n  SelectPsyCategory,\n  FilterOption,\n} from './Filters.styled';\n\nconst Filters = () => {\n  return (\n    <FilterContainer>\n      <FilterText>Filters</FilterText>\n      <SelectPsyCategory>\n        <FilterOption>A to Z</FilterOption>\n        <FilterOption>Z to A</FilterOption>\n        <FilterOption>Less than 10$</FilterOption>\n        <FilterOption>Greater than 10$</FilterOption>\n        <FilterOption>Popular</FilterOption>\n        <FilterOption>Not popular</FilterOption>\n        <FilterOption>Show all</FilterOption>\n      </SelectPsyCategory>\n    </FilterContainer>\n  );\n};\n\nexport default Filters;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  padding: 24px 0px;\n\n  border-bottom: 1px solid rgba(25, 26, 21, 0.1);\n`;\n\nexport const HeaderContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const LogoStyled = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.2;\n  letter-spacing: -0.4px;\n`;\n\nexport const LogoAccent = styled.span`\n  color: var(--color-accent);\n  font-weight: 700;\n  letter-spacing: -0.4px;\n`;\n\nexport const DotAccent = styled.span`\n  font-weight: 500;\n`;\n\nexport const NavItemStyled = styled(NavLink)`\n  position: relative;\n  font-size: 16px;\n  line-height: 1.2;\n  color: var(--color-text);\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &.psy-active {\n    &::after {\n      content: '';\n      position: absolute;\n      top: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      display: block;\n      margin-top: 4px;\n      background-color: var(--color-accent);\n      width: 8px;\n      height: 8px;\n\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const ButtonBlockStyled = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const NavBlockStyled = styled.ul`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const LogoAndNav = styled.div`\n  display: flex;\n  gap: 130px;\n  align-items: center;\n`;\n\nexport const BtnLogIn = styled.button`\n  padding: 14px 39px;\n\n  border-radius: 30px;\n  border: 1px solid rgba(25, 26, 21, 0.2);\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.16px;\n  background-color: transparent;\n`;\n\nexport const AuthAndButtonBlock = styled.div`\n  display: flex;\n  gap: 28px;\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { auth } from '../../firebase.js';\nimport { createUserWithEmailAndPassword } from '@firebase/auth';\n\nimport Button from 'components/Button';\nimport sprite from '../../assets/sprite.svg';\nimport {\n  RegTitle,\n  RegText,\n  FormWrapper,\n  EyeIcon,\n} from './RegistrationForm.styled';\nimport {\n  ErrorText,\n  Input,\n  FormikWrapper,\n  InputWrapper,\n} from 'components/LogInForm/LoginForm.styled';\nimport { useState } from 'react';\n\nconst RegistrationForm = () => {\n  // const [values, setValues] = useState('');\n  const [toggleIcon, setToggleIcon] = useState(`${sprite}#icon-eye-off`);\n  const [type, setType] = useState('password');\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Name is a required field.'),\n    email: yup.string().email().required('Email is a required field.'),\n    password: yup\n      .string()\n      .min(6)\n      .max(20)\n      .required('Password is a required field.'),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    console.log('val', values);\n    try {\n      await createUserWithEmailAndPassword(\n        auth,\n        values.name,\n        values.email,\n        values.password\n      );\n      // setValues(values);\n      resetForm();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const togglePassInput = () => {\n    if (type === 'password') {\n      setType('text');\n      setToggleIcon(`${sprite}#icon-eye`);\n    } else {\n      setType('password');\n      setToggleIcon(`${sprite}#icon-eye-off`);\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <RegTitle>Registration</RegTitle>\n      <RegText>\n        Thank you for your interest in our platform! In order to register, we\n        need some information. Please provide us with the following information.\n      </RegText>\n      <Formik\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n        initialValues={initialValues}\n      >\n        <Form autoComplete=\"off\">\n          <FormikWrapper>\n            <label>\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <FormError name=\"name\" />\n            </label>\n            <label>\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n              <FormError name=\"email\" />\n            </label>\n            <InputWrapper>\n              <Input type={type} name=\"password\" placeholder=\"Password\" />\n              <EyeIcon onClick={togglePassInput}>\n                <use href={toggleIcon} />\n              </EyeIcon>\n            </InputWrapper>\n            <FormError name=\"password\" />\n          </FormikWrapper>\n          <Button type=\"submit\" width=\"100%\">\n            Sign Up\n          </Button>\n        </Form>\n      </Formik>\n    </FormWrapper>\n  );\n};\n\nexport default RegistrationForm;\n","import { signOut } from '@firebase/auth';\nimport { auth } from '../../firebase';\nimport { ButtonStyled } from 'components/Button/Button.styled';\n\nconst LogoutBtn = () => {\n  const onLogOutClick = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <ButtonStyled\n      backgroundcolor=\"transparent\"\n      border=\"rgba(25, 26, 21, 0.20)\"\n      color=\"var(--color-text)\"\n      fontSize=\"16px\"\n      type=\"submit\"\n      onClick={onLogOutClick}\n    >\n      Logout\n    </ButtonStyled>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from 'styled-components';\n\nexport const AuthBlock = styled.div`\n  display: flex;\n  gap: 14px;\n  align-items: center;\n`;\n\nexport const AuthText = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.16px;\n`;\n\nexport const IconUser = styled.svg`\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n  border-radius: 10px;\n\n  fill: var(--color-white);\n  background-color: var(--color-accent);\n`;\n\nexport const AuthLogoutBlock = styled.div`\n  display: flex;\n  gap: 28px;\n  align-items: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { getAuth, signInWithPopup } from 'firebase/auth';\nimport LogoutBtn from 'components/LogoutBtn';\nimport { app, googleAuthProvider } from '../../firebase';\nimport { AuthBlock, IconUser, AuthText, AuthLogoutBlock } from './Auth.styled';\nimport sprite from '../../assets/sprite.svg';\n\nconst AuthProvider = ({ onAuthStateChanged }) => {\n  const auth = getAuth(app);\n  const [user, setUser] = useState(auth.currentUser);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged(maybeUser => {\n      if (maybeUser === null) {\n        setUser(maybeUser);\n\n        if (onAuthStateChanged) {\n          onAuthStateChanged(false);\n        }\n      } else {\n        signInWithPopup(auth, googleAuthProvider)\n          .then(credentials => {\n            setUser(credentials.user);\n            if (onAuthStateChanged) {\n              onAuthStateChanged(true);\n            }\n          })\n          .catch(e => console.error(e));\n      }\n    });\n\n    return unsub;\n  }, [auth, onAuthStateChanged]);\n\n  return user !== null ? (\n    <AuthLogoutBlock>\n      <AuthBlock>\n        <IconUser>\n          <use href={`${sprite}#icon-user`} />\n        </IconUser>\n        <AuthText> {user.displayName}</AuthText>\n      </AuthBlock>\n      <LogoutBtn />\n    </AuthLogoutBlock>\n  ) : null;\n};\n\nexport default AuthProvider;\n","import { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Button from 'components/Button';\nimport PopUpWindow from 'components/PopUpWindow';\nimport { ContainerStyled } from 'components/Container/Container.styled';\nimport {\n  HeaderWrapper,\n  LogoStyled,\n  LogoAccent,\n  NavItemStyled,\n  ButtonBlockStyled,\n  NavBlockStyled,\n  LogoAndNav,\n  DotAccent,\n  HeaderContentWrapper,\n  AuthAndButtonBlock,\n} from './Header.styled';\nimport LogInForm from 'components/LogInForm';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport AuthProvider from 'components/Auth/Auth';\nimport { onAuthStateChanged } from '@firebase/auth';\n\nconst Header = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const location = useLocation();\n\n  const toggleModal = content => {\n    setShowModal(prevState => !prevState);\n    setModalContent(content);\n  };\n\n  const handleAuthStateChanged = () => {\n    if (onAuthStateChanged) {\n      // setIsAuthenticated(prevState => !prevState);\n    } else return;\n  };\n\n  return (\n    <HeaderWrapper>\n      <ContainerStyled>\n        <HeaderContentWrapper>\n          <LogoAndNav>\n            <LogoStyled to=\"/\">\n              <LogoAccent>\n                psychologists<DotAccent>.</DotAccent>\n              </LogoAccent>\n              services\n            </LogoStyled>\n            <NavBlockStyled>\n              <li>\n                <NavItemStyled to=\"/\">Home</NavItemStyled>\n              </li>\n              <li>\n                <NavItemStyled\n                  to=\"/psychologists\"\n                  className={\n                    location.pathname === '/psychologists' ? 'psy-active' : ''\n                  }\n                >\n                  Psychologists\n                </NavItemStyled>\n              </li>\n              <li>\n                <NavItemStyled\n                  to=\"/favorites\"\n                  className={\n                    location.pathname === '/favorites' ? 'psy-active' : ''\n                  }\n                >\n                  Favorites\n                </NavItemStyled>\n              </li>\n            </NavBlockStyled>\n          </LogoAndNav>\n\n          <AuthAndButtonBlock>\n            <div>\n              <AuthProvider />\n              <AuthProvider onAuthStateChanged={handleAuthStateChanged} />\n            </div>\n            <ButtonBlockStyled>\n              <div onClick={() => toggleModal('login')}>\n                <Button\n                  backgroundcolor=\"transparent\"\n                  border=\"rgba(25, 26, 21, 0.20)\"\n                  color=\"var(--color-text)\"\n                  fontSize=\"16px\"\n                  type=\"button\"\n                >\n                  Log In\n                </Button>\n              </div>\n              <div onClick={() => toggleModal('registration')}>\n                <Button type=\"button\" fontSize=\"16px\">\n                  Registration\n                </Button>\n              </div>\n            </ButtonBlockStyled>\n          </AuthAndButtonBlock>\n        </HeaderContentWrapper>\n      </ContainerStyled>\n      {showModal && (\n        <PopUpWindow onClick={toggleModal}>\n          {modalContent === 'login' ? <LogInForm /> : <RegistrationForm />}\n        </PopUpWindow>\n      )}\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  gap: 24px;\n\n  padding: 24px;\n\n  width: 100%;\n  border-radius: 24px;\n  background-color: #fbfbfb;\n`;\n\nexport const ImgPsy = styled.img`\n  width: 96px;\n  height: 96px;\n  border-radius: 15px;\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n\n  width: 120px;\n  height: 120px;\n  padding: 12px;\n  border: 2px solid #fc832c33;\n  border-radius: 15px;\n`;\n\nexport const OnlineCircleBig = styled.div`\n  position: absolute;\n  top: 9px;\n  right: 10px;\n\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: #38cd3e;\n\n  border: 2px solid #fbfbfb;\n`;\n\nexport const OnlineSvg = styled.svg`\n  position: absolute;\n  top: 9px;\n  right: 14px;\n\n  width: 14px;\n  height: 14px;\n  stroke: #fbfbfb;\n  fill: #38cd3e;\n`;\n\nexport const StarSvg = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: #ffc531;\n`;\n\nexport const HeartSvg = styled.svg`\n  width: 26px;\n  height: 26px;\n  stroke: var(--color-text);\n  fill: var(--color-white);\n  margin-left: 28px;\n`;\n\nexport const HeartIconStyled = styled.svg`\n  width: 26px;\n  height: 26px;\n  stroke: var(--color-accent);\n  fill: var(--color-accent);\n  margin-left: 28px;\n`;\n\nexport const HeartWrapper = styled.button`\n  width: 26px;\n  height: 26px;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const ContentWrapper = styled.div``;\n\nexport const JobRatingBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const JobTitle = styled.p`\n  color: #8a8a89;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const NameText = styled.p`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1;\n`;\n\nexport const JobBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const RatingText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  padding-right: 16px;\n\n  ::after {\n    content: '';\n    border-right: 1px solid red;\n  }\n`;\n\nexport const RatingBlock = styled.div`\n  display: flex;\n  /* align-items: flex-start; */\n  gap: 8px;\n`;\n\nexport const PriceText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  padding-left: 16px;\n`;\n\nexport const PriceAccentText = styled.span`\n  color: #38cd3e;\n  font-size: 16;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const RatingPriceBlock = styled.div`\n  display: flex;\n`;\n\nexport const CategoryWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin-bottom: 24px;\n`;\n\nexport const CategoryText = styled.li`\n  padding: 8px 16px;\n  background-color: #f3f3f3;\n  border-radius: 24px;\n  color: #8a8a89;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const CategoryValue = styled.span`\n  color: var(--color-text);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n`;\n\nexport const DescriptionText = styled.p`\n  color: rgba(25, 26, 21, 0.5);\n  font-size: 16px;\n  line-height: 1.25;\n\n  margin-bottom: 14px;\n`;\n\nexport const ReadMoreText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  text-decoration-line: underline;\n  cursor: pointer;\n`;\n","import {\n  CardWrapper,\n  ImgPsy,\n  ImgWrapper,\n  JobTitle,\n  NameText,\n  JobBlock,\n  CategoryText,\n  CategoryValue,\n  CategoryWrapper,\n  DescriptionText,\n  RatingText,\n  PriceText,\n  PriceAccentText,\n  RatingPriceBlock,\n  ContentWrapper,\n  JobRatingBlock,\n  StarSvg,\n  HeartSvg,\n  RatingBlock,\n  OnlineCircleBig,\n  ReadMoreText,\n  // HeartIconStyled,\n  // HeartWrapper,\n} from './PsyCard.styled';\nimport sprite from '../../assets/sprite.svg';\nimport { useState } from 'react';\nimport Reviews from 'components/Reviews/Reviews';\n\nconst PsyCard = ({ psychologist, onHeartClick }) => {\n  const {\n    about,\n    avatar_url,\n    experience,\n    initial_consultation,\n    license,\n    name,\n    price_per_hour,\n    rating,\n    specialization,\n    id,\n  } = psychologist;\n\n  const [fullInfo, setFullInfo] = useState(false);\n\n  return (\n    <>\n      <CardWrapper>\n        <ImgWrapper>\n          <ImgPsy alt=\"psychologist\" src={avatar_url} />\n          <OnlineCircleBig></OnlineCircleBig>\n        </ImgWrapper>\n        <ContentWrapper>\n          <JobRatingBlock>\n            <JobBlock>\n              <JobTitle>Psychologist</JobTitle>\n              <NameText>{name}</NameText>\n            </JobBlock>\n            <RatingPriceBlock>\n              <RatingBlock>\n                <StarSvg>\n                  <use href={`${sprite}#icon-star`} />\n                </StarSvg>\n                <RatingText>Rating: {rating}</RatingText>\n              </RatingBlock>\n\n              <PriceText>\n                Price / 1 hour:{' '}\n                <PriceAccentText>{price_per_hour}$</PriceAccentText>\n              </PriceText>\n\n              {/* {isFavoritePsy ? (\n                <HeartWrapper\n                  onClick={() => {\n                    onHeartClick(id);\n                  }}\n                >\n                  <HeartIconStyled>\n                    <use href={`${sprite}#icon-active`} />\n                  </HeartIconStyled>\n                </HeartWrapper>\n              ) : (\n                <HeartWrapper\n                  onClick={() => {\n                    onHeartClick(id);\n                  }}\n                >\n                  <HeartSvg onClick={() => onHeartClick(id)}>\n                    <use href={`${sprite}#icon-heart`} />\n                  </HeartSvg>\n                </HeartWrapper>\n              )} */}\n\n              <HeartSvg onClick={() => onHeartClick(id)}>\n                <use href={`${sprite}#icon-heart`} />\n              </HeartSvg>\n            </RatingPriceBlock>\n          </JobRatingBlock>\n\n          <CategoryWrapper>\n            <CategoryText>\n              Experience: <CategoryValue>{experience}</CategoryValue>\n            </CategoryText>\n            <CategoryText>\n              License: <CategoryValue>{license}</CategoryValue>\n            </CategoryText>\n            <CategoryText>\n              Specialization: <CategoryValue>{specialization}</CategoryValue>\n            </CategoryText>\n            <CategoryText>\n              Initial_consultation:{' '}\n              <CategoryValue>{initial_consultation}</CategoryValue>\n            </CategoryText>\n          </CategoryWrapper>\n\n          <DescriptionText>{about}</DescriptionText>\n\n          {fullInfo ? (\n            <Reviews psychologist={psychologist} />\n          ) : (\n            <ReadMoreText\n              onClick={() => {\n                setFullInfo(true);\n              }}\n            >\n              Read more\n            </ReadMoreText>\n          )}\n        </ContentWrapper>\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default PsyCard;\n","import styled from 'styled-components';\n\nexport const PsyListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nexport const LoadMoreWrapper = styled.div`\n  margin: 0 auto;\n  margin-top: 32px;\n`;\n","import styled from 'styled-components';\n\nexport const NameRatingBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const ReviewBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const CircleName = styled.div`\n  position: relative;\n  width: 44px;\n  height: 44px;\n  background-color: rgba(252, 131, 44, 0.2);\n  color: var(--color-accent);\n  border-radius: 50%;\n`;\n\nexport const FirstLetter = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const CircleAndInfo = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n","import sprite from '../../assets/sprite.svg';\nimport { StarSvg } from 'components/PsyCard/PsyCard.styled';\nimport {\n  DescriptionText,\n  RatingBlock,\n} from 'components/PsyCard/PsyCard.styled';\nimport {\n  NameRatingBlock,\n  ReviewBlock,\n  CircleName,\n  CircleAndInfo,\n  FirstLetter,\n} from './ReviewsCard.styled';\n\nexport const ReviewsCard = ({ review }) => {\n  const { comment, rating, reviewer } = review;\n  const firstLetter = reviewer.split('')[0];\n  const fullRating = rating.toFixed(1);\n\n  return (\n    <ReviewBlock>\n      <CircleAndInfo>\n        <CircleName>\n          <FirstLetter>{firstLetter}</FirstLetter>\n        </CircleName>\n        <NameRatingBlock>\n          <p>{reviewer}</p>\n          <RatingBlock>\n            <StarSvg>\n              <use href={`${sprite}#icon-star`} />\n            </StarSvg>\n            <p>{fullRating}</p>\n          </RatingBlock>\n        </NameRatingBlock>\n      </CircleAndInfo>\n\n      <DescriptionText>{comment}</DescriptionText>\n    </ReviewBlock>\n  );\n};\n\nexport default ReviewsCard;\n","import styled from 'styled-components';\n\nexport const ReviewsBlock = styled.ul`\n  margin-top: 48px;\n  margin-bottom: 40px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n`;\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const AppointmentWrapper = styled.div`\n  max-width: 440px;\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const AppointmentTextBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ClockSvg = styled.svg`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 16.83px;\n  width: 20px;\n  height: 20px;\n  stroke: var(--color-text);\n  fill: var(--color-white);\n`;\n\nexport const PhoneTimeBlock = styled.div`\n  display: flex;\n  gap: 8px;\n  :nth-child(1) {\n    width: 50%;\n  }\n  :nth-child(2) {\n    width: 50%;\n  }\n`;\n\nexport const InputsBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormikAppointment = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const PsyBlock = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const ImgPsy = styled.img`\n  width: 44px;\n  height: 44px;\n  border-radius: 15px;\n`;\n\nexport const PsyTextBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const PsyTitle = styled.p`\n  color: #8a8a89;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n`;\n\nexport const PsyName = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\n// import sprite from '../../assets/sprite.svg';\nimport { LogInTitle, LogInText } from 'components/LogInForm/LoginForm.styled';\nimport Button from 'components/Button';\nimport { Input } from 'components/LogInForm/LoginForm.styled';\nimport {\n  AppointmentWrapper,\n  AppointmentTextBlock,\n  PhoneTimeBlock,\n  InputsBlock,\n  FormikAppointment,\n  ImgPsy,\n  PsyBlock,\n  PsyTextBlock,\n  PsyTitle,\n  PsyName,\n} from './Appointment.styled';\nimport { FormError } from 'components/LogInForm/LogInForm';\n// import image from '../../assets/psy-img.jpg';\n\nconst Appointment = ({ psychologist }) => {\n  const { name, avatar_url } = psychologist;\n\n  const initialValues = {\n    name: '',\n    phone: '',\n    time: '',\n    email: '',\n    comment: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Name is a required field.'),\n    phone: yup\n      .number()\n      .min(6)\n      .max(16)\n      .required('Phone number is a required field'),\n    time: yup.date().required('Time is a required field'),\n    email: yup.string().email().required('Email is a required field'),\n    comment: yup.string().required('Write your comment here.'),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n  };\n\n  return (\n    <AppointmentWrapper>\n      <AppointmentTextBlock>\n        <LogInTitle>Make an appointment with a psychologists</LogInTitle>\n        <LogInText>\n          You are on the verge of changing your life for the better. Fill out\n          the short form below to book your personal appointment with a\n          professional psychologist. We guarantee confidentiality and respect\n          for your privacy.\n        </LogInText>\n      </AppointmentTextBlock>\n\n      <PsyBlock>\n        <ImgPsy alt=\"psychologist\" src={avatar_url} />\n        <PsyTextBlock>\n          <PsyTitle>Your psychologist</PsyTitle>\n          <PsyName>{name}</PsyName>\n        </PsyTextBlock>\n      </PsyBlock>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormikAppointment>\n          <InputsBlock>\n            <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n            <FormError name=\"name\" />\n            <PhoneTimeBlock>\n              <Input type=\"phone\" name=\"phone\" placeholder=\"+380\" />\n              <FormError name=\"phone\" />\n\n              <Input\n                type=\"time\"\n                name=\"time\"\n                views={['hours', 'minutes']}\n                format=\"HH:mm\"\n                ampm={false}\n                placeholder=\"00:00\"\n              />\n              <FormError name=\"time\" />\n              {/* < ClockSvg>\n                  <use href={`${sprite}#icon-clock`} />\n                </> */}\n            </PhoneTimeBlock>\n\n            <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n            <FormError name=\"email\" />\n            <Input type=\"text\" name=\"comment\" placeholder=\"Comment\" />\n            <FormError name=\"comment\" />\n          </InputsBlock>\n\n          <Button type=\"submit\" width=\"100%\">\n            Send\n          </Button>\n        </FormikAppointment>\n      </Formik>\n    </AppointmentWrapper>\n  );\n};\n\nexport default Appointment;\n","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport Button from 'components/Button';\nimport ReviewsCard from 'components/ReviewsCard';\nimport { ReviewsBlock } from './Reviews.styled';\nimport PopUpWindow from 'components/PopUpWindow';\nimport Appointment from 'components/Appointment';\n\nconst Reviews = ({ psychologist }) => {\n  const { reviews } = psychologist;\n\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    console.log('toggle');\n    setShowModal(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <ReviewsBlock>\n        {reviews.map(review => (\n          <li>\n            <ReviewsCard review={review} key={nanoid()} />\n          </li>\n        ))}\n      </ReviewsBlock>\n\n      <div onClick={() => toggleModal()}>\n        <Button fontSize={16} padding=\"14px 32px\">\n          Make an appointment\n        </Button>\n      </div>\n\n      {showModal && (\n        <PopUpWindow onClick={toggleModal}>\n          <Appointment psychologist={psychologist} />\n        </PopUpWindow>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const PsyPageWrapper = styled.main`\n  background-color: #f3f3f3;\n  width: 100%;\n  min-height: 100%;\n  padding-bottom: 100px;\n`;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ContainerStyled","styled","_templateObject","_taggedTemplateLiteral","FilterText","FilterContainer","_templateObject2","SelectPsyCategory","_templateObject3","FilterOption","_templateObject4","_jsxs","children","_jsx","HeaderWrapper","HeaderContentWrapper","LogoStyled","NavLink","LogoAccent","DotAccent","_templateObject5","NavItemStyled","_templateObject6","ButtonBlockStyled","_templateObject7","NavBlockStyled","_templateObject8","LogoAndNav","_templateObject9","AuthAndButtonBlock","_templateObject10","_templateObject11","_useState","useState","concat","sprite","_useState2","_slicedToArray","toggleIcon","setToggleIcon","_useState3","_useState4","type","setType","schema","yup","shape","name","required","email","password","min","max","FormError","_ref","ErrorMessage","render","message","ErrorText","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","values","_ref2","resetForm","_context","prev","next","console","log","createUserWithEmailAndPassword","auth","t0","error","stop","_x","_x2","apply","arguments","FormWrapper","RegTitle","RegText","Formik","onSubmit","validationSchema","initialValues","Form","autoComplete","FormikWrapper","Input","placeholder","InputWrapper","EyeIcon","onClick","href","Button","width","onLogOutClick","signOut","ButtonStyled","backgroundcolor","border","color","fontSize","AuthBlock","AuthText","IconUser","AuthLogoutBlock","onAuthStateChanged","getAuth","app","currentUser","user","setUser","useEffect","maybeUser","signInWithPopup","googleAuthProvider","then","credentials","catch","e","displayName","LogoutBtn","showModal","setShowModal","modalContent","setModalContent","location","useLocation","toggleModal","content","prevState","to","className","pathname","AuthProvider","PopUpWindow","LogInForm","RegistrationForm","CardWrapper","ImgPsy","ImgWrapper","OnlineCircleBig","StarSvg","HeartSvg","ContentWrapper","JobRatingBlock","JobTitle","_templateObject12","NameText","_templateObject13","JobBlock","_templateObject14","RatingText","_templateObject15","RatingBlock","_templateObject16","PriceText","_templateObject17","PriceAccentText","_templateObject18","RatingPriceBlock","_templateObject19","CategoryWrapper","_templateObject20","CategoryText","_templateObject21","CategoryValue","_templateObject22","DescriptionText","_templateObject23","ReadMoreText","_templateObject24","psychologist","onHeartClick","about","avatar_url","experience","initial_consultation","license","price_per_hour","rating","specialization","id","fullInfo","setFullInfo","_Fragment","alt","src","Reviews","PsyListWrapper","LoadMoreWrapper","NameRatingBlock","ReviewBlock","CircleName","FirstLetter","CircleAndInfo","review","comment","reviewer","firstLetter","split","fullRating","toFixed","ReviewsBlock","AppointmentWrapper","AppointmentTextBlock","PhoneTimeBlock","InputsBlock","FormikAppointment","PsyBlock","PsyTextBlock","PsyTitle","PsyName","phone","time","LogInTitle","LogInText","views","format","ampm","reviews","map","ReviewsCard","nanoid","padding","Appointment","PsyPageWrapper","size","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}