{"version":3,"file":"static/js/425.7caa2973.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Filters/Filters.styled.js","components/Filters/Filters.jsx","components/Header/Header.styled.js","components/RegistrationForm/RegistrationForm.jsx","components/LogoutBtn/LogoutBtn.jsx","components/Auth/Auth.styled.js","redux/selectors.js","components/Auth/Auth.js","components/Header/Header.jsx","components/PsyCard/PsyCard.styled.js","components/ReviewsCard/ReviewsCard.styled.js","components/ReviewsCard/ReviewsCard.jsx","components/Reviews/Reviews.styled.js","components/Appointment/Appointment.styled.js","components/Appointment/Appointment.jsx","components/Reviews/Reviews.jsx","pages/PsychologistsPage/PsychologistsPage.styled.js","components/PsyCard/PsyCard.jsx","components/PsyList/PsyList.styled.js","components/PsyList/PsyList.jsx","pages/PsychologistsPage/PsychologistsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  padding: 0px 128px;\n`;\n","import styled from 'styled-components';\n\nexport const FilterText = styled.label`\n  color: #8a8a89;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.285;\n`;\n\nexport const FilterContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  margin-bottom: 32px;\n  margin-top: 64px;\n\n  max-width: 226px;\n`;\n\nexport const SelectPsyCategory = styled.select`\n  width: 100%;\n  padding: 14px 18px;\n  border: transparent;\n  border-radius: 14px;\n  background: var(--color-accent);\n  color: var(--color-white);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n\n  &:focus:active {\n    border: transparent;\n  }\n`;\n","import {\n  FilterText,\n  FilterContainer,\n  SelectPsyCategory,\n} from './Filters.styled';\n\nconst Filters = () => {\n  return (\n    <FilterContainer>\n      <FilterText>Filters</FilterText>\n      <SelectPsyCategory>\n        <option>A to Z</option>\n        <option>Z to A</option>\n        <option>Less than 10$</option>\n        <option>Greater than 10$</option>\n        <option>Popular</option>\n        <option>Not popular</option>\n        <option>Show all</option>\n      </SelectPsyCategory>\n    </FilterContainer>\n  );\n};\n\nexport default Filters;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  padding: 24px 0px;\n\n  border-bottom: 1px solid rgba(25, 26, 21, 0.1);\n`;\n\nexport const HeaderContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const LogoStyled = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.2;\n  letter-spacing: -0.4px;\n`;\n\nexport const LogoAccent = styled.span`\n  color: var(--color-accent);\n  font-weight: 700;\n  letter-spacing: -0.4px;\n`;\n\nexport const DotAccent = styled.span`\n  font-weight: 500;\n`;\n\nexport const NavItemStyled = styled(NavLink)`\n  position: relative;\n  font-size: 16px;\n  line-height: 1.2;\n  color: var(--color-text);\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &.active {\n    &::after {\n      content: '';\n      position: absolute;\n      top: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      display: block;\n      margin-top: 4px;\n      background-color: var(--color-accent);\n      width: 8px;\n      height: 8px;\n\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const ButtonBlockStyled = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const NavBlockStyled = styled.ul`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const LogoAndNav = styled.div`\n  display: flex;\n  gap: 130px;\n  align-items: center;\n`;\n\nexport const BtnLogIn = styled.button`\n  padding: 14px 39px;\n\n  border-radius: 30px;\n  border: 1px solid rgba(25, 26, 21, 0.2);\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.16px;\n  background-color: transparent;\n`;\n\nexport const AuthAndButtonBlock = styled.div`\n  display: flex;\n  gap: 28px;\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { auth } from '../../firebase.js';\nimport { createUserWithEmailAndPassword } from '@firebase/auth';\nimport { useState } from 'react';\n\nimport Button from 'components/Button';\nimport sprite from '../../assets/sprite.svg';\nimport {\n  RegTitle,\n  RegText,\n  FormWrapper,\n  EyeIcon,\n} from './RegistrationForm.styled';\nimport {\n  ErrorText,\n  Input,\n  FormikWrapper,\n  InputWrapper,\n} from 'components/LogInForm/LoginForm.styled';\n\nconst RegistrationForm = () => {\n  console.log('registration');\n  const [values, setValues] = useState('');\n\n  console.log('v', values);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Name is a required field.'),\n    email: yup.string().email().required('Email is a required field.'),\n    password: yup\n      .string()\n      .min(6)\n      .max(20)\n      .required('Password is a required field.'),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    console.log('val', values);\n    try {\n      await createUserWithEmailAndPassword(\n        auth,\n        values.name,\n        values.email,\n        values.password\n      );\n      setValues(values);\n      resetForm();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <RegTitle>Registration</RegTitle>\n      <RegText>\n        Thank you for your interest in our platform! In order to register, we\n        need some information. Please provide us with the following information.\n      </RegText>\n      <Formik\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n        initialValues={initialValues}\n      >\n        <Form autoComplete=\"off\">\n          <FormikWrapper>\n            <label>\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <FormError name=\"name\" />\n            </label>\n            <label>\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n              <FormError name=\"email\" />\n            </label>\n            <InputWrapper>\n              <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n              <EyeIcon>\n                <use href={`${sprite}#icon-eye-off`} />\n              </EyeIcon>\n            </InputWrapper>\n            <FormError name=\"password\" />\n          </FormikWrapper>\n          <Button type=\"submit\" width=\"100%\">\n            Sign Up\n          </Button>\n        </Form>\n      </Formik>\n    </FormWrapper>\n  );\n};\n\nexport default RegistrationForm;\n","import { signOut } from '@firebase/auth';\nimport { auth } from '../../firebase';\nimport { ButtonStyled } from 'components/Button/Button.styled';\n\nconst LogoutBtn = () => {\n  const onLogOutClick = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <ButtonStyled\n      backgroundcolor=\"transparent\"\n      border=\"rgba(25, 26, 21, 0.20)\"\n      color=\"var(--color-text)\"\n      fontSize=\"16px\"\n      type=\"submit\"\n      onClick={onLogOutClick}\n    >\n      Logout\n    </ButtonStyled>\n  );\n};\n\nexport default LogoutBtn;\n","import styled from 'styled-components';\n\nexport const AuthBlock = styled.div`\n  display: flex;\n  gap: 14px;\n  align-items: center;\n`;\n\nexport const AuthText = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.16px;\n`;\n\nexport const IconUser = styled.svg`\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n  border-radius: 10px;\n\n  fill: var(--color-white);\n  background-color: var(--color-accent);\n`;\n\nexport const AuthLogoutBlock = styled.div`\n  display: flex;\n  gap: 28px;\n  align-items: center;\n`;\n","// Psychologists\nexport const selectPsychologists = state => state.psychologists.psychologists;\nexport const selectPsychologistsIsLoading = state =>\n  state.psychologists.isLoading;\nexport const selectPsychologistsError = state => state.psychologists.error;\n\n// Favorites\nexport const selectFavoritePsychologists = state => state.favorites.favorites;\nexport const selectFavoritesIsLoading = state => state.favorites.isLoading;\nexport const selectFavoritesError = state => state.favorites.error;\n\n// Authentication\nexport const selectUserAuthenticated = state => state.auth.isAuthenticated;\nexport const selectUserData = state => state.auth.userData;\nexport const selectUserIsLoading = state => state.auth.isLoading;\nexport const selectUserError = state => state.auth.error;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAuth, signInWithPopup } from 'firebase/auth';\nimport LogoutBtn from 'components/LogoutBtn';\nimport { app, googleAuthProvider } from '../../firebase';\nimport { AuthBlock, IconUser, AuthText, AuthLogoutBlock } from './Auth.styled';\nimport sprite from '../../assets/sprite.svg';\nimport { selectUserData } from '../../redux/selectors';\n\nconst AuthProvider = ({ onAuthStateChanged }) => {\n  const auth = getAuth(app);\n  const [user, setUser] = useState(auth.currentUser);\n\n  const userInfo = useSelector(selectUserData);\n  console.log('userInfo', userInfo);\n\n  console.log('email', auth?.currentUser?.email);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged(maybeUser => {\n      if (maybeUser === null) {\n        setUser(maybeUser);\n\n        if (onAuthStateChanged) {\n          onAuthStateChanged(false);\n        }\n      } else {\n        signInWithPopup(auth, googleAuthProvider)\n          .then(credentials => {\n            setUser(credentials.user);\n            if (onAuthStateChanged) {\n              onAuthStateChanged(true);\n            }\n          })\n          .catch(e => console.error(e));\n\n        // createUserWithEmailAndPassword(auth, values.email, values.password)\n        //   .then(credentials => {\n        //     console.log('cre', credentials);\n        //   })\n        //   .catch(e => console.error(e));\n      }\n    });\n\n    return unsub;\n  }, [auth, onAuthStateChanged]);\n\n  return user !== null ? (\n    <AuthLogoutBlock>\n      <AuthBlock>\n        <IconUser>\n          <use href={`${sprite}#icon-user`} />\n        </IconUser>\n        <AuthText> {user.displayName}</AuthText>\n      </AuthBlock>\n      <LogoutBtn />\n    </AuthLogoutBlock>\n  ) : null;\n};\n\nexport default AuthProvider;\n","import { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Button from 'components/Button';\nimport PopUpWindow from 'components/PopUpWindow';\nimport { ContainerStyled } from 'components/Container/Container.styled';\nimport {\n  HeaderWrapper,\n  LogoStyled,\n  LogoAccent,\n  NavItemStyled,\n  ButtonBlockStyled,\n  NavBlockStyled,\n  LogoAndNav,\n  DotAccent,\n  HeaderContentWrapper,\n  AuthAndButtonBlock,\n} from './Header.styled';\nimport LogInForm from 'components/LogInForm';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport GoogleAuthProvider from 'components/Auth/Auth';\n\nconst Header = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const location = useLocation();\n\n  const toggleModal = content => {\n    setShowModal(prevState => !prevState);\n    setModalContent(content);\n  };\n\n  const handleAuthStateChanged = newState => {\n    setIsAuthenticated(newState);\n  };\n\n  // const setUserStatus = user => {\n  //   if (user) {\n  //     return setIsAuthenticated(true);\n  //   }\n  // };\n\n  return (\n    <HeaderWrapper>\n      <ContainerStyled>\n        <HeaderContentWrapper>\n          <LogoAndNav>\n            <LogoStyled to=\"/\">\n              <LogoAccent>\n                psychologists<DotAccent>.</DotAccent>\n              </LogoAccent>\n              services\n            </LogoStyled>\n            <NavBlockStyled>\n              <li>\n                <NavItemStyled to=\"/\">Home</NavItemStyled>\n              </li>\n              <li>\n                <NavItemStyled\n                  to=\"/psychologists\"\n                  className={\n                    location.pathname === '/psychologists' ? 'active' : ''\n                  }\n                >\n                  Psychologists\n                </NavItemStyled>\n              </li>\n              <li>\n                <NavItemStyled\n                  to=\"/favorites\"\n                  className={location.pathname === '/favorites' ? 'active' : ''}\n                >\n                  Favorites\n                </NavItemStyled>\n              </li>\n            </NavBlockStyled>\n          </LogoAndNav>\n\n          <AuthAndButtonBlock>\n            {isAuthenticated ? (\n              <div>\n                <GoogleAuthProvider\n                  // user={user => setUserStatus(user)}\n                  onAuthStateChanged={handleAuthStateChanged}\n                />\n              </div>\n            ) : (\n              <ButtonBlockStyled>\n                <div onClick={() => toggleModal('login')}>\n                  <Button\n                    backgroundcolor=\"transparent\"\n                    border=\"rgba(25, 26, 21, 0.20)\"\n                    color=\"var(--color-text)\"\n                    fontSize=\"16px\"\n                    type=\"button\"\n                  >\n                    Log In\n                  </Button>\n                </div>\n                <div onClick={() => toggleModal('registration')}>\n                  <Button type=\"button\" fontSize=\"16px\">\n                    Registration\n                  </Button>\n                </div>\n              </ButtonBlockStyled>\n            )}\n          </AuthAndButtonBlock>\n        </HeaderContentWrapper>\n      </ContainerStyled>\n      {showModal && (\n        <PopUpWindow onClick={toggleModal}>\n          {modalContent === 'login' ? <LogInForm /> : <RegistrationForm />}\n        </PopUpWindow>\n      )}\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  gap: 24px;\n\n  padding: 24px;\n\n  width: 100%;\n  border-radius: 24px;\n  background-color: #fbfbfb;\n`;\n\nexport const ImgPsy = styled.img`\n  width: 96px;\n  height: 96px;\n  border-radius: 15px;\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n\n  width: 120px;\n  height: 120px;\n  padding: 12px;\n  border: 2px solid #fc832c33;\n  border-radius: 15px;\n`;\n\nexport const OnlineCircleBig = styled.div`\n  position: absolute;\n  top: 9px;\n  right: 10px;\n\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: #38cd3e;\n\n  border: 2px solid #fbfbfb;\n`;\n\nexport const OnlineSvg = styled.svg`\n  position: absolute;\n  top: 9px;\n  right: 14px;\n\n  width: 14px;\n  height: 14px;\n  stroke: #fbfbfb;\n  fill: #38cd3e;\n`;\n\nexport const StarSvg = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: #ffc531;\n`;\n\nexport const HeartSvg = styled.svg`\n  width: 26px;\n  height: 26px;\n  stroke: var(--color-text);\n  fill: var(--color-white);\n  margin-left: 28px;\n`;\n\nexport const ContentWrapper = styled.div``;\n\nexport const JobRatingBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const JobTitle = styled.p`\n  color: #8a8a89;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const NameText = styled.p`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1;\n`;\n\nexport const JobBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const RatingText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  padding-right: 16px;\n\n  ::after {\n    content: '';\n    border-right: 1px solid red;\n  }\n`;\n\nexport const RatingBlock = styled.div`\n  display: flex;\n  /* align-items: flex-start; */\n  gap: 8px;\n`;\n\nexport const PriceText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  padding-left: 16px;\n`;\n\nexport const PriceAccentText = styled.span`\n  color: #38cd3e;\n  font-size: 16;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const RatingPriceBlock = styled.div`\n  display: flex;\n`;\n\nexport const CategoryWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin-bottom: 24px;\n`;\n\nexport const CategoryText = styled.li`\n  padding: 8px 16px;\n  background-color: #f3f3f3;\n  border-radius: 24px;\n  color: #8a8a89;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const CategoryValue = styled.span`\n  color: var(--color-text);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n`;\n\nexport const DescriptionText = styled.p`\n  color: rgba(25, 26, 21, 0.5);\n  font-size: 16px;\n  line-height: 1.25;\n\n  margin-bottom: 14px;\n`;\n\nexport const ReadMoreText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  text-decoration-line: underline;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const NameRatingBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const ReviewBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const CircleName = styled.div`\n  position: relative;\n  width: 44px;\n  height: 44px;\n  background-color: rgba(252, 131, 44, 0.2);\n  color: var(--color-accent);\n  border-radius: 50%;\n`;\n\nexport const FirstLetter = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const CircleAndInfo = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n","import sprite from '../../assets/sprite.svg';\nimport { StarSvg } from 'components/PsyCard/PsyCard.styled';\nimport {\n  DescriptionText,\n  RatingBlock,\n} from 'components/PsyCard/PsyCard.styled';\nimport {\n  NameRatingBlock,\n  ReviewBlock,\n  CircleName,\n  CircleAndInfo,\n  FirstLetter,\n} from './ReviewsCard.styled';\n\nexport const ReviewsCard = ({ review }) => {\n  const { comment, rating, reviewer } = review;\n  const firstLetter = reviewer.split('')[0];\n  const fullRating = rating.toFixed(1);\n\n  return (\n    <ReviewBlock>\n      <CircleAndInfo>\n        <CircleName>\n          <FirstLetter>{firstLetter}</FirstLetter>\n        </CircleName>\n        <NameRatingBlock>\n          <p>{reviewer}</p>\n          <RatingBlock>\n            <StarSvg>\n              <use href={`${sprite}#icon-star`} />\n            </StarSvg>\n            <p>{fullRating}</p>\n          </RatingBlock>\n        </NameRatingBlock>\n      </CircleAndInfo>\n\n      <DescriptionText>{comment}</DescriptionText>\n    </ReviewBlock>\n  );\n};\n\nexport default ReviewsCard;\n","import styled from 'styled-components';\n\nexport const ReviewsBlock = styled.ul`\n  margin-top: 48px;\n  margin-bottom: 40px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n`;\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const AppointmentWrapper = styled.div`\n  max-width: 440px;\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const AppointmentTextBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ClockSvg = styled.svg`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 16.83px;\n  width: 20px;\n  height: 20px;\n  stroke: var(--color-text);\n  fill: var(--color-white);\n`;\n\nexport const PhoneTimeBlock = styled.div`\n  display: flex;\n  gap: 8px;\n  :nth-child(1) {\n    width: 50%;\n  }\n  :nth-child(2) {\n    width: 50%;\n  }\n`;\n\nexport const InputsBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormikAppointment = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const PsyBlock = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const ImgPsy = styled.img`\n  width: 44px;\n  height: 44px;\n  border-radius: 15px;\n`;\n\nexport const PsyTextBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const PsyTitle = styled.p`\n  color: #8a8a89;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n`;\n\nexport const PsyName = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\n// import sprite from '../../assets/sprite.svg';\nimport { LogInTitle, LogInText } from 'components/LogInForm/LoginForm.styled';\nimport Button from 'components/Button';\nimport { Input } from 'components/LogInForm/LoginForm.styled';\nimport {\n  AppointmentWrapper,\n  AppointmentTextBlock,\n  PhoneTimeBlock,\n  InputsBlock,\n  FormikAppointment,\n  ImgPsy,\n  PsyBlock,\n  PsyTextBlock,\n  PsyTitle,\n  PsyName,\n} from './Appointment.styled';\nimport { FormError } from 'components/LogInForm/LogInForm';\n// import image from '../../assets/psy-img.jpg';\n\nconst Appointment = ({ psychologist }) => {\n  const { name, avatar_url } = psychologist;\n\n  const initialValues = {\n    name: '',\n    phone: '',\n    time: '',\n    email: '',\n    comment: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Name is a required field.'),\n    phone: yup\n      .number()\n      .min(6)\n      .max(16)\n      .required('Phone number is a required field'),\n    time: yup.date().required('Time is a required field'),\n    email: yup.string().email().required('Email is a required field'),\n    comment: yup.string().required('Write your comment here.'),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n  };\n\n  return (\n    <AppointmentWrapper>\n      <AppointmentTextBlock>\n        <LogInTitle>Make an appointment with a psychologists</LogInTitle>\n        <LogInText>\n          You are on the verge of changing your life for the better. Fill out\n          the short form below to book your personal appointment with a\n          professional psychologist. We guarantee confidentiality and respect\n          for your privacy.\n        </LogInText>\n      </AppointmentTextBlock>\n\n      <PsyBlock>\n        <ImgPsy alt=\"psychologist\" src={avatar_url} />\n        <PsyTextBlock>\n          <PsyTitle>Your psychologist</PsyTitle>\n          <PsyName>{name}</PsyName>\n        </PsyTextBlock>\n      </PsyBlock>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormikAppointment>\n          <InputsBlock>\n            <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n            <FormError name=\"name\" />\n            <PhoneTimeBlock>\n              <Input type=\"phone\" name=\"phone\" placeholder=\"+380\" />\n              <FormError name=\"phone\" />\n\n              <Input\n                type=\"time\"\n                name=\"time\"\n                views={['hours', 'minutes']}\n                format=\"HH:mm\"\n                ampm={false}\n                placeholder=\"00:00\"\n              />\n              <FormError name=\"time\" />\n              {/* < ClockSvg>\n                  <use href={`${sprite}#icon-clock`} />\n                </> */}\n            </PhoneTimeBlock>\n\n            <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n            <FormError name=\"email\" />\n            <Input type=\"text\" name=\"comment\" placeholder=\"Comment\" />\n            <FormError name=\"comment\" />\n          </InputsBlock>\n\n          <Button type=\"submit\" width=\"100%\">\n            Send\n          </Button>\n        </FormikAppointment>\n      </Formik>\n    </AppointmentWrapper>\n  );\n};\n\nexport default Appointment;\n","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport Button from 'components/Button';\nimport ReviewsCard from 'components/ReviewsCard';\nimport { ReviewsBlock } from './Reviews.styled';\nimport PopUpWindow from 'components/PopUpWindow';\nimport Appointment from 'components/Appointment';\n\nconst Reviews = ({ psychologist }) => {\n  const { reviews } = psychologist;\n\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    console.log('toggle');\n    setShowModal(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <ReviewsBlock>\n        {reviews.map(review => (\n          <li>\n            <ReviewsCard review={review} key={nanoid()} />\n          </li>\n        ))}\n      </ReviewsBlock>\n\n      <div onClick={() => toggleModal()}>\n        <Button fontSize={16} padding=\"14px 32px\">\n          Make an appointment\n        </Button>\n      </div>\n\n      {showModal && (\n        <PopUpWindow onClick={toggleModal}>\n          <Appointment psychologist={psychologist} />\n        </PopUpWindow>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const PsyPageWrapper = styled.main`\n  background-color: #f3f3f3;\n  width: 100%;\n  min-height: 100%;\n  padding-bottom: 100px;\n`;\n","import {\n  CardWrapper,\n  ImgPsy,\n  ImgWrapper,\n  JobTitle,\n  NameText,\n  JobBlock,\n  CategoryText,\n  CategoryValue,\n  CategoryWrapper,\n  DescriptionText,\n  RatingText,\n  PriceText,\n  PriceAccentText,\n  RatingPriceBlock,\n  ContentWrapper,\n  JobRatingBlock,\n  StarSvg,\n  HeartSvg,\n  RatingBlock,\n  OnlineCircleBig,\n  ReadMoreText,\n} from './PsyCard.styled';\nimport sprite from '../../assets/sprite.svg';\nimport { useState } from 'react';\nimport Reviews from 'components/Reviews/Reviews';\n\nconst PsyCard = ({ psychologist }) => {\n  const {\n    about,\n    avatar_url,\n    experience,\n    initial_consultation,\n    license,\n    name,\n    price_per_hour,\n    rating,\n    specialization,\n  } = psychologist;\n\n  const [fullInfo, setFullInfo] = useState(false);\n\n  return (\n    <>\n      <CardWrapper>\n        <ImgWrapper>\n          <ImgPsy alt=\"psychologist\" src={avatar_url} />\n          <OnlineCircleBig></OnlineCircleBig>\n        </ImgWrapper>\n        <ContentWrapper>\n          <JobRatingBlock>\n            <JobBlock>\n              <JobTitle>Psychologist</JobTitle>\n              <NameText>{name}</NameText>\n            </JobBlock>\n            <RatingPriceBlock>\n              <RatingBlock>\n                <StarSvg>\n                  <use href={`${sprite}#icon-star`} />\n                </StarSvg>\n                <RatingText>Rating: {rating}</RatingText>\n              </RatingBlock>\n\n              <PriceText>\n                Price / 1 hour:{' '}\n                <PriceAccentText>{price_per_hour}$</PriceAccentText>\n              </PriceText>\n              <HeartSvg>\n                <use href={`${sprite}#icon-heart`} />\n              </HeartSvg>\n            </RatingPriceBlock>\n          </JobRatingBlock>\n\n          <CategoryWrapper>\n            <CategoryText>\n              Experience: <CategoryValue>{experience}</CategoryValue>\n            </CategoryText>\n            <CategoryText>\n              License: <CategoryValue>{license}</CategoryValue>\n            </CategoryText>\n            <CategoryText>\n              Specialization: <CategoryValue>{specialization}</CategoryValue>\n            </CategoryText>\n            <CategoryText>\n              Initial_consultation:{' '}\n              <CategoryValue>{initial_consultation}</CategoryValue>\n            </CategoryText>\n          </CategoryWrapper>\n\n          <DescriptionText>{about}</DescriptionText>\n\n          {fullInfo ? (\n            <Reviews psychologist={psychologist} />\n          ) : (\n            <ReadMoreText\n              onClick={() => {\n                setFullInfo(true);\n              }}\n            >\n              Read more\n            </ReadMoreText>\n          )}\n        </ContentWrapper>\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default PsyCard;\n","import styled from 'styled-components';\n\nexport const PsyListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nexport const LoadMoreWrapper = styled.div`\n  margin: 0 auto;\n  margin-top: 32px;\n`;\n","import { useEffect, useState } from 'react';\n// import { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport PsyCard from 'components/PsyCard';\nimport { PsyListWrapper, LoadMoreWrapper } from './PsyList.styled.js';\n\nimport { db } from '../../firebase.js';\nimport { ref, onValue } from 'firebase/database';\nimport Button from 'components/Button/index.js';\n// import {\n// collection,\n// query,\n// orderBy,\n//   startAfter,\n//   limit,\n//   getDocs,\n// } from 'firebase/firestore';\n// import { selectPsychologists } from '../../redux/selectors.js';\n\nconst PsyList = () => {\n  const [psychologists, setPsychologists] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const psyPerPage = 3;\n\n  //start the example\n\n  // const [list, setList] = useState([]);\n  // const [page, setPage] = useState(1);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     await fireBaseConfig\n  //       .firestore()\n  //       .collection('psycologists')\n  //       // .orderBy('created', 'desc')\n  //       // .limit(4)\n  //       .onSnapshot(function (querySnapshot) {\n  //         var items = [];\n  //         querySnapshot.forEach(function (doc) {\n  //           items.push({ key: nanoid(), ...doc.data() });\n  //         });\n  //         console.log('first item ', items[0]);\n  //         setPsychologists(items);\n  //       });\n  //   };\n  //   fetchData();\n  // }, []);\n\n  const showNext = ({ item }) => {\n    // if (psychologists.length === 0) {\n    //   alert('Thats all we have for now !');\n    // } else {\n    //   const fetchNextData = async () => {\n    //     await fireBaseConfig\n    //       .firestore()\n    //       .collection('psycologists')\n    //       // .orderBy('created', 'desc')\n    //       .limit(5)\n    //       .startAfter(item.created)\n    //       .onSnapshot(function (querySnapshot) {\n    //         const items = [];\n    //         querySnapshot.forEach(function (doc) {\n    //           items.push({ key: nanoid(), ...doc.data() });\n    //         });\n    //         setPsychologists(items);\n    //         setCurrentPage(currentPage + 1);\n    //       });\n    //   };\n    //   fetchNextData();\n    // }\n  };\n\n  //finish\n\n  const onLoadMore = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  useEffect(() => {\n    const psychologistsRef = ref(db, 'psycologists');\n\n    // const queryRef = query(psychologistsRef);\n    // console.log('q', queryRef);\n\n    // const myQuery = psychologistsRef.limit(4);\n\n    // const first = query(collection(db, 'psycologists'), limit(25));\n    // const documentSnapshots = async () => {\n    //   await getDocs(first);\n    // };\n\n    // const lastVisible =\n    //   documentSnapshots.docs[documentSnapshots.docs.length - 1];\n    // console.log('last', lastVisible);\n\n    // const next = query(\n    //   collection(db, 'psycologists'),\n    //   startAfter(lastVisible),\n    //   limit(25)\n    // );\n\n    const startAt = (currentPage - 1) * psyPerPage;\n    // const endAt = startAt + psyPerPage;\n\n    const query = onValue(psychologistsRef, snapshot => {\n      const data = snapshot.val();\n\n      if (data) {\n        const psychologistsArray = Object.values(data).slice(\n          startAt,\n          startAt + psyPerPage\n        );\n        setPsychologists(prevPsychologists => [\n          ...prevPsychologists,\n          ...psychologistsArray,\n        ]);\n      }\n    });\n\n    return () => query();\n  }, [currentPage]);\n\n  return (\n    <>\n      <PsyListWrapper>\n        {psychologists.map(psychologist => (\n          <PsyCard psychologist={psychologist} key={nanoid()} />\n        ))}\n\n        <LoadMoreWrapper>\n          {psychologists.length < 3 ? (\n            ''\n          ) : (\n            <Button\n              onClick={() =>\n                showNext({ item: psychologists[psychologists.length - 1] })\n              }\n            >\n              Next\n            </Button>\n          )}\n\n          <Button\n            type=\"button\"\n            fontSize={16}\n            padding=\"14px 48px\"\n            onClick={onLoadMore}\n          >\n            Load more\n          </Button>\n        </LoadMoreWrapper>\n      </PsyListWrapper>\n    </>\n  );\n};\n\nexport default PsyList;\n","import Header from 'components/Header';\nimport Filters from 'components/Filters';\nimport PsyList from 'components/PsyList/PsyList';\nimport { ContainerStyled } from 'components/Container/Container.styled';\nimport { PsyPageWrapper } from './PsychologistsPage.styled';\n\nconst PsychologistsPage = () => {\n  return (\n    <PsyPageWrapper>\n      <Header />\n      <ContainerStyled>\n        <Filters />\n        <PsyList />\n      </ContainerStyled>\n    </PsyPageWrapper>\n  );\n};\n\nexport default PsychologistsPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ContainerStyled","styled","_templateObject","_taggedTemplateLiteral","FilterText","FilterContainer","_templateObject2","SelectPsyCategory","_templateObject3","_jsxs","children","_jsx","HeaderWrapper","HeaderContentWrapper","LogoStyled","NavLink","LogoAccent","_templateObject4","DotAccent","_templateObject5","NavItemStyled","_templateObject6","ButtonBlockStyled","_templateObject7","NavBlockStyled","_templateObject8","LogoAndNav","_templateObject9","AuthAndButtonBlock","_templateObject10","_templateObject11","console","log","_useState","useState","_useState2","_slicedToArray","values","setValues","schema","yup","shape","name","required","email","password","min","max","FormError","_ref","ErrorMessage","render","message","ErrorText","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref2","resetForm","_context","prev","next","createUserWithEmailAndPassword","auth","t0","error","stop","_x","_x2","apply","arguments","FormWrapper","RegTitle","RegText","Formik","onSubmit","validationSchema","initialValues","Form","autoComplete","FormikWrapper","Input","type","placeholder","InputWrapper","EyeIcon","href","concat","sprite","Button","width","onLogOutClick","signOut","ButtonStyled","backgroundcolor","border","color","fontSize","onClick","AuthBlock","AuthText","IconUser","AuthLogoutBlock","selectUserData","state","userData","_auth$currentUser","onAuthStateChanged","getAuth","app","currentUser","user","setUser","userInfo","useSelector","useEffect","maybeUser","signInWithPopup","googleAuthProvider","then","credentials","catch","e","displayName","LogoutBtn","showModal","setShowModal","_useState3","_useState4","modalContent","setModalContent","_useState5","_useState6","isAuthenticated","setIsAuthenticated","location","useLocation","toggleModal","content","prevState","to","className","pathname","GoogleAuthProvider","newState","PopUpWindow","LogInForm","RegistrationForm","CardWrapper","ImgPsy","ImgWrapper","OnlineCircleBig","StarSvg","HeartSvg","ContentWrapper","JobRatingBlock","JobTitle","NameText","JobBlock","_templateObject12","RatingText","_templateObject13","RatingBlock","_templateObject14","PriceText","_templateObject15","PriceAccentText","_templateObject16","RatingPriceBlock","_templateObject17","CategoryWrapper","_templateObject18","CategoryText","_templateObject19","CategoryValue","_templateObject20","DescriptionText","_templateObject21","ReadMoreText","_templateObject22","NameRatingBlock","ReviewBlock","CircleName","FirstLetter","CircleAndInfo","review","comment","rating","reviewer","firstLetter","split","fullRating","toFixed","ReviewsBlock","AppointmentWrapper","AppointmentTextBlock","PhoneTimeBlock","InputsBlock","FormikAppointment","PsyBlock","PsyTextBlock","PsyTitle","PsyName","psychologist","avatar_url","phone","time","LogInTitle","LogInText","alt","src","views","format","ampm","reviews","_Fragment","map","ReviewsCard","nanoid","padding","Appointment","PsyPageWrapper","about","experience","initial_consultation","license","price_per_hour","specialization","fullInfo","setFullInfo","Reviews","PsyListWrapper","LoadMoreWrapper","psychologists","setPsychologists","currentPage","setCurrentPage","psychologistsRef","ref","db","startAt","query","onValue","snapshot","data","val","psychologistsArray","Object","slice","prevPsychologists","_toConsumableArray","PsyCard","length","Header","Filters","PsyList","size","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}