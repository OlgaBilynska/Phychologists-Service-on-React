{"version":3,"file":"static/js/392.558c6a23.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Header/Header.styled.js","components/RegistrationForm/RegistrationForm.jsx","auth.jsx","components/Header/Header.jsx","firebase.js","components/Stats/Stats.styled.js","components/Stats/Stats.jsx","components/HomeContent/HomeContent.styled.js","components/HomeContent/HomeContent.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  padding: 0px 128px;\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  padding: 24px 0px;\n\n  border-bottom: 1px solid rgba(25, 26, 21, 0.1);\n`;\n\nexport const HeaderContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const LogoStyled = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.2;\n  letter-spacing: -0.4px;\n`;\n\nexport const LogoAccent = styled.span`\n  color: var(--color-accent);\n  font-weight: 700;\n  letter-spacing: -0.4px;\n`;\n\nexport const DotAccent = styled.span`\n  font-weight: 500;\n`;\n\nexport const NavItemStyled = styled(NavLink)`\n  font-size: 16px;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const ButtonBlockStyled = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const NavBlockStyled = styled.ul`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const LogoAndNav = styled.div`\n  display: flex;\n  gap: 130px;\n  align-items: center;\n`;\n\nexport const BtnLogIn = styled.button`\n  padding: 14px 39px;\n\n  border-radius: 30px;\n  border: 1px solid rgba(25, 26, 21, 0.2);\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.16px;\n  background-color: transparent;\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport Button from 'components/Button';\nimport sprite from '../../assets/sprite.svg';\nimport {\n  RegTitle,\n  RegText,\n  FormWrapper,\n  EyeIcon,\n} from './RegistrationForm.styled';\nimport {\n  ErrorText,\n  Input,\n  FormikWrapper,\n  InputWrapper,\n} from 'components/LogInForm/LoginForm.styled';\n\nconst RegistrationForm = () => {\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n  };\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Name is a required field.'),\n    email: yup.string().email().required('Email is a required field.'),\n    password: yup\n      .string()\n      .min(6)\n      .max(20)\n      .required('Password is a required field.'),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  return (\n    <FormWrapper>\n      <RegTitle>Registration</RegTitle>\n      <RegText>\n        Thank you for your interest in our platform! In order to register, we\n        need some information. Please provide us with the following information.\n      </RegText>\n      <Formik\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n        initialValues={initialValues}\n      >\n        <Form autoComplete=\"off\">\n          <FormikWrapper>\n            <label>\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <FormError name=\"name\" />\n            </label>\n            <label>\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n              <FormError name=\"email\" />\n            </label>\n            <InputWrapper>\n              <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n              <EyeIcon>\n                <use href={`${sprite}#icon-eye-off`} />\n              </EyeIcon>\n            </InputWrapper>\n            <FormError name=\"password\" />\n          </FormikWrapper>\n          <Button type=\"submit\" width=\"100%\">\n            Sign Up\n          </Button>\n        </Form>\n      </Formik>\n    </FormWrapper>\n  );\n};\n\nexport default RegistrationForm;\n","import { useEffect, useState } from 'react';\nimport { getAuth, signInWithPopup } from 'firebase/auth';\nimport { app, googleAuthProvider } from './firebase';\n\nexport const AuthProvider = () => {\n  const auth = getAuth(app);\n  const [user, setUser] = useState(auth.currentUser);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged(maybeUser => {\n      if (maybeUser === null) {\n        return setUser(maybeUser);\n      }\n\n      signInWithPopup(auth, googleAuthProvider).then(credentials => {\n        setUser(credentials.user).catch(e => console.error(e));\n      });\n    });\n\n    return unsub;\n  }, [auth]);\n\n  return user !== null ? <>{user.displayName}</> : <>loading</>;\n};\n","import { useState } from 'react';\nimport Button from 'components/Button';\nimport PopUpWindow from 'components/PopUpWindow';\nimport { ContainerStyled } from 'components/Container/Container.styled';\nimport {\n  HeaderWrapper,\n  LogoStyled,\n  LogoAccent,\n  NavItemStyled,\n  ButtonBlockStyled,\n  NavBlockStyled,\n  LogoAndNav,\n  DotAccent,\n  HeaderContentWrapper,\n} from './Header.styled';\nimport LogInForm from 'components/LogInForm';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { AuthProvider } from 'auth';\n\nconst Header = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n\n  const toggleModal = content => {\n    setShowModal(prevState => !prevState);\n    setModalContent(content);\n  };\n\n  return (\n    <HeaderWrapper>\n      <ContainerStyled>\n        <HeaderContentWrapper>\n          <LogoAndNav>\n            <LogoStyled to=\"/\">\n              <LogoAccent>\n                psychologists<DotAccent>.</DotAccent>\n              </LogoAccent>\n              services\n            </LogoStyled>\n            <NavBlockStyled>\n              <li>\n                <NavItemStyled to=\"/\">Home</NavItemStyled>\n              </li>\n              <li>\n                <NavItemStyled to=\"/psychologists\">Psychologists</NavItemStyled>\n              </li>\n            </NavBlockStyled>\n          </LogoAndNav>\n          <ButtonBlockStyled>\n            <div onClick={() => toggleModal('login')}>\n              <AuthProvider />\n              <Button\n                backgroundcolor=\"transparent\"\n                border=\"rgba(25, 26, 21, 0.20)\"\n                color=\"var(--color-text)\"\n                fontSize=\"16px\"\n                type=\"button\"\n              >\n                Log In\n              </Button>\n            </div>\n            <div onClick={() => toggleModal('registration')}>\n              <Button type=\"button\" fontSize=\"16px\">\n                Registration\n              </Button>\n            </div>\n          </ButtonBlockStyled>\n        </HeaderContentWrapper>\n      </ContainerStyled>\n      {showModal && (\n        <PopUpWindow onClick={toggleModal}>\n          {modalContent === 'login' ? <LogInForm /> : <RegistrationForm />}\n        </PopUpWindow>\n      )}\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import { initializeApp } from '@firebase/app';\nimport { GoogleAuthProvider } from '@firebase/auth';\nimport { getDatabase } from '@firebase/database';\n\nconst fireBaseConfig = {\n  apiKey: 'AIzaSyBU4qg5O9osiestHflSvgxAs7ezEMOURuw',\n  authDomain: 'psychologistsservice.firebaseapp.com',\n  databaseURL:\n    'https://psychologistsservice-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'psychologistsservice',\n  storageBucket: 'psychologistsservice.appspot.com',\n  messagingSenderId: '528389251216',\n  appId: '1:528389251216:web:9ed73bceaa0704a7e0b815',\n  measurementId: 'G-W4HSX9E1T1',\n};\n\nexport const app = initializeApp(fireBaseConfig);\nexport const googleAuthProvider = new GoogleAuthProvider();\nexport const db = getDatabase(app);\n","import styled from 'styled-components';\n\nexport const StatsWrapper = styled.div`\n  position: absolute;\n  top: 333px;\n  left: -101px;\n\n  display: flex;\n  gap: 16px;\n\n  background-color: var(--color-accent);\n  width: 311px;\n  height: 118px;\n\n  padding: 32px;\n\n  border-radius: 20px;\n`;\n\nexport const SvgWrapper = styled.div`\n  width: 54px;\n  height: 54px;\n\n  background-color: var(--color-white);\n\n  border-radius: 13px;\n  padding: 12px;\n`;\n\nexport const SvgCheckIcon = styled.svg`\n  width: 30px;\n  height: 30px;\n\n  fill: var(--color-accent);\n`;\n\nexport const StatsText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  color: var(--color-white);\n`;\n\nexport const StatsDescription = styled.p`\n  font-size: 14px;\n  color: rgba(251, 251, 251, 0.5);\n`;\n\nexport const StatsNumbers = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n`;\n","import sprite from '../../assets/sprite.svg';\nimport {\n  StatsWrapper,\n  SvgWrapper,\n  SvgCheckIcon,\n  StatsDescription,\n  StatsNumbers,\n  StatsText,\n} from './Stats.styled';\n\nconst Stats = () => {\n  return (\n    <StatsWrapper>\n      <SvgWrapper>\n        <SvgCheckIcon>\n          <use href={`${sprite}#icon-check`} />\n        </SvgCheckIcon>\n      </SvgWrapper>\n      <StatsText>\n        <StatsDescription>Experienced psychologists</StatsDescription>\n        <StatsNumbers>15,000</StatsNumbers>\n      </StatsText>\n    </StatsWrapper>\n  );\n};\n\nexport default Stats;\n","import Button from 'components/Button';\nimport styled from 'styled-components';\n\nexport const HeadingStyled = styled.h1`\n  font-size: 82px;\n  margin-bottom: 20px;\n`;\n\nexport const ImgStyled = styled.img`\n  width: 464px;\n  height: 526px;\n  border-radius: 10px;\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n`;\n\nexport const HomeContentWrapper = styled.div`\n  display: flex;\n  gap: 125px;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 78px;\n`;\n\nexport const ContentBlock = styled.div`\n  max-width: 595px;\n`;\n\nexport const TitleAccent = styled.span`\n  color: var(--color-accent);\n  font-style: italic;\n`;\n\nexport const Content = styled.p`\n  margin-bottom: 40px;\n  max-width: 470px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: -0.36px;\n`;\n\nexport const ArrowSvg = styled.svg`\n  width: 18px;\n  height: 18px;\n\n  margin-left: 18px;\n\n  fill: var(--color-white);\n`;\n\nexport const BtnHome = styled(Button)`\n  background-color: red;\n`;\n\nexport const QuestionSvg = styled.svg`\n  position: absolute;\n  top: 53%;\n  left: 45%;\n\n  width: 17px;\n  height: 25px;\n  fill: var(--color-white);\n  transform: translate(-50%, -50%);\n  rotate: 15deg;\n`;\n\nexport const QuestionWrapper = styled.div`\n  position: absolute;\n  top: 185px;\n  left: -33px;\n\n  width: 40px;\n  height: 40px;\n\n  background-color: #54be96;\n  border-radius: 10px;\n  rotate: 345deg;\n`;\n\nexport const UsersSvg = styled.svg`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 19.84px;\n  height: 19.84px;\n\n  fill: var(--color-white);\n`;\n\nexport const UsersWrapper = styled.div`\n  position: absolute;\n  top: 38px;\n  left: 449px;\n\n  width: 40px;\n  height: 40px;\n\n  background-color: #fbc75e;\n  border-radius: 10px;\n\n  rotate: 15deg;\n`;\n","import { useState } from 'react';\nimport image from '../../assets/psy-img.jpg';\nimport Button from 'components/Button/Button';\nimport Stats from 'components/Stats';\nimport sprite from '../../assets/sprite.svg';\n\nimport {\n  HeadingStyled,\n  ImgStyled,\n  ImgWrapper,\n  HomeContentWrapper,\n  ContentBlock,\n  TitleAccent,\n  Content,\n  ArrowSvg,\n  QuestionSvg,\n  UsersSvg,\n  QuestionWrapper,\n  UsersWrapper,\n} from './HomeContent.styled';\nimport PopUpWindow from 'components/PopUpWindow';\nimport Appointment from 'components/Appointment';\n\nconst HomeContent = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(prevState => !prevState);\n  };\n\n  return (\n    <HomeContentWrapper>\n      <ContentBlock>\n        <HeadingStyled>\n          The road to the <TitleAccent>depths</TitleAccent> of the human soul\n        </HeadingStyled>\n        <Content>\n          We help you to reveal your potential, overcome challenges and find a\n          guide in your own life with the help of our experienced psychologists.\n        </Content>\n        <div onClick={toggleModal}>\n          <Button display=\"flex\">\n            <span>Get Started</span>\n            <ArrowSvg>\n              <use href={`${sprite}#icon-arrow`} />\n            </ArrowSvg>\n          </Button>\n        </div>\n        {showModal && (\n          <PopUpWindow onClick={toggleModal}>\n            <Appointment />\n          </PopUpWindow>\n        )}\n      </ContentBlock>\n      <ImgWrapper>\n        <ImgStyled alt=\"psychologist\" src={image} />\n        <QuestionWrapper>\n          <QuestionSvg>\n            <use href={`${sprite}#icon-question`} />\n          </QuestionSvg>\n        </QuestionWrapper>\n        <UsersWrapper>\n          <UsersSvg>\n            <use href={`${sprite}#icon-users`} />\n          </UsersSvg>\n        </UsersWrapper>\n        <Stats />\n      </ImgWrapper>\n    </HomeContentWrapper>\n  );\n};\n\nexport default HomeContent;\n","import styled from 'styled-components';\n\nexport const HomePageWrapper = styled.div`\n  background-image: radial-gradient(\n    circle at bottom right,\n    var(--color-accent-light) 10%,\n    var(--color-white) 70%\n  );\n  width: 100vw;\n  height: 100vh;\n`;\n","import HomeContent from 'components/HomeContent/HomeContent';\nimport Header from 'components/Header';\nimport { ContainerStyled } from 'components/Container/Container.styled';\nimport { HomePageWrapper } from './HomePage.styled';\n\nconst HomePage = () => {\n  return (\n    <HomePageWrapper>\n      <Header />\n      <ContainerStyled>\n        <HomeContent />\n      </ContainerStyled>\n    </HomePageWrapper>\n  );\n};\n\nexport default HomePage;\n"],"names":["ContainerStyled","styled","_templateObject","_taggedTemplateLiteral","HeaderWrapper","HeaderContentWrapper","_templateObject2","LogoStyled","NavLink","_templateObject3","LogoAccent","_templateObject4","DotAccent","_templateObject5","NavItemStyled","_templateObject6","ButtonBlockStyled","_templateObject7","NavBlockStyled","_templateObject8","LogoAndNav","_templateObject9","_templateObject10","schema","yup","shape","name","required","email","password","min","max","FormError","_ref2","_jsx","ErrorMessage","render","message","ErrorText","children","_jsxs","FormWrapper","RegTitle","RegText","Formik","onSubmit","values","_ref","resetForm","validationSchema","initialValues","Form","autoComplete","FormikWrapper","Input","type","placeholder","InputWrapper","EyeIcon","href","concat","sprite","Button","width","AuthProvider","auth","getAuth","app","_useState","useState","currentUser","_useState2","_slicedToArray","user","setUser","useEffect","onAuthStateChanged","maybeUser","signInWithPopup","googleAuthProvider","then","credentials","catch","e","console","error","_Fragment","displayName","showModal","setShowModal","_useState3","_useState4","modalContent","setModalContent","toggleModal","content","prevState","to","onClick","backgroundcolor","border","color","fontSize","PopUpWindow","LogInForm","RegistrationForm","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","GoogleAuthProvider","db","getDatabase","StatsWrapper","SvgWrapper","SvgCheckIcon","StatsText","StatsDescription","StatsNumbers","HeadingStyled","ImgStyled","ImgWrapper","HomeContentWrapper","ContentBlock","TitleAccent","Content","ArrowSvg","QuestionSvg","QuestionWrapper","_templateObject11","UsersSvg","_templateObject12","UsersWrapper","_templateObject13","display","Appointment","alt","src","image","Stats","HomePageWrapper","Header","HomeContent"],"sourceRoot":""}