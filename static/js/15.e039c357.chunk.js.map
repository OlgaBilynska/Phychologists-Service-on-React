{"version":3,"file":"static/js/15.e039c357.chunk.js","mappings":"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","sources":["components/PsyCard/PsyCard.styled.js","components/ReviewsCard/ReviewsCard.styled.js","components/ReviewsCard/ReviewsCard.jsx","components/Reviews/Reviews.styled.js","components/Appointment/Appointment.styled.js","components/Appointment/Appointment.jsx","components/Reviews/Reviews.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  gap: 24px;\n\n  padding: 24px;\n\n  width: 100%;\n  border-radius: 24px;\n  background-color: #fbfbfb;\n`;\n\nexport const ImgPsy = styled.img`\n  width: 96px;\n  height: 96px;\n  border-radius: 15px;\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n\n  width: 120px;\n  height: 120px;\n  padding: 12px;\n  border: 2px solid #fc832c33;\n  border-radius: 15px;\n`;\n\nexport const OnlineCircleBig = styled.div`\n  position: absolute;\n  top: 9px;\n  right: 10px;\n\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: #38cd3e;\n\n  border: 2px solid #fbfbfb;\n`;\n\nexport const OnlineSvg = styled.svg`\n  position: absolute;\n  top: 9px;\n  right: 14px;\n\n  width: 14px;\n  height: 14px;\n  stroke: #fbfbfb;\n  fill: #38cd3e;\n`;\n\nexport const StarSvg = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: #ffc531;\n`;\n\nexport const HeartSvg = styled.svg`\n  width: 26px;\n  height: 26px;\n  stroke: var(--color-text);\n  fill: var(--color-white);\n  margin-left: 28px;\n`;\n\nexport const HeartIconStyled = styled.svg`\n  width: 26px;\n  height: 26px;\n  stroke: var(--color-accent);\n  fill: var(--color-accent);\n  margin-left: 28px;\n`;\n\nexport const HeartWrapper = styled.button`\n  width: 26px;\n  height: 26px;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const ContentWrapper = styled.div``;\n\nexport const JobRatingBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const JobTitle = styled.p`\n  color: #8a8a89;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const NameText = styled.p`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1;\n`;\n\nexport const JobBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const RatingText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  padding-right: 16px;\n\n  ::after {\n    content: '';\n    border-right: 1px solid red;\n  }\n`;\n\nexport const RatingBlock = styled.div`\n  display: flex;\n  /* align-items: flex-start; */\n  gap: 8px;\n`;\n\nexport const PriceText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  padding-left: 16px;\n`;\n\nexport const PriceAccentText = styled.span`\n  color: #38cd3e;\n  font-size: 16;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const RatingPriceBlock = styled.div`\n  display: flex;\n`;\n\nexport const CategoryWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  margin-bottom: 24px;\n`;\n\nexport const CategoryText = styled.li`\n  padding: 8px 16px;\n  background-color: #f3f3f3;\n  border-radius: 24px;\n  color: #8a8a89;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const CategoryValue = styled.span`\n  color: var(--color-text);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n`;\n\nexport const DescriptionText = styled.p`\n  color: rgba(25, 26, 21, 0.5);\n  font-size: 16px;\n  line-height: 1.25;\n\n  margin-bottom: 14px;\n`;\n\nexport const ReadMoreText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  text-decoration-line: underline;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const NameRatingBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const ReviewBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const CircleName = styled.div`\n  position: relative;\n  width: 44px;\n  height: 44px;\n  background-color: rgba(252, 131, 44, 0.2);\n  color: var(--color-accent);\n  border-radius: 50%;\n`;\n\nexport const FirstLetter = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const CircleAndInfo = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n","import sprite from '../../assets/sprite.svg';\nimport { StarSvg } from 'components/PsyCard/PsyCard.styled';\nimport {\n  DescriptionText,\n  RatingBlock,\n} from 'components/PsyCard/PsyCard.styled';\nimport {\n  NameRatingBlock,\n  ReviewBlock,\n  CircleName,\n  CircleAndInfo,\n  FirstLetter,\n} from './ReviewsCard.styled';\n\nexport const ReviewsCard = ({ review }) => {\n  const { comment, rating, reviewer } = review;\n  const firstLetter = reviewer.split('')[0];\n  const fullRating = rating.toFixed(1);\n\n  return (\n    <ReviewBlock>\n      <CircleAndInfo>\n        <CircleName>\n          <FirstLetter>{firstLetter}</FirstLetter>\n        </CircleName>\n        <NameRatingBlock>\n          <p>{reviewer}</p>\n          <RatingBlock>\n            <StarSvg>\n              <use href={`${sprite}#icon-star`} />\n            </StarSvg>\n            <p>{fullRating}</p>\n          </RatingBlock>\n        </NameRatingBlock>\n      </CircleAndInfo>\n\n      <DescriptionText>{comment}</DescriptionText>\n    </ReviewBlock>\n  );\n};\n\nexport default ReviewsCard;\n","import styled from 'styled-components';\n\nexport const ReviewsBlock = styled.ul`\n  margin-top: 48px;\n  margin-bottom: 40px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n`;\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const AppointmentWrapper = styled.div`\n  max-width: 440px;\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const AppointmentTextBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ClockSvg = styled.svg`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 16.83px;\n  width: 20px;\n  height: 20px;\n  stroke: var(--color-text);\n  fill: var(--color-white);\n`;\n\nexport const PhoneTimeBlock = styled.div`\n  display: flex;\n  gap: 8px;\n  :nth-child(1) {\n    width: 50%;\n  }\n  :nth-child(2) {\n    width: 50%;\n  }\n`;\n\nexport const InputsBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormikAppointment = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const PsyBlock = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const ImgPsy = styled.img`\n  width: 44px;\n  height: 44px;\n  border-radius: 15px;\n`;\n\nexport const PsyTextBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const PsyTitle = styled.p`\n  color: #8a8a89;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n`;\n\nexport const PsyName = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\n// import sprite from '../../assets/sprite.svg';\nimport { LogInTitle, LogInText } from 'components/LogInForm/LoginForm.styled';\nimport Button from 'components/Button';\nimport { Input } from 'components/LogInForm/LoginForm.styled';\nimport {\n  AppointmentWrapper,\n  AppointmentTextBlock,\n  PhoneTimeBlock,\n  InputsBlock,\n  FormikAppointment,\n  ImgPsy,\n  PsyBlock,\n  PsyTextBlock,\n  PsyTitle,\n  PsyName,\n} from './Appointment.styled';\nimport { FormError } from 'components/LogInForm/LogInForm';\n// import image from '../../assets/psy-img.jpg';\n\nconst Appointment = ({ psychologist }) => {\n  const { name, avatar_url } = psychologist;\n\n  const initialValues = {\n    name: '',\n    phone: '',\n    time: '',\n    email: '',\n    comment: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Name is a required field.'),\n    phone: yup\n      .number()\n      .min(6)\n      .max(16)\n      .required('Phone number is a required field'),\n    time: yup.date().required('Time is a required field'),\n    email: yup.string().email().required('Email is a required field'),\n    comment: yup.string().required('Write your comment here.'),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n  };\n\n  return (\n    <AppointmentWrapper>\n      <AppointmentTextBlock>\n        <LogInTitle>Make an appointment with a psychologists</LogInTitle>\n        <LogInText>\n          You are on the verge of changing your life for the better. Fill out\n          the short form below to book your personal appointment with a\n          professional psychologist. We guarantee confidentiality and respect\n          for your privacy.\n        </LogInText>\n      </AppointmentTextBlock>\n\n      <PsyBlock>\n        <ImgPsy alt=\"psychologist\" src={avatar_url} />\n        <PsyTextBlock>\n          <PsyTitle>Your psychologist</PsyTitle>\n          <PsyName>{name}</PsyName>\n        </PsyTextBlock>\n      </PsyBlock>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormikAppointment>\n          <InputsBlock>\n            <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n            <FormError name=\"name\" />\n            <PhoneTimeBlock>\n              <Input type=\"phone\" name=\"phone\" placeholder=\"+380\" />\n              <FormError name=\"phone\" />\n\n              <Input\n                type=\"time\"\n                name=\"time\"\n                views={['hours', 'minutes']}\n                format=\"HH:mm\"\n                ampm={false}\n                placeholder=\"00:00\"\n              />\n              <FormError name=\"time\" />\n              {/* < ClockSvg>\n                  <use href={`${sprite}#icon-clock`} />\n                </> */}\n            </PhoneTimeBlock>\n\n            <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n            <FormError name=\"email\" />\n            <Input type=\"text\" name=\"comment\" placeholder=\"Comment\" />\n            <FormError name=\"comment\" />\n          </InputsBlock>\n\n          <Button type=\"submit\" width=\"100%\">\n            Send\n          </Button>\n        </FormikAppointment>\n      </Formik>\n    </AppointmentWrapper>\n  );\n};\n\nexport default Appointment;\n","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport Button from 'components/Button';\nimport ReviewsCard from 'components/ReviewsCard';\nimport { ReviewsBlock } from './Reviews.styled';\nimport PopUpWindow from 'components/PopUpWindow';\nimport Appointment from 'components/Appointment';\n\nconst Reviews = ({ psychologist }) => {\n  const { reviews } = psychologist;\n\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    console.log('toggle');\n    setShowModal(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <ReviewsBlock>\n        {reviews.map(review => (\n          <li>\n            <ReviewsCard review={review} key={nanoid()} />\n          </li>\n        ))}\n      </ReviewsBlock>\n\n      <div onClick={() => toggleModal()}>\n        <Button fontSize={16} padding=\"14px 32px\">\n          Make an appointment\n        </Button>\n      </div>\n\n      {showModal && (\n        <PopUpWindow onClick={toggleModal}>\n          <Appointment psychologist={psychologist} />\n        </PopUpWindow>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["CardWrapper","styled","_templateObject","_taggedTemplateLiteral","ImgPsy","_templateObject2","ImgWrapper","_templateObject3","OnlineCircleBig","_templateObject4","StarSvg","_templateObject5","_templateObject6","HeartSvg","_templateObject7","ContentWrapper","_templateObject8","_templateObject9","_templateObject10","JobRatingBlock","_templateObject11","JobTitle","_templateObject12","NameText","_templateObject13","JobBlock","_templateObject14","RatingText","_templateObject15","RatingBlock","_templateObject16","PriceText","_templateObject17","PriceAccentText","_templateObject18","RatingPriceBlock","_templateObject19","CategoryWrapper","_templateObject20","CategoryText","_templateObject21","CategoryValue","_templateObject22","DescriptionText","_templateObject23","ReadMoreText","_templateObject24","NameRatingBlock","ReviewBlock","CircleName","FirstLetter","CircleAndInfo","_ref","review","comment","rating","reviewer","firstLetter","split","fullRating","toFixed","_jsxs","children","_jsx","href","concat","sprite","ReviewsBlock","AppointmentWrapper","AppointmentTextBlock","PhoneTimeBlock","InputsBlock","FormikAppointment","Form","PsyBlock","PsyTextBlock","PsyTitle","PsyName","psychologist","name","avatar_url","schema","yup","shape","required","phone","min","max","time","email","LogInTitle","LogInText","alt","src","Formik","initialValues","onSubmit","values","_ref2","resetForm","validationSchema","Input","type","placeholder","FormError","views","format","ampm","Button","width","reviews","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","toggleModal","console","log","prevState","_Fragment","map","ReviewsCard","nanoid","onClick","fontSize","padding","PopUpWindow","Appointment","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}