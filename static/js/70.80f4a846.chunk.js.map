{"version":3,"file":"static/js/70.80f4a846.chunk.js","mappings":"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","sources":["../node_modules/@firebase/auth/src/core/errors.ts","../node_modules/@firebase/auth/src/core/util/log.ts","../node_modules/@firebase/auth/src/core/util/assert.ts","../node_modules/@firebase/auth/src/core/util/location.ts","../node_modules/@firebase/auth/src/core/util/delay.ts","../node_modules/@firebase/auth/src/core/util/navigator.ts","../node_modules/@firebase/auth/src/core/util/emulator.ts","../node_modules/@firebase/auth/src/core/util/fetch_provider.ts","../node_modules/@firebase/auth/src/api/errors.ts","../node_modules/@firebase/auth/src/api/index.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha.ts","../node_modules/@firebase/auth/src/api/authentication/recaptcha.ts","../node_modules/@firebase/auth/src/api/account_management/account.ts","../node_modules/@firebase/auth/src/core/util/time.ts","../node_modules/@firebase/auth/src/core/user/id_token_result.ts","../node_modules/@firebase/auth/src/core/user/invalidation.ts","../node_modules/@firebase/auth/src/core/user/proactive_refresh.ts","../node_modules/@firebase/auth/src/core/user/user_metadata.ts","../node_modules/@firebase/auth/src/core/user/reload.ts","../node_modules/@firebase/auth/src/api/authentication/token.ts","../node_modules/@firebase/auth/src/core/user/token_manager.ts","../node_modules/@firebase/auth/src/core/user/user_impl.ts","../node_modules/@firebase/auth/src/core/util/instantiator.ts","../node_modules/@firebase/auth/src/core/persistence/in_memory.ts","../node_modules/@firebase/auth/src/core/persistence/persistence_user_manager.ts","../node_modules/@firebase/auth/src/core/util/browser.ts","../node_modules/@firebase/auth/src/core/util/version.ts","../node_modules/@firebase/auth/src/core/auth/middleware.ts","../node_modules/@firebase/auth/src/api/password_policy/get_password_policy.ts","../node_modules/@firebase/auth/src/core/auth/password_policy_impl.ts","../node_modules/@firebase/auth/src/core/auth/auth_impl.ts","../node_modules/@firebase/auth/src/platform_browser/load_js.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_enterprise_verifier.ts","../node_modules/@firebase/auth/src/core/auth/initialize.ts","../node_modules/@firebase/auth/src/core/auth/emulator.ts","../node_modules/@firebase/auth/src/core/credentials/auth_credential.ts","../node_modules/@firebase/auth/src/api/account_management/email_and_password.ts","../node_modules/@firebase/auth/src/api/authentication/email_and_password.ts","../node_modules/@firebase/auth/src/api/authentication/email_link.ts","../node_modules/@firebase/auth/src/core/credentials/email.ts","../node_modules/@firebase/auth/src/api/authentication/idp.ts","../node_modules/@firebase/auth/src/core/credentials/oauth.ts","../node_modules/@firebase/auth/src/api/authentication/sms.ts","../node_modules/@firebase/auth/src/core/credentials/phone.ts","../node_modules/@firebase/auth/src/core/action_code_url.ts","../node_modules/@firebase/auth/src/core/providers/email.ts","../node_modules/@firebase/auth/src/core/providers/federated.ts","../node_modules/@firebase/auth/src/core/providers/oauth.ts","../node_modules/@firebase/auth/src/core/providers/facebook.ts","../node_modules/@firebase/auth/src/core/providers/google.ts","../node_modules/@firebase/auth/src/core/providers/github.ts","../node_modules/@firebase/auth/src/core/credentials/saml.ts","../node_modules/@firebase/auth/src/core/providers/twitter.ts","../node_modules/@firebase/auth/src/api/authentication/sign_up.ts","../node_modules/@firebase/auth/src/core/user/user_credential_impl.ts","../node_modules/@firebase/auth/src/core/strategies/anonymous.ts","../node_modules/@firebase/auth/src/mfa/mfa_error.ts","../node_modules/@firebase/auth/src/core/user/link_unlink.ts","../node_modules/@firebase/auth/src/core/user/reauthenticate.ts","../node_modules/@firebase/auth/src/core/strategies/credential.ts","../node_modules/@firebase/auth/src/core/index.ts","../node_modules/@firebase/auth/src/api/account_management/mfa.ts","../node_modules/@firebase/auth/src/mfa/mfa_user.ts","../node_modules/@firebase/auth/src/core/persistence/index.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/browser.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/local_storage.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/session_storage.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/promise.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/receiver.ts","../node_modules/@firebase/auth/src/core/util/event_id.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/sender.ts","../node_modules/@firebase/auth/src/platform_browser/auth_window.ts","../node_modules/@firebase/auth/src/platform_browser/util/worker.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/indexed_db.ts","../node_modules/@firebase/auth/src/api/authentication/mfa.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_loader.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_verifier.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/phone.ts","../node_modules/@firebase/auth/src/platform_browser/providers/phone.ts","../node_modules/@firebase/auth/src/core/util/resolver.ts","../node_modules/@firebase/auth/src/core/strategies/idp.ts","../node_modules/@firebase/auth/src/core/strategies/abstract_popup_redirect_operation.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/popup.ts","../node_modules/@firebase/auth/src/core/strategies/redirect.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/redirect.ts","../node_modules/@firebase/auth/src/core/auth/auth_event_manager.ts","../node_modules/@firebase/auth/src/api/project_config/get_project_config.ts","../node_modules/@firebase/auth/src/core/util/validate_origin.ts","../node_modules/@firebase/auth/src/platform_browser/iframe/gapi.ts","../node_modules/@firebase/auth/src/platform_browser/iframe/iframe.ts","../node_modules/@firebase/auth/src/platform_browser/util/popup.ts","../node_modules/@firebase/auth/src/core/util/handler.ts","../node_modules/@firebase/auth/src/platform_browser/popup_redirect.ts","../node_modules/@firebase/auth/src/mfa/mfa_assertion.ts","../node_modules/@firebase/auth/src/platform_browser/mfa/assertions/phone.ts","../node_modules/@firebase/auth/src/mfa/assertions/totp.ts","../node_modules/@firebase/auth/src/core/auth/firebase_internal.ts","../node_modules/@firebase/auth/src/platform_browser/index.ts","../node_modules/@firebase/auth/src/core/auth/register.ts","../node_modules/@firebase/database/src/core/version.ts","../node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","../node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","../node_modules/@firebase/database/src/core/storage/storage.ts","../node_modules/@firebase/database/src/core/util/util.ts","../node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","../node_modules/@firebase/database/src/core/AuthTokenProvider.ts","../node_modules/@firebase/database/src/realtime/Constants.ts","../node_modules/@firebase/database/src/core/RepoInfo.ts","../node_modules/@firebase/database/src/core/stats/StatsCollection.ts","../node_modules/@firebase/database/src/core/stats/StatsManager.ts","../node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","../node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","../node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","../node_modules/@firebase/database/src/realtime/TransportManager.ts","../node_modules/@firebase/database/src/realtime/Connection.ts","../node_modules/@firebase/database/src/core/ServerActions.ts","../node_modules/@firebase/database/src/core/util/EventEmitter.ts","../node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","../node_modules/@firebase/database/src/core/util/Path.ts","../node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","../node_modules/@firebase/database/src/core/PersistentConnection.ts","../node_modules/@firebase/database/src/core/snap/Node.ts","../node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","../node_modules/@firebase/database/src/core/snap/indexes/Index.ts","../node_modules/@firebase/database/src/core/util/SortedMap.ts","../node_modules/@firebase/database/src/core/snap/snap.ts","../node_modules/@firebase/database/src/core/snap/comparators.ts","../node_modules/@firebase/database/src/core/snap/LeafNode.ts","../node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","../node_modules/@firebase/database/src/core/snap/IndexMap.ts","../node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","../node_modules/@firebase/database/src/core/snap/childSet.ts","../node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","../node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","../node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","../node_modules/@firebase/database/src/core/view/Change.ts","../node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","../node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","../node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","../node_modules/@firebase/database/src/core/view/QueryParams.ts","../node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","../node_modules/@firebase/database/src/core/SnapshotHolder.ts","../node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","../node_modules/@firebase/database/src/core/stats/StatsListener.ts","../node_modules/@firebase/database/src/core/operation/Operation.ts","../node_modules/@firebase/database/src/core/stats/StatsReporter.ts","../node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","../node_modules/@firebase/database/src/core/util/ImmutableTree.ts","../node_modules/@firebase/database/src/core/operation/ListenComplete.ts","../node_modules/@firebase/database/src/core/operation/Overwrite.ts","../node_modules/@firebase/database/src/core/operation/Merge.ts","../node_modules/@firebase/database/src/core/view/CacheNode.ts","../node_modules/@firebase/database/src/core/view/EventGenerator.ts","../node_modules/@firebase/database/src/core/view/ViewCache.ts","../node_modules/@firebase/database/src/core/CompoundWrite.ts","../node_modules/@firebase/database/src/core/WriteTree.ts","../node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","../node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","../node_modules/@firebase/database/src/core/view/ViewProcessor.ts","../node_modules/@firebase/database/src/core/view/View.ts","../node_modules/@firebase/database/src/core/SyncPoint.ts","../node_modules/@firebase/database/src/core/SyncTree.ts","../node_modules/@firebase/database/src/core/util/ServerValues.ts","../node_modules/@firebase/database/src/core/util/Tree.ts","../node_modules/@firebase/database/src/core/util/validation.ts","../node_modules/@firebase/database/src/core/view/EventQueue.ts","../node_modules/@firebase/database/src/core/Repo.ts","../node_modules/@firebase/database/src/core/util/libs/parser.ts","../node_modules/@firebase/database/src/core/util/NextPushId.ts","../node_modules/@firebase/database/src/core/view/Event.ts","../node_modules/@firebase/database/src/core/view/EventRegistration.ts","../node_modules/@firebase/database/src/api/Reference_impl.ts","../node_modules/@firebase/database/src/api/Database.ts","../node_modules/@firebase/database/src/api/test_access.ts","../node_modules/@firebase/database/src/register.ts","../node_modules/@firebase/util/src/constants.ts","../node_modules/@firebase/util/src/assert.ts","../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/deepCopy.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/global.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/emulator.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/json.ts","../node_modules/@firebase/util/src/jwt.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/query.ts","../node_modules/@firebase/util/src/sha1.ts","../node_modules/@firebase/util/src/subscribe.ts","../node_modules/@firebase/util/src/validation.ts","../node_modules/@firebase/util/src/utf8.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/formik/node_modules/deepmerge/dist/es.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/_overArg.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isPlainObject.js","../node_modules/tiny-warning/dist/tiny-warning.esm.js","../node_modules/lodash-es/_listCacheClear.js","../node_modules/lodash-es/eq.js","../node_modules/lodash-es/_assocIndexOf.js","../node_modules/lodash-es/_listCacheDelete.js","../node_modules/lodash-es/_listCacheGet.js","../node_modules/lodash-es/_listCacheHas.js","../node_modules/lodash-es/_listCacheSet.js","../node_modules/lodash-es/_ListCache.js","../node_modules/lodash-es/_stackClear.js","../node_modules/lodash-es/_stackDelete.js","../node_modules/lodash-es/_stackGet.js","../node_modules/lodash-es/_stackHas.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/isFunction.js","../node_modules/lodash-es/_coreJsData.js","../node_modules/lodash-es/_isMasked.js","../node_modules/lodash-es/_toSource.js","../node_modules/lodash-es/_baseIsNative.js","../node_modules/lodash-es/_getValue.js","../node_modules/lodash-es/_getNative.js","../node_modules/lodash-es/_Map.js","../node_modules/lodash-es/_nativeCreate.js","../node_modules/lodash-es/_hashClear.js","../node_modules/lodash-es/_hashDelete.js","../node_modules/lodash-es/_hashGet.js","../node_modules/lodash-es/_hashHas.js","../node_modules/lodash-es/_hashSet.js","../node_modules/lodash-es/_Hash.js","../node_modules/lodash-es/_mapCacheClear.js","../node_modules/lodash-es/_isKeyable.js","../node_modules/lodash-es/_getMapData.js","../node_modules/lodash-es/_mapCacheDelete.js","../node_modules/lodash-es/_mapCacheGet.js","../node_modules/lodash-es/_mapCacheHas.js","../node_modules/lodash-es/_mapCacheSet.js","../node_modules/lodash-es/_MapCache.js","../node_modules/lodash-es/_stackSet.js","../node_modules/lodash-es/_Stack.js","../node_modules/lodash-es/_arrayEach.js","../node_modules/lodash-es/_defineProperty.js","../node_modules/lodash-es/_baseAssignValue.js","../node_modules/lodash-es/_assignValue.js","../node_modules/lodash-es/_copyObject.js","../node_modules/lodash-es/_baseTimes.js","../node_modules/lodash-es/_baseIsArguments.js","../node_modules/lodash-es/isArguments.js","../node_modules/lodash-es/isArray.js","../node_modules/lodash-es/stubFalse.js","../node_modules/lodash-es/isBuffer.js","../node_modules/lodash-es/_isIndex.js","../node_modules/lodash-es/isLength.js","../node_modules/lodash-es/_baseIsTypedArray.js","../node_modules/lodash-es/_baseUnary.js","../node_modules/lodash-es/_nodeUtil.js","../node_modules/lodash-es/isTypedArray.js","../node_modules/lodash-es/_arrayLikeKeys.js","../node_modules/lodash-es/_isPrototype.js","../node_modules/lodash-es/_nativeKeys.js","../node_modules/lodash-es/_baseKeys.js","../node_modules/lodash-es/isArrayLike.js","../node_modules/lodash-es/keys.js","../node_modules/lodash-es/_baseAssign.js","../node_modules/lodash-es/_nativeKeysIn.js","../node_modules/lodash-es/_baseKeysIn.js","../node_modules/lodash-es/keysIn.js","../node_modules/lodash-es/_baseAssignIn.js","../node_modules/lodash-es/_cloneBuffer.js","../node_modules/lodash-es/_copyArray.js","../node_modules/lodash-es/_arrayFilter.js","../node_modules/lodash-es/stubArray.js","../node_modules/lodash-es/_getSymbols.js","../node_modules/lodash-es/_copySymbols.js","../node_modules/lodash-es/_arrayPush.js","../node_modules/lodash-es/_getSymbolsIn.js","../node_modules/lodash-es/_copySymbolsIn.js","../node_modules/lodash-es/_baseGetAllKeys.js","../node_modules/lodash-es/_getAllKeys.js","../node_modules/lodash-es/_getAllKeysIn.js","../node_modules/lodash-es/_DataView.js","../node_modules/lodash-es/_Promise.js","../node_modules/lodash-es/_Set.js","../node_modules/lodash-es/_WeakMap.js","../node_modules/lodash-es/_getTag.js","../node_modules/lodash-es/_initCloneArray.js","../node_modules/lodash-es/_Uint8Array.js","../node_modules/lodash-es/_cloneArrayBuffer.js","../node_modules/lodash-es/_cloneDataView.js","../node_modules/lodash-es/_cloneRegExp.js","../node_modules/lodash-es/_cloneSymbol.js","../node_modules/lodash-es/_cloneTypedArray.js","../node_modules/lodash-es/_initCloneByTag.js","../node_modules/lodash-es/_baseCreate.js","../node_modules/lodash-es/_initCloneObject.js","../node_modules/lodash-es/_baseIsMap.js","../node_modules/lodash-es/isMap.js","../node_modules/lodash-es/_baseIsSet.js","../node_modules/lodash-es/isSet.js","../node_modules/lodash-es/_baseClone.js","../node_modules/lodash-es/clone.js","../node_modules/lodash-es/_arrayMap.js","../node_modules/lodash-es/isSymbol.js","../node_modules/lodash-es/memoize.js","../node_modules/lodash-es/_memoizeCapped.js","../node_modules/lodash-es/_stringToPath.js","../node_modules/lodash-es/_toKey.js","../node_modules/lodash-es/_baseToString.js","../node_modules/lodash-es/toString.js","../node_modules/lodash-es/toPath.js","../node_modules/lodash-es/cloneDeep.js","../node_modules/formik/src/FormikContext.tsx","../node_modules/formik/src/utils.ts","../node_modules/formik/src/Formik.tsx","../node_modules/formik/src/Field.tsx","../node_modules/formik/src/Form.tsx","../node_modules/formik/src/connect.tsx","../node_modules/formik/src/FieldArray.tsx","../node_modules/formik/src/ErrorMessage.tsx","../node_modules/formik/src/FastField.tsx","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../node_modules/property-expr/index.js","../node_modules/react-fast-compare/index.js","../node_modules/tiny-case/index.js","../node_modules/toposort/index.js","../node_modules/yup/index.esm.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@firebase/app/node_modules/idb/build/wrap-idb-value.js","../node_modules/@firebase/app/node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/logger/src/logger.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorMap, User } from '../model/public_types';\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { AppName } from '../model/auth';\nimport { AuthCredential } from './credentials';\n\n/**\n * Enumeration of Firebase Auth error codes.\n *\n * @internal\n */\nexport const enum AuthErrorCode {\n  ADMIN_ONLY_OPERATION = 'admin-restricted-operation',\n  ARGUMENT_ERROR = 'argument-error',\n  APP_NOT_AUTHORIZED = 'app-not-authorized',\n  APP_NOT_INSTALLED = 'app-not-installed',\n  CAPTCHA_CHECK_FAILED = 'captcha-check-failed',\n  CODE_EXPIRED = 'code-expired',\n  CORDOVA_NOT_READY = 'cordova-not-ready',\n  CORS_UNSUPPORTED = 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE = 'credential-already-in-use',\n  CREDENTIAL_MISMATCH = 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH = 'dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'email-change-needs-verification',\n  EMAIL_EXISTS = 'email-already-in-use',\n  EMULATOR_CONFIG_FAILED = 'emulator-config-failed',\n  EXPIRED_OOB_CODE = 'expired-action-code',\n  EXPIRED_POPUP_REQUEST = 'cancelled-popup-request',\n  INTERNAL_ERROR = 'internal-error',\n  INVALID_API_KEY = 'invalid-api-key',\n  INVALID_APP_CREDENTIAL = 'invalid-app-credential',\n  INVALID_APP_ID = 'invalid-app-id',\n  INVALID_AUTH = 'invalid-user-token',\n  INVALID_AUTH_EVENT = 'invalid-auth-event',\n  INVALID_CERT_HASH = 'invalid-cert-hash',\n  INVALID_CODE = 'invalid-verification-code',\n  INVALID_CONTINUE_URI = 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION = 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN = 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'invalid-dynamic-link-domain',\n  INVALID_EMAIL = 'invalid-email',\n  INVALID_EMULATOR_SCHEME = 'invalid-emulator-scheme',\n  INVALID_CREDENTIAL = 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD = 'invalid-message-payload',\n  INVALID_MFA_SESSION = 'invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID = 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER = 'invalid-oauth-provider',\n  INVALID_OOB_CODE = 'invalid-action-code',\n  INVALID_ORIGIN = 'unauthorized-domain',\n  INVALID_PASSWORD = 'wrong-password',\n  INVALID_PERSISTENCE = 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER = 'invalid-phone-number',\n  INVALID_PROVIDER_ID = 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL = 'invalid-recipient-email',\n  INVALID_SENDER = 'invalid-sender',\n  INVALID_SESSION_INFO = 'invalid-verification-id',\n  INVALID_TENANT_ID = 'invalid-tenant-id',\n  LOGIN_BLOCKED = 'login-blocked',\n  MFA_INFO_NOT_FOUND = 'multi-factor-info-not-found',\n  MFA_REQUIRED = 'multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME = 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL = 'missing-app-credential',\n  MISSING_AUTH_DOMAIN = 'auth-domain-config-required',\n  MISSING_CODE = 'missing-verification-code',\n  MISSING_CONTINUE_URI = 'missing-continue-uri',\n  MISSING_IFRAME_START = 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID = 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE = 'missing-or-invalid-nonce',\n  MISSING_MFA_INFO = 'missing-multi-factor-info',\n  MISSING_MFA_SESSION = 'missing-multi-factor-session',\n  MISSING_PHONE_NUMBER = 'missing-phone-number',\n  MISSING_PASSWORD = 'missing-password',\n  MISSING_SESSION_INFO = 'missing-verification-id',\n  MODULE_DESTROYED = 'app-deleted',\n  NEED_CONFIRMATION = 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED = 'network-request-failed',\n  NULL_USER = 'null-user',\n  NO_AUTH_EVENT = 'no-auth-event',\n  NO_SUCH_PROVIDER = 'no-such-provider',\n  OPERATION_NOT_ALLOWED = 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED = 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED = 'popup-blocked',\n  POPUP_CLOSED_BY_USER = 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED = 'provider-already-linked',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER = 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING = 'redirect-operation-pending',\n  REJECTED_CREDENTIAL = 'rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED = 'second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH = 'tenant-id-mismatch',\n  TIMEOUT = 'timeout',\n  TOKEN_EXPIRED = 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'too-many-requests',\n  UNAUTHORIZED_DOMAIN = 'unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR = 'unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE = 'unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION = 'unsupported-tenant-operation',\n  UNVERIFIED_EMAIL = 'unverified-email',\n  USER_CANCELLED = 'user-cancelled',\n  USER_DELETED = 'user-not-found',\n  USER_DISABLED = 'user-disabled',\n  USER_MISMATCH = 'user-mismatch',\n  USER_SIGNED_OUT = 'user-signed-out',\n  WEAK_PASSWORD = 'weak-password',\n  WEB_STORAGE_UNSUPPORTED = 'web-storage-unsupported',\n  ALREADY_INITIALIZED = 'already-initialized',\n  RECAPTCHA_NOT_ENABLED = 'recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN = 'missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN = 'invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION = 'invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE = 'missing-client-type',\n  MISSING_RECAPTCHA_VERSION = 'missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION = 'invalid-recaptcha-version',\n  INVALID_REQ_TYPE = 'invalid-req-type',\n  UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION = 'unsupported-password-policy-schema-version',\n  PASSWORD_DOES_NOT_MEET_REQUIREMENTS = 'password-does-not-meet-requirements'\n}\n\nfunction _debugErrorMap(): ErrorMap<AuthErrorCode> {\n  return {\n    [AuthErrorCode.ADMIN_ONLY_OPERATION]:\n      'This operation is restricted to administrators only.',\n    [AuthErrorCode.ARGUMENT_ERROR]: '',\n    [AuthErrorCode.APP_NOT_AUTHORIZED]:\n      \"This app, identified by the domain where it's hosted, is not \" +\n      'authorized to use Firebase Authentication with the provided API key. ' +\n      'Review your key configuration in the Google API console.',\n    [AuthErrorCode.APP_NOT_INSTALLED]:\n      'The requested mobile application corresponding to the identifier (' +\n      'Android package name or iOS bundle ID) provided is not installed on ' +\n      'this device.',\n    [AuthErrorCode.CAPTCHA_CHECK_FAILED]:\n      'The reCAPTCHA response token provided is either invalid, expired, ' +\n      'already used or the domain associated with it does not match the list ' +\n      'of whitelisted domains.',\n    [AuthErrorCode.CODE_EXPIRED]:\n      'The SMS code has expired. Please re-send the verification code to try ' +\n      'again.',\n    [AuthErrorCode.CORDOVA_NOT_READY]: 'Cordova framework is not ready.',\n    [AuthErrorCode.CORS_UNSUPPORTED]: 'This browser is not supported.',\n    [AuthErrorCode.CREDENTIAL_ALREADY_IN_USE]:\n      'This credential is already associated with a different user account.',\n    [AuthErrorCode.CREDENTIAL_MISMATCH]:\n      'The custom token corresponds to a different audience.',\n    [AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n      'This operation is sensitive and requires recent authentication. Log in ' +\n      'again before retrying this request.',\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.',\n    [AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED]:\n      'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\n      'conditions.',\n    [AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION]:\n      'Multi-factor users must always have a verified email.',\n    [AuthErrorCode.EMAIL_EXISTS]:\n      'The email address is already in use by another account.',\n    [AuthErrorCode.EMULATOR_CONFIG_FAILED]:\n      'Auth instance has already been used to make a network call. Auth can ' +\n      'no longer be configured to use the emulator. Try calling ' +\n      '\"connectAuthEmulator()\" sooner.',\n    [AuthErrorCode.EXPIRED_OOB_CODE]: 'The action code has expired.',\n    [AuthErrorCode.EXPIRED_POPUP_REQUEST]:\n      'This operation has been cancelled due to another conflicting popup being opened.',\n    [AuthErrorCode.INTERNAL_ERROR]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_APP_CREDENTIAL]:\n      'The phone verification request contains an invalid application verifier.' +\n      ' The reCAPTCHA token response is either invalid or expired.',\n    [AuthErrorCode.INVALID_APP_ID]:\n      'The mobile app identifier is not registed for the current project.',\n    [AuthErrorCode.INVALID_AUTH]:\n      \"This user's credential isn't valid for this project. This can happen \" +\n      \"if the user's token has been tampered with, or if the user isn't for \" +\n      'the project associated with this API key.',\n    [AuthErrorCode.INVALID_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_CODE]:\n      'The SMS verification code used to create the phone auth credential is ' +\n      'invalid. Please resend the verification code sms and be sure to use the ' +\n      'verification code provided by the user.',\n    [AuthErrorCode.INVALID_CONTINUE_URI]:\n      'The continue URL provided in the request is invalid.',\n    [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]:\n      'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\n      'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n      'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n      'cordova-plugin-customurlscheme.',\n    [AuthErrorCode.INVALID_CUSTOM_TOKEN]:\n      'The custom token format is incorrect. Please check the documentation.',\n    [AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN]:\n      'The provided dynamic link domain is not configured or authorized for the current project.',\n    [AuthErrorCode.INVALID_EMAIL]: 'The email address is badly formatted.',\n    [AuthErrorCode.INVALID_EMULATOR_SCHEME]:\n      'Emulator URL must start with a valid scheme (http:// or https://).',\n    [AuthErrorCode.INVALID_API_KEY]:\n      'Your API key is invalid, please check you have copied it correctly.',\n    [AuthErrorCode.INVALID_CERT_HASH]:\n      'The SHA-1 certificate hash provided is invalid.',\n    [AuthErrorCode.INVALID_CREDENTIAL]:\n      'The supplied auth credential is incorrect, malformed or has expired.',\n    [AuthErrorCode.INVALID_MESSAGE_PAYLOAD]:\n      'The email template corresponding to this action contains invalid characters in its message. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_MFA_SESSION]:\n      'The request does not contain a valid proof of first factor successful sign-in.',\n    [AuthErrorCode.INVALID_OAUTH_PROVIDER]:\n      'EmailAuthProvider is not supported for this operation. This operation ' +\n      'only supports OAuth providers.',\n    [AuthErrorCode.INVALID_OAUTH_CLIENT_ID]:\n      'The OAuth client ID provided is either invalid or does not match the ' +\n      'specified API key.',\n    [AuthErrorCode.INVALID_ORIGIN]:\n      'This domain is not authorized for OAuth operations for your Firebase ' +\n      'project. Edit the list of authorized domains from the Firebase console.',\n    [AuthErrorCode.INVALID_OOB_CODE]:\n      'The action code is invalid. This can happen if the code is malformed, ' +\n      'expired, or has already been used.',\n    [AuthErrorCode.INVALID_PASSWORD]:\n      'The password is invalid or the user does not have a password.',\n    [AuthErrorCode.INVALID_PERSISTENCE]:\n      'The specified persistence type is invalid. It can only be local, session or none.',\n    [AuthErrorCode.INVALID_PHONE_NUMBER]:\n      'The format of the phone number provided is incorrect. Please enter the ' +\n      'phone number in a format that can be parsed into E.164 format. E.164 ' +\n      'phone numbers are written in the format [+][country code][subscriber ' +\n      'number including area code].',\n    [AuthErrorCode.INVALID_PROVIDER_ID]:\n      'The specified provider ID is invalid.',\n    [AuthErrorCode.INVALID_RECIPIENT_EMAIL]:\n      'The email corresponding to this action failed to send as the provided ' +\n      'recipient email address is invalid.',\n    [AuthErrorCode.INVALID_SENDER]:\n      'The email template corresponding to this action contains an invalid sender email or name. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_SESSION_INFO]:\n      'The verification ID used to create the phone auth credential is invalid.',\n    [AuthErrorCode.INVALID_TENANT_ID]:\n      \"The Auth instance's tenant ID is invalid.\",\n    [AuthErrorCode.LOGIN_BLOCKED]:\n      'Login blocked by user-provided method: {$originalMessage}',\n    [AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME]:\n      'An Android Package Name must be provided if the Android App is required to be installed.',\n    [AuthErrorCode.MISSING_AUTH_DOMAIN]:\n      'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n      'by following the instructions in the Firebase console.',\n    [AuthErrorCode.MISSING_APP_CREDENTIAL]:\n      'The phone verification request is missing an application verifier ' +\n      'assertion. A reCAPTCHA response token needs to be provided.',\n    [AuthErrorCode.MISSING_CODE]:\n      'The phone auth credential was created with an empty SMS verification code.',\n    [AuthErrorCode.MISSING_CONTINUE_URI]:\n      'A continue URL must be provided in the request.',\n    [AuthErrorCode.MISSING_IFRAME_START]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.MISSING_IOS_BUNDLE_ID]:\n      'An iOS Bundle ID must be provided if an App Store ID is provided.',\n    [AuthErrorCode.MISSING_OR_INVALID_NONCE]:\n      'The request does not contain a valid nonce. This can occur if the ' +\n      'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\n      'in the ID token payload.',\n    [AuthErrorCode.MISSING_PASSWORD]: 'A non-empty password must be provided',\n    [AuthErrorCode.MISSING_MFA_INFO]:\n      'No second factor identifier is provided.',\n    [AuthErrorCode.MISSING_MFA_SESSION]:\n      'The request is missing proof of first factor successful sign-in.',\n    [AuthErrorCode.MISSING_PHONE_NUMBER]:\n      'To send verification codes, provide a phone number for the recipient.',\n    [AuthErrorCode.MISSING_SESSION_INFO]:\n      'The phone auth credential was created with an empty verification ID.',\n    [AuthErrorCode.MODULE_DESTROYED]:\n      'This instance of FirebaseApp has been deleted.',\n    [AuthErrorCode.MFA_INFO_NOT_FOUND]:\n      'The user does not have a second factor matching the identifier provided.',\n    [AuthErrorCode.MFA_REQUIRED]:\n      'Proof of ownership of a second factor is required to complete sign-in.',\n    [AuthErrorCode.NEED_CONFIRMATION]:\n      'An account already exists with the same email address but different ' +\n      'sign-in credentials. Sign in using a provider associated with this ' +\n      'email address.',\n    [AuthErrorCode.NETWORK_REQUEST_FAILED]:\n      'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\n    [AuthErrorCode.NO_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.NO_SUCH_PROVIDER]:\n      'User was not linked to an account with the given provider.',\n    [AuthErrorCode.NULL_USER]:\n      'A null user object was provided as the argument for an operation which ' +\n      'requires a non-null user object.',\n    [AuthErrorCode.OPERATION_NOT_ALLOWED]:\n      'The given sign-in provider is disabled for this Firebase project. ' +\n      'Enable it in the Firebase console, under the sign-in method tab of the ' +\n      'Auth section.',\n    [AuthErrorCode.OPERATION_NOT_SUPPORTED]:\n      'This operation is not supported in the environment this application is ' +\n      'running on. \"location.protocol\" must be http, https or chrome-extension' +\n      ' and web storage must be enabled.',\n    [AuthErrorCode.POPUP_BLOCKED]:\n      'Unable to establish a connection with the popup. It may have been blocked by the browser.',\n    [AuthErrorCode.POPUP_CLOSED_BY_USER]:\n      'The popup has been closed by the user before finalizing the operation.',\n    [AuthErrorCode.PROVIDER_ALREADY_LINKED]:\n      'User can only be linked to one identity for the given provider.',\n    [AuthErrorCode.QUOTA_EXCEEDED]:\n      \"The project's quota for this operation has been exceeded.\",\n    [AuthErrorCode.REDIRECT_CANCELLED_BY_USER]:\n      'The redirect operation has been cancelled by the user before finalizing.',\n    [AuthErrorCode.REDIRECT_OPERATION_PENDING]:\n      'A redirect sign-in operation is already pending.',\n    [AuthErrorCode.REJECTED_CREDENTIAL]:\n      'The request contains malformed or mismatching credentials.',\n    [AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED]:\n      'The second factor is already enrolled on this account.',\n    [AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED]:\n      'The maximum allowed number of second factors on a user has been exceeded.',\n    [AuthErrorCode.TENANT_ID_MISMATCH]:\n      \"The provided tenant ID does not match the Auth instance's tenant ID\",\n    [AuthErrorCode.TIMEOUT]: 'The operation has timed out.',\n    [AuthErrorCode.TOKEN_EXPIRED]:\n      \"The user's credential is no longer valid. The user must sign in again.\",\n    [AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER]:\n      'We have blocked all requests from this device due to unusual activity. ' +\n      'Try again later.',\n    [AuthErrorCode.UNAUTHORIZED_DOMAIN]:\n      'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n      'the domain in the Firebase console.',\n    [AuthErrorCode.UNSUPPORTED_FIRST_FACTOR]:\n      'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\n    [AuthErrorCode.UNSUPPORTED_PERSISTENCE]:\n      'The current environment does not support the specified persistence type.',\n    [AuthErrorCode.UNSUPPORTED_TENANT_OPERATION]:\n      'This operation is not supported in a multi-tenant context.',\n    [AuthErrorCode.UNVERIFIED_EMAIL]:\n      'The operation requires a verified email.',\n    [AuthErrorCode.USER_CANCELLED]:\n      'The user did not grant your application the permissions it requested.',\n    [AuthErrorCode.USER_DELETED]:\n      'There is no user record corresponding to this identifier. The user may ' +\n      'have been deleted.',\n    [AuthErrorCode.USER_DISABLED]:\n      'The user account has been disabled by an administrator.',\n    [AuthErrorCode.USER_MISMATCH]:\n      'The supplied credentials do not correspond to the previously signed in user.',\n    [AuthErrorCode.USER_SIGNED_OUT]: '',\n    [AuthErrorCode.WEAK_PASSWORD]:\n      'The password must be 6 characters long or more.',\n    [AuthErrorCode.WEB_STORAGE_UNSUPPORTED]:\n      'This browser is not supported or 3rd party cookies and data may be disabled.',\n    [AuthErrorCode.ALREADY_INITIALIZED]:\n      'initializeAuth() has already been called with ' +\n      'different options. To avoid this error, call initializeAuth() with the ' +\n      'same options as when it was originally called, or call getAuth() to return the' +\n      ' already initialized instance.',\n    [AuthErrorCode.MISSING_RECAPTCHA_TOKEN]:\n      'The reCAPTCHA token is missing when sending request to the backend.',\n    [AuthErrorCode.INVALID_RECAPTCHA_TOKEN]:\n      'The reCAPTCHA token is invalid when sending request to the backend.',\n    [AuthErrorCode.INVALID_RECAPTCHA_ACTION]:\n      'The reCAPTCHA action is invalid when sending request to the backend.',\n    [AuthErrorCode.RECAPTCHA_NOT_ENABLED]:\n      'reCAPTCHA Enterprise integration is not enabled for this project.',\n    [AuthErrorCode.MISSING_CLIENT_TYPE]:\n      'The reCAPTCHA client type is missing when sending request to the backend.',\n    [AuthErrorCode.MISSING_RECAPTCHA_VERSION]:\n      'The reCAPTCHA version is missing when sending request to the backend.',\n    [AuthErrorCode.INVALID_REQ_TYPE]: 'Invalid request parameters.',\n    [AuthErrorCode.INVALID_RECAPTCHA_VERSION]:\n      'The reCAPTCHA version is invalid when sending request to the backend.',\n    [AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION]:\n      'The password policy received from the backend uses a schema version that is not supported by this version of the Firebase SDK.',\n    [AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS]:\n      'The password does not meet the requirements.'\n  };\n}\n\nexport interface ErrorMapRetriever extends AuthErrorMap {\n  (): ErrorMap<AuthErrorCode>;\n}\n\nfunction _prodErrorMap(): ErrorMap<AuthErrorCode> {\n  // We will include this one message in the prod error map since by the very\n  // nature of this error, developers will never be able to see the message\n  // using the debugErrorMap (which is installed during auth initialization).\n  return {\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.'\n  } as ErrorMap<AuthErrorCode>;\n}\n\n/**\n * A verbose error map with detailed descriptions for most error codes.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const debugErrorMap: AuthErrorMap = _debugErrorMap;\n\n/**\n * A minimal error map with all verbose error messages stripped.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const prodErrorMap: AuthErrorMap = _prodErrorMap;\n\nexport interface NamedErrorParams {\n  appName: AppName;\n  credential?: AuthCredential;\n  email?: string;\n  phoneNumber?: string;\n  tenantId?: string;\n  user?: User;\n  _serverResponse?: object;\n}\n\n/**\n * @internal\n */\ntype GenericAuthErrorParams = {\n  [key in Exclude<\n    AuthErrorCode,\n    | AuthErrorCode.ARGUMENT_ERROR\n    | AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    | AuthErrorCode.INTERNAL_ERROR\n    | AuthErrorCode.MFA_REQUIRED\n    | AuthErrorCode.NO_AUTH_EVENT\n    | AuthErrorCode.OPERATION_NOT_SUPPORTED\n  >]: {\n    appName?: AppName;\n    email?: string;\n    phoneNumber?: string;\n    message?: string;\n  };\n};\n\n/**\n * @internal\n */\nexport interface AuthErrorParams extends GenericAuthErrorParams {\n  [AuthErrorCode.ARGUMENT_ERROR]: { appName?: AppName };\n  [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]: { appName?: AppName };\n  [AuthErrorCode.INTERNAL_ERROR]: { appName?: AppName };\n  [AuthErrorCode.LOGIN_BLOCKED]: {\n    appName?: AppName;\n    originalMessage?: string;\n  };\n  [AuthErrorCode.OPERATION_NOT_SUPPORTED]: { appName?: AppName };\n  [AuthErrorCode.NO_AUTH_EVENT]: { appName?: AppName };\n  [AuthErrorCode.MFA_REQUIRED]: {\n    appName: AppName;\n    _serverResponse: IdTokenMfaResponse;\n  };\n  [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]: {\n    appName: AppName;\n    missingPlugin?: string;\n  };\n}\n\nexport const _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory<\n  AuthErrorCode,\n  AuthErrorParams\n>('auth', 'Firebase', _prodErrorMap());\n\n/**\n * A map of potential `Auth` error codes, for easier comparison with errors\n * thrown by the SDK.\n *\n * @remarks\n * Note that you can't tree-shake individual keys\n * in the map, so by using the map you might substantially increase your\n * bundle size.\n *\n * @public\n */\nexport const AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n  ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n  ARGUMENT_ERROR: 'auth/argument-error',\n  APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n  APP_NOT_INSTALLED: 'auth/app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n  CODE_EXPIRED: 'auth/code-expired',\n  CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n  CORS_UNSUPPORTED: 'auth/cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n  EMAIL_EXISTS: 'auth/email-already-in-use',\n  EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n  EXPIRED_OOB_CODE: 'auth/expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n  INTERNAL_ERROR: 'auth/internal-error',\n  INVALID_API_KEY: 'auth/invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n  INVALID_APP_ID: 'auth/invalid-app-id',\n  INVALID_AUTH: 'auth/invalid-user-token',\n  INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n  INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n  INVALID_CODE: 'auth/invalid-verification-code',\n  INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'auth/invalid-email',\n  INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n  INVALID_LOGIN_CREDENTIALS: 'auth/invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n  INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n  INVALID_OOB_CODE: 'auth/invalid-action-code',\n  INVALID_ORIGIN: 'auth/unauthorized-domain',\n  INVALID_PASSWORD: 'auth/wrong-password',\n  INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n  INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n  INVALID_SENDER: 'auth/invalid-sender',\n  INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n  INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n  MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n  MFA_REQUIRED: 'auth/multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n  MISSING_CODE: 'auth/missing-verification-code',\n  MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n  MISSING_IFRAME_START: 'auth/missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n  MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n  MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n  MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n  MISSING_SESSION_INFO: 'auth/missing-verification-id',\n  MODULE_DESTROYED: 'auth/app-deleted',\n  NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n  NULL_USER: 'auth/null-user',\n  NO_AUTH_EVENT: 'auth/no-auth-event',\n  NO_SUCH_PROVIDER: 'auth/no-such-provider',\n  OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'auth/popup-blocked',\n  POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n  QUOTA_EXCEEDED: 'auth/quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'auth/rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n  TIMEOUT: 'auth/timeout',\n  TOKEN_EXPIRED: 'auth/user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n  UNVERIFIED_EMAIL: 'auth/unverified-email',\n  USER_CANCELLED: 'auth/user-cancelled',\n  USER_DELETED: 'auth/user-not-found',\n  USER_DISABLED: 'auth/user-disabled',\n  USER_MISMATCH: 'auth/user-mismatch',\n  USER_SIGNED_OUT: 'auth/user-signed-out',\n  WEAK_PASSWORD: 'auth/weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n  ALREADY_INITIALIZED: 'auth/already-initialized',\n  RECAPTCHA_NOT_ENABLED: 'auth/recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN: 'auth/missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN: 'auth/invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION: 'auth/invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE: 'auth/missing-client-type',\n  MISSING_RECAPTCHA_VERSION: 'auth/missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION: 'auth/invalid-recaptcha-version',\n  INVALID_REQ_TYPE: 'auth/invalid-req-type'\n} as const;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SDK_VERSION } from '@firebase/app';\n\nexport { LogLevel };\n\nconst logClient = new Logger('@firebase/auth');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function _getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\nexport function _setLogLevel(newLevel: LogLevel): void {\n  logClient.logLevel = newLevel;\n}\n\nexport function _logDebug(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    logClient.debug(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logWarn(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.WARN) {\n    logClient.warn(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logError(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth } from '../../model/public_types';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  _DEFAULT_AUTH_ERROR_FACTORY,\n  AuthErrorCode,\n  AuthErrorParams,\n  prodErrorMap,\n  ErrorMapRetriever\n} from '../errors';\nimport { _logError } from './log';\n\ntype AuthErrorListParams<K> = K extends keyof AuthErrorParams\n  ? [AuthErrorParams[K]]\n  : [];\ntype LessAppName<K extends AuthErrorCode> = Omit<AuthErrorParams[K], 'appName'>;\n\n/**\n * Unconditionally fails, throwing a developer facing INTERNAL_ERROR\n *\n * @example\n * ```javascript\n * fail(auth, AuthErrorCode.MFA_REQUIRED);  // Error: the MFA_REQUIRED error needs more params than appName\n * fail(auth, AuthErrorCode.MFA_REQUIRED, {serverResponse});  // Compiles\n * fail(AuthErrorCode.INTERNAL_ERROR);  // Compiles; internal error does not need appName\n * fail(AuthErrorCode.USER_DELETED);  // Error: USER_DELETED requires app name\n * fail(auth, AuthErrorCode.USER_DELETED);  // Compiles; USER_DELETED _only_ needs app name\n * ```\n *\n * @param appName App name for tagging the error\n * @throws FirebaseError\n */\nexport function _fail<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): never {\n  throw createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _createError<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  return createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _errorWithCustomMessage(\n  auth: Auth,\n  code: AuthErrorCode,\n  message: string\n): FirebaseError {\n  const errorMap = {\n    ...(prodErrorMap as ErrorMapRetriever)(),\n    [code]: message\n  };\n  const factory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n    'auth',\n    'Firebase',\n    errorMap\n  );\n  return factory.create(code, {\n    appName: auth.name\n  });\n}\n\nexport function _assertInstanceOf(\n  auth: Auth,\n  object: object,\n  instance: unknown\n): void {\n  const constructorInstance = instance as { new (...args: unknown[]): unknown };\n  if (!(object instanceof constructorInstance)) {\n    if (constructorInstance.name !== object.constructor.name) {\n      _fail(auth, AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    throw _errorWithCustomMessage(\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR,\n      `Type of ${object.constructor.name} does not match expected instance.` +\n        `Did you pass a reference from a different Auth SDK?`\n    );\n  }\n}\n\nfunction createErrorInternal<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  if (typeof authOrCode !== 'string') {\n    const code = rest[0] as K;\n    const fullParams = [...rest.slice(1)] as AuthErrorListParams<K>;\n    if (fullParams[0]) {\n      fullParams[0].appName = authOrCode.name;\n    }\n\n    return (authOrCode as AuthInternal)._errorFactory.create(\n      code,\n      ...fullParams\n    );\n  }\n\n  return _DEFAULT_AUTH_ERROR_FACTORY.create(\n    authOrCode,\n    ...(rest as AuthErrorListParams<K>)\n  );\n}\n\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): asserts assertion {\n  if (!assertion) {\n    throw createErrorInternal(authOrCode, ...rest);\n  }\n}\n\n// We really do want to accept literally any function type here\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype TypeExpectation = Function | string | MapType;\n\ninterface MapType extends Record<string, TypeExpectation | Optional> {}\n\nclass Optional {\n  constructor(readonly type: TypeExpectation) {}\n}\n\nexport function opt(type: TypeExpectation): Optional {\n  return new Optional(type);\n}\n\n/**\n * Asserts the runtime types of arguments. The 'expected' field can be one of\n * a class, a string (representing a \"typeof\" call), or a record map of name\n * to type. Furthermore, the opt() function can be used to mark a field as\n * optional. For example:\n *\n * function foo(auth: Auth, profile: {displayName?: string}, update = false) {\n *   assertTypes(arguments, [AuthImpl, {displayName: opt('string')}, opt('boolean')]);\n * }\n *\n * opt() can be used for any type:\n * function foo(auth?: Auth) {\n *   assertTypes(arguments, [opt(AuthImpl)]);\n * }\n *\n * The string types can be or'd together, and you can use \"null\" as well (note\n * that typeof null === 'object'; this is an edge case). For example:\n *\n * function foo(profile: {displayName?: string | null}) {\n *   assertTypes(arguments, [{displayName: opt('string|null')}]);\n * }\n *\n * @param args\n * @param expected\n */\nexport function assertTypes(\n  args: Omit<IArguments, 'callee'>,\n  ...expected: Array<TypeExpectation | Optional>\n): void {\n  if (args.length > expected.length) {\n    _fail(AuthErrorCode.ARGUMENT_ERROR, {});\n  }\n\n  for (let i = 0; i < expected.length; i++) {\n    let expect = expected[i];\n    const arg = args[i];\n\n    if (expect instanceof Optional) {\n      // If the arg is undefined, then it matches \"optional\" and we can move to\n      // the next arg\n      if (typeof arg === 'undefined') {\n        continue;\n      }\n      expect = expect.type;\n    }\n\n    if (typeof expect === 'string') {\n      // Handle the edge case for null because typeof null === 'object'\n      if (expect.includes('null') && arg === null) {\n        continue;\n      }\n\n      const required = expect.split('|');\n      _assert(required.includes(typeof arg), AuthErrorCode.ARGUMENT_ERROR, {});\n    } else if (typeof expect === 'object') {\n      // Recursively check record arguments\n      const record = arg as Record<string, unknown>;\n      const map = expect as MapType;\n      const keys = Object.keys(expect);\n\n      assertTypes(\n        keys.map(k => record[k]),\n        ...keys.map(k => map[k])\n      );\n    } else {\n      _assert(arg instanceof expect, AuthErrorCode.ARGUMENT_ERROR, {});\n    }\n  }\n}\n\n/**\n * Unconditionally fails, throwing an internal error with the given message.\n *\n * @param failure type of failure encountered\n * @throws Error\n */\nexport function debugFail(failure: string): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message = `INTERNAL ASSERTION FAILED: ` + failure;\n  _logError(message);\n\n  // NOTE: We don't use FirebaseError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * @param assertion\n * @param message\n */\nexport function debugAssert(\n  assertion: unknown,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    debugFail(message);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _getCurrentUrl(): string {\n  return (typeof self !== 'undefined' && self.location?.href) || '';\n}\n\nexport function _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\nexport function _getCurrentScheme(): string | null {\n  return (typeof self !== 'undefined' && self.location?.protocol) || null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isMobileCordova, isReactNative } from '@firebase/util';\nimport { _isOnline } from './navigator';\nimport { debugAssert } from './assert';\n\nexport const enum DelayMin {\n  OFFLINE = 5000\n}\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n */\nexport class Delay {\n  // The default value for the offline delay timeout in ms.\n\n  private readonly isMobile: boolean;\n  constructor(\n    private readonly shortDelay: number,\n    private readonly longDelay: number\n  ) {\n    // Internal error when improperly initialized.\n    debugAssert(\n      longDelay > shortDelay,\n      'Short delay should be less than long delay!'\n    );\n    this.isMobile = isMobileCordova() || isReactNative();\n  }\n\n  get(): number {\n    if (!_isOnline()) {\n      // Pick the shorter timeout.\n      return Math.min(DelayMin.OFFLINE, this.shortDelay);\n    }\n    // If running in a mobile environment, return the long delay, otherwise\n    // return the short delay.\n    // This could be improved in the future to dynamically change based on other\n    // variables instead of just reading the current environment.\n    return this.isMobile ? this.longDelay : this.shortDelay;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isBrowserExtension } from '@firebase/util';\nimport { _isHttpOrHttps } from './location';\n\n/**\n * Determine whether the browser is working online\n */\nexport function _isOnline(): boolean {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator &&\n    'onLine' in navigator &&\n    typeof navigator.onLine === 'boolean' &&\n    // Apply only for traditional web apps and Chrome extensions.\n    // This is especially true for Cordova apps which have unreliable\n    // navigator.onLine behavior unless cordova-plugin-network-information is\n    // installed which overwrites the native navigator.onLine value and\n    // defines navigator.connection.\n    (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)\n  ) {\n    return navigator.onLine;\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n}\n\nexport function _getUserLanguage(): string | null {\n  if (typeof navigator === 'undefined') {\n    return null;\n  }\n  const navigatorLanguage: NavigatorLanguage = navigator;\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language ||\n    // Couldn't determine language.\n    null\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigInternal } from '../../model/auth';\nimport { debugAssert } from './assert';\n\nexport function _emulatorUrl(config: ConfigInternal, path?: string): string {\n  debugAssert(config.emulator, 'Emulator should always be set here');\n  const { url } = config.emulator;\n\n  if (!path) {\n    return url;\n  }\n\n  return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugFail } from './assert';\n\nexport class FetchProvider {\n  private static fetchImpl: typeof fetch | null;\n  private static headersImpl: typeof Headers | null;\n  private static responseImpl: typeof Response | null;\n\n  static initialize(\n    fetchImpl: typeof fetch,\n    headersImpl?: typeof Headers,\n    responseImpl?: typeof Response\n  ): void {\n    this.fetchImpl = fetchImpl;\n    if (headersImpl) {\n      this.headersImpl = headersImpl;\n    }\n    if (responseImpl) {\n      this.responseImpl = responseImpl;\n    }\n  }\n\n  static fetch(): typeof fetch {\n    if (this.fetchImpl) {\n      return this.fetchImpl;\n    }\n    if (typeof self !== 'undefined' && 'fetch' in self) {\n      return self.fetch;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.fetch) {\n      return globalThis.fetch;\n    }\n    if (typeof fetch !== 'undefined') {\n      return fetch;\n    }\n    debugFail(\n      'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static headers(): typeof Headers {\n    if (this.headersImpl) {\n      return this.headersImpl;\n    }\n    if (typeof self !== 'undefined' && 'Headers' in self) {\n      return self.Headers;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.Headers) {\n      return globalThis.Headers;\n    }\n    if (typeof Headers !== 'undefined') {\n      return Headers;\n    }\n    debugFail(\n      'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static response(): typeof Response {\n    if (this.responseImpl) {\n      return this.responseImpl;\n    }\n    if (typeof self !== 'undefined' && 'Response' in self) {\n      return self.Response;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.Response) {\n      return globalThis.Response;\n    }\n    if (typeof Response !== 'undefined') {\n      return Response;\n    }\n    debugFail(\n      'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\n\n/**\n * Errors that can be returned by the backend\n */\nexport const enum ServerError {\n  ADMIN_ONLY_OPERATION = 'ADMIN_ONLY_OPERATION',\n  BLOCKING_FUNCTION_ERROR_RESPONSE = 'BLOCKING_FUNCTION_ERROR_RESPONSE',\n  CAPTCHA_CHECK_FAILED = 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED = 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH = 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'EMAIL_CHANGE_NEEDS_VERIFICATION',\n  EMAIL_EXISTS = 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE = 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED = 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL = 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID = 'INVALID_APP_ID',\n  INVALID_CERT_HASH = 'INVALID_CERT_HASH',\n  INVALID_CODE = 'INVALID_CODE',\n  INVALID_CONTINUE_URI = 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN = 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL = 'INVALID_EMAIL',\n  INVALID_ID_TOKEN = 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE = 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER = 'INVALID_IDENTIFIER',\n  INVALID_LOGIN_CREDENTIALS = 'INVALID_LOGIN_CREDENTIALS',\n  INVALID_MESSAGE_PAYLOAD = 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_MFA_PENDING_CREDENTIAL = 'INVALID_MFA_PENDING_CREDENTIAL',\n  INVALID_OAUTH_CLIENT_ID = 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE = 'INVALID_OOB_CODE',\n  INVALID_PASSWORD = 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN = 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID = 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL = 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER = 'INVALID_SENDER',\n  INVALID_SESSION_INFO = 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF = 'INVALID_TEMPORARY_PROOF',\n  INVALID_TENANT_ID = 'INVALID_TENANT_ID',\n  MFA_ENROLLMENT_NOT_FOUND = 'MFA_ENROLLMENT_NOT_FOUND',\n  MISSING_ANDROID_PACKAGE_NAME = 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL = 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE = 'MISSING_CODE',\n  MISSING_CONTINUE_URI = 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN = 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID = 'MISSING_IOS_BUNDLE_ID',\n  MISSING_MFA_ENROLLMENT_ID = 'MISSING_MFA_ENROLLMENT_ID',\n  MISSING_MFA_PENDING_CREDENTIAL = 'MISSING_MFA_PENDING_CREDENTIAL',\n  MISSING_OOB_CODE = 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE = 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD = 'MISSING_PASSWORD',\n  MISSING_REQ_TYPE = 'MISSING_REQ_TYPE',\n  MISSING_PHONE_NUMBER = 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO = 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED = 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED = 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT = 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL = 'REJECTED_CREDENTIAL',\n  SECOND_FACTOR_EXISTS = 'SECOND_FACTOR_EXISTS',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'SECOND_FACTOR_LIMIT_EXCEEDED',\n  SESSION_EXPIRED = 'SESSION_EXPIRED',\n  TENANT_ID_MISMATCH = 'TENANT_ID_MISMATCH',\n  TOKEN_EXPIRED = 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNSUPPORTED_FIRST_FACTOR = 'UNSUPPORTED_FIRST_FACTOR',\n  UNSUPPORTED_TENANT_OPERATION = 'UNSUPPORTED_TENANT_OPERATION',\n  UNAUTHORIZED_DOMAIN = 'UNAUTHORIZED_DOMAIN',\n  UNVERIFIED_EMAIL = 'UNVERIFIED_EMAIL',\n  USER_CANCELLED = 'USER_CANCELLED',\n  USER_DISABLED = 'USER_DISABLED',\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\n  WEAK_PASSWORD = 'WEAK_PASSWORD',\n  RECAPTCHA_NOT_ENABLED = 'RECAPTCHA_NOT_ENABLED',\n  MISSING_RECAPTCHA_TOKEN = 'MISSING_RECAPTCHA_TOKEN',\n  INVALID_RECAPTCHA_TOKEN = 'INVALID_RECAPTCHA_TOKEN',\n  INVALID_RECAPTCHA_ACTION = 'INVALID_RECAPTCHA_ACTION',\n  MISSING_CLIENT_TYPE = 'MISSING_CLIENT_TYPE',\n  MISSING_RECAPTCHA_VERSION = 'MISSING_RECAPTCHA_VERSION',\n  INVALID_RECAPTCHA_VERSION = 'INVALID_RECAPTCHA_VERSION',\n  INVALID_REQ_TYPE = 'INVALID_REQ_TYPE',\n  PASSWORD_DOES_NOT_MEET_REQUIREMENTS = 'PASSWORD_DOES_NOT_MEET_REQUIREMENTS'\n}\n\n/**\n * API Response in the event of an error\n */\nexport interface JsonError {\n  error: {\n    code: number;\n    message: string;\n    errors?: [\n      {\n        message: ServerError;\n        domain: string;\n        reason: string;\n      }\n    ];\n  };\n}\n\n/**\n * Type definition for a map from server errors to developer visible errors\n */\nexport declare type ServerErrorMap<ApiError extends string> = {\n  readonly [K in ApiError]: AuthErrorCode;\n};\n\n/**\n * Map from errors returned by the server to errors to developer visible errors\n */\nexport const SERVER_ERROR_MAP: Partial<ServerErrorMap<ServerError>> = {\n  // Custom token errors.\n  [ServerError.CREDENTIAL_MISMATCH]: AuthErrorCode.CREDENTIAL_MISMATCH,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CUSTOM_TOKEN]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Create Auth URI errors.\n  [ServerError.INVALID_IDENTIFIER]: AuthErrorCode.INVALID_EMAIL,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CONTINUE_URI]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign in with email and password errors (some apply to sign up too).\n  [ServerError.INVALID_PASSWORD]: AuthErrorCode.INVALID_PASSWORD,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_PASSWORD]: AuthErrorCode.MISSING_PASSWORD,\n  // Thrown if Email Enumeration Protection is enabled in the project and the email or password is\n  // invalid.\n  [ServerError.INVALID_LOGIN_CREDENTIALS]: AuthErrorCode.INVALID_CREDENTIAL,\n\n  // Sign up with email and password errors.\n  [ServerError.EMAIL_EXISTS]: AuthErrorCode.EMAIL_EXISTS,\n  [ServerError.PASSWORD_LOGIN_DISABLED]: AuthErrorCode.OPERATION_NOT_ALLOWED,\n\n  // Verify assertion for sign in with credential errors:\n  [ServerError.INVALID_IDP_RESPONSE]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.INVALID_PENDING_TOKEN]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.FEDERATED_USER_ID_ALREADY_LINKED]:\n    AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_REQ_TYPE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Send Password reset email errors:\n  [ServerError.EMAIL_NOT_FOUND]: AuthErrorCode.USER_DELETED,\n  [ServerError.RESET_PASSWORD_EXCEED_LIMIT]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  [ServerError.EXPIRED_OOB_CODE]: AuthErrorCode.EXPIRED_OOB_CODE,\n  [ServerError.INVALID_OOB_CODE]: AuthErrorCode.INVALID_OOB_CODE,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_OOB_CODE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Operations that require ID token in request:\n  [ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n    AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN,\n  [ServerError.INVALID_ID_TOKEN]: AuthErrorCode.INVALID_AUTH,\n  [ServerError.TOKEN_EXPIRED]: AuthErrorCode.TOKEN_EXPIRED,\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.TOKEN_EXPIRED,\n\n  // Other errors.\n  [ServerError.TOO_MANY_ATTEMPTS_TRY_LATER]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n  [ServerError.PASSWORD_DOES_NOT_MEET_REQUIREMENTS]:\n    AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS,\n\n  // Phone Auth related errors.\n  [ServerError.INVALID_CODE]: AuthErrorCode.INVALID_CODE,\n  [ServerError.INVALID_SESSION_INFO]: AuthErrorCode.INVALID_SESSION_INFO,\n  [ServerError.INVALID_TEMPORARY_PROOF]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.MISSING_SESSION_INFO]: AuthErrorCode.MISSING_SESSION_INFO,\n  [ServerError.SESSION_EXPIRED]: AuthErrorCode.CODE_EXPIRED,\n\n  // Other action code errors when additional settings passed.\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  [ServerError.MISSING_ANDROID_PACKAGE_NAME]:\n    AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME,\n  [ServerError.UNAUTHORIZED_DOMAIN]: AuthErrorCode.UNAUTHORIZED_DOMAIN,\n\n  // getProjectConfig errors when clientId is passed.\n  [ServerError.INVALID_OAUTH_CLIENT_ID]: AuthErrorCode.INVALID_OAUTH_CLIENT_ID,\n\n  // User actions (sign-up or deletion) disabled errors.\n  [ServerError.ADMIN_ONLY_OPERATION]: AuthErrorCode.ADMIN_ONLY_OPERATION,\n\n  // Multi factor related errors.\n  [ServerError.INVALID_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.INVALID_MFA_SESSION,\n  [ServerError.MFA_ENROLLMENT_NOT_FOUND]: AuthErrorCode.MFA_INFO_NOT_FOUND,\n  [ServerError.MISSING_MFA_ENROLLMENT_ID]: AuthErrorCode.MISSING_MFA_INFO,\n  [ServerError.MISSING_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.MISSING_MFA_SESSION,\n  [ServerError.SECOND_FACTOR_EXISTS]:\n    AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED,\n  [ServerError.SECOND_FACTOR_LIMIT_EXCEEDED]:\n    AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED,\n\n  // Blocking functions related errors.\n  [ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Recaptcha related errors.\n  [ServerError.RECAPTCHA_NOT_ENABLED]: AuthErrorCode.RECAPTCHA_NOT_ENABLED,\n  [ServerError.MISSING_RECAPTCHA_TOKEN]: AuthErrorCode.MISSING_RECAPTCHA_TOKEN,\n  [ServerError.INVALID_RECAPTCHA_TOKEN]: AuthErrorCode.INVALID_RECAPTCHA_TOKEN,\n  [ServerError.INVALID_RECAPTCHA_ACTION]:\n    AuthErrorCode.INVALID_RECAPTCHA_ACTION,\n  [ServerError.MISSING_CLIENT_TYPE]: AuthErrorCode.MISSING_CLIENT_TYPE,\n  [ServerError.MISSING_RECAPTCHA_VERSION]:\n    AuthErrorCode.MISSING_RECAPTCHA_VERSION,\n  [ServerError.INVALID_RECAPTCHA_VERSION]:\n    AuthErrorCode.INVALID_RECAPTCHA_VERSION,\n  [ServerError.INVALID_REQ_TYPE]: AuthErrorCode.INVALID_REQ_TYPE\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError, querystring } from '@firebase/util';\n\nimport { AuthErrorCode, NamedErrorParams } from '../core/errors';\nimport {\n  _createError,\n  _errorWithCustomMessage,\n  _fail\n} from '../core/util/assert';\nimport { Delay } from '../core/util/delay';\nimport { _emulatorUrl } from '../core/util/emulator';\nimport { FetchProvider } from '../core/util/fetch_provider';\nimport { Auth } from '../model/public_types';\nimport { AuthInternal, ConfigInternal } from '../model/auth';\nimport { IdTokenResponse, TaggedWithTokenResponse } from '../model/id_token';\nimport { IdTokenMfaResponse } from './authentication/mfa';\nimport { SERVER_ERROR_MAP, ServerError, ServerErrorMap } from './errors';\n\nexport const enum HttpMethod {\n  POST = 'POST',\n  GET = 'GET'\n}\n\nexport const enum HttpHeader {\n  CONTENT_TYPE = 'Content-Type',\n  X_FIREBASE_LOCALE = 'X-Firebase-Locale',\n  X_CLIENT_VERSION = 'X-Client-Version',\n  X_FIREBASE_GMPID = 'X-Firebase-gmpid',\n  X_FIREBASE_CLIENT = 'X-Firebase-Client',\n  X_FIREBASE_APP_CHECK = 'X-Firebase-AppCheck'\n}\n\nexport const enum Endpoint {\n  CREATE_AUTH_URI = '/v1/accounts:createAuthUri',\n  DELETE_ACCOUNT = '/v1/accounts:delete',\n  RESET_PASSWORD = '/v1/accounts:resetPassword',\n  SIGN_UP = '/v1/accounts:signUp',\n  SIGN_IN_WITH_CUSTOM_TOKEN = '/v1/accounts:signInWithCustomToken',\n  SIGN_IN_WITH_EMAIL_LINK = '/v1/accounts:signInWithEmailLink',\n  SIGN_IN_WITH_IDP = '/v1/accounts:signInWithIdp',\n  SIGN_IN_WITH_PASSWORD = '/v1/accounts:signInWithPassword',\n  SIGN_IN_WITH_PHONE_NUMBER = '/v1/accounts:signInWithPhoneNumber',\n  SEND_VERIFICATION_CODE = '/v1/accounts:sendVerificationCode',\n  SEND_OOB_CODE = '/v1/accounts:sendOobCode',\n  SET_ACCOUNT_INFO = '/v1/accounts:update',\n  GET_ACCOUNT_INFO = '/v1/accounts:lookup',\n  GET_RECAPTCHA_PARAM = '/v1/recaptchaParams',\n  START_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:start',\n  FINALIZE_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:finalize',\n  START_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:start',\n  FINALIZE_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:finalize',\n  WITHDRAW_MFA = '/v2/accounts/mfaEnrollment:withdraw',\n  GET_PROJECT_CONFIG = '/v1/projects',\n  GET_RECAPTCHA_CONFIG = '/v2/recaptchaConfig',\n  GET_PASSWORD_POLICY = '/v2/passwordPolicy',\n  TOKEN = '/v1/token',\n  REVOKE_TOKEN = '/v2/accounts:revokeToken'\n}\n\nexport const enum RecaptchaClientType {\n  WEB = 'CLIENT_TYPE_WEB',\n  ANDROID = 'CLIENT_TYPE_ANDROID',\n  IOS = 'CLIENT_TYPE_IOS'\n}\n\nexport const enum RecaptchaVersion {\n  ENTERPRISE = 'RECAPTCHA_ENTERPRISE'\n}\n\nexport const enum RecaptchaActionName {\n  SIGN_IN_WITH_PASSWORD = 'signInWithPassword',\n  GET_OOB_CODE = 'getOobCode',\n  SIGN_UP_PASSWORD = 'signUpPassword'\n}\n\nexport const enum EnforcementState {\n  ENFORCE = 'ENFORCE',\n  AUDIT = 'AUDIT',\n  OFF = 'OFF',\n  ENFORCEMENT_STATE_UNSPECIFIED = 'ENFORCEMENT_STATE_UNSPECIFIED'\n}\n\n// Providers that have reCAPTCHA Enterprise support.\nexport const enum RecaptchaProvider {\n  EMAIL_PASSWORD_PROVIDER = 'EMAIL_PASSWORD_PROVIDER'\n}\n\nexport const DEFAULT_API_TIMEOUT_MS = new Delay(30_000, 60_000);\n\nexport function _addTidIfNecessary<T extends { tenantId?: string }>(\n  auth: Auth,\n  request: T\n): T {\n  if (auth.tenantId && !request.tenantId) {\n    return {\n      ...request,\n      tenantId: auth.tenantId\n    };\n  }\n  return request;\n}\n\nexport async function _performApiRequest<T, V>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\n    let body = {};\n    let params = {};\n    if (request) {\n      if (method === HttpMethod.GET) {\n        params = request;\n      } else {\n        body = {\n          body: JSON.stringify(request)\n        };\n      }\n    }\n\n    const query = querystring({\n      key: auth.config.apiKey,\n      ...params\n    }).slice(1);\n\n    const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n    headers[HttpHeader.CONTENT_TYPE] = 'application/json';\n\n    if (auth.languageCode) {\n      headers[HttpHeader.X_FIREBASE_LOCALE] = auth.languageCode;\n    }\n\n    return FetchProvider.fetch()(\n      _getFinalTarget(auth, auth.config.apiHost, path, query),\n      {\n        method,\n        headers,\n        referrerPolicy: 'no-referrer',\n        ...body\n      }\n    );\n  });\n}\n\nexport async function _performFetchWithErrorHandling<V>(\n  auth: Auth,\n  customErrorMap: Partial<ServerErrorMap<ServerError>>,\n  fetchFn: () => Promise<Response>\n): Promise<V> {\n  (auth as AuthInternal)._canInitEmulator = false;\n  const errorMap = { ...SERVER_ERROR_MAP, ...customErrorMap };\n  try {\n    const networkTimeout = new NetworkTimeout<Response>(auth);\n    const response: Response = await Promise.race<Promise<Response>>([\n      fetchFn(),\n      networkTimeout.promise\n    ]);\n\n    // If we've reached this point, the fetch succeeded and the networkTimeout\n    // didn't throw; clear the network timeout delay so that Node won't hang\n    networkTimeout.clearNetworkTimeout();\n\n    const json = await response.json();\n    if ('needConfirmation' in json) {\n      throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, json);\n    }\n\n    if (response.ok && !('errorMessage' in json)) {\n      return json;\n    } else {\n      const errorMessage = response.ok ? json.errorMessage : json.error.message;\n      const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\n      if (serverErrorCode === ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n        throw _makeTaggedError(\n          auth,\n          AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n          json\n        );\n      } else if (serverErrorCode === ServerError.EMAIL_EXISTS) {\n        throw _makeTaggedError(auth, AuthErrorCode.EMAIL_EXISTS, json);\n      } else if (serverErrorCode === ServerError.USER_DISABLED) {\n        throw _makeTaggedError(auth, AuthErrorCode.USER_DISABLED, json);\n      }\n      const authError =\n        errorMap[serverErrorCode as ServerError] ||\n        (serverErrorCode\n          .toLowerCase()\n          .replace(/[_\\s]+/g, '-') as unknown as AuthErrorCode);\n      if (serverErrorMessage) {\n        throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n      } else {\n        _fail(auth, authError);\n      }\n    }\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      throw e;\n    }\n    // Changing this to a different error code will log user out when there is a network error\n    // because we treat any error other than NETWORK_REQUEST_FAILED as token is invalid.\n    // https://github.com/firebase/firebase-js-sdk/blob/4fbc73610d70be4e0852e7de63a39cb7897e8546/packages/auth/src/core/auth/auth_impl.ts#L309-L316\n    _fail(auth, AuthErrorCode.NETWORK_REQUEST_FAILED, { 'message': String(e) });\n  }\n}\n\nexport async function _performSignInRequest<T, V extends IdTokenResponse>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  const serverResponse = (await _performApiRequest<T, V | IdTokenMfaResponse>(\n    auth,\n    method,\n    path,\n    request,\n    customErrorMap\n  )) as V;\n  if ('mfaPendingCredential' in serverResponse) {\n    _fail(auth, AuthErrorCode.MFA_REQUIRED, {\n      _serverResponse: serverResponse\n    });\n  }\n\n  return serverResponse;\n}\n\nexport function _getFinalTarget(\n  auth: Auth,\n  host: string,\n  path: string,\n  query: string\n): string {\n  const base = `${host}${path}?${query}`;\n\n  if (!(auth as AuthInternal).config.emulator) {\n    return `${auth.config.apiScheme}://${base}`;\n  }\n\n  return _emulatorUrl(auth.config as ConfigInternal, base);\n}\n\nexport function _parseEnforcementState(\n  enforcementStateStr: string\n): EnforcementState {\n  switch (enforcementStateStr) {\n    case 'ENFORCE':\n      return EnforcementState.ENFORCE;\n    case 'AUDIT':\n      return EnforcementState.AUDIT;\n    case 'OFF':\n      return EnforcementState.OFF;\n    default:\n      return EnforcementState.ENFORCEMENT_STATE_UNSPECIFIED;\n  }\n}\n\nclass NetworkTimeout<T> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timer: any | null = null;\n  readonly promise = new Promise<T>((_, reject) => {\n    this.timer = setTimeout(() => {\n      return reject(\n        _createError(this.auth, AuthErrorCode.NETWORK_REQUEST_FAILED)\n      );\n    }, DEFAULT_API_TIMEOUT_MS.get());\n  });\n\n  clearNetworkTimeout(): void {\n    clearTimeout(this.timer);\n  }\n\n  constructor(private readonly auth: Auth) {}\n}\n\ninterface PotentialResponse extends IdTokenResponse {\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport function _makeTaggedError(\n  auth: Auth,\n  code: AuthErrorCode,\n  response: PotentialResponse\n): FirebaseError {\n  const errorParams: NamedErrorParams = {\n    appName: auth.name\n  };\n\n  if (response.email) {\n    errorParams.email = response.email;\n  }\n  if (response.phoneNumber) {\n    errorParams.phoneNumber = response.phoneNumber;\n  }\n\n  const error = _createError(auth, code, errorParams);\n\n  // We know customData is defined on error because errorParams is defined\n  (error.customData! as TaggedWithTokenResponse)._tokenResponse = response;\n  return error;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RecaptchaParameters } from '../../model/public_types';\nimport {\n  GetRecaptchaConfigResponse,\n  RecaptchaEnforcementProviderState\n} from '../../api/authentication/recaptcha';\nimport { EnforcementState, _parseEnforcementState } from '../../api/index';\n\n// reCAPTCHA v2 interface\nexport interface Recaptcha {\n  render: (container: HTMLElement, parameters: RecaptchaParameters) => number;\n  getResponse: (id: number) => string;\n  execute: (id: number) => unknown;\n  reset: (id: number) => unknown;\n}\n\nexport function isV2(\n  grecaptcha: Recaptcha | GreCAPTCHA | undefined\n): grecaptcha is Recaptcha {\n  return (\n    grecaptcha !== undefined &&\n    (grecaptcha as Recaptcha).getResponse !== undefined\n  );\n}\n\n// reCAPTCHA Enterprise & v3 shared interface\nexport interface GreCAPTCHATopLevel extends GreCAPTCHA {\n  enterprise: GreCAPTCHA;\n}\n\n// reCAPTCHA Enterprise interface\nexport interface GreCAPTCHA {\n  ready: (callback: () => void) => void;\n  execute: (siteKey: string, options: { action: string }) => Promise<string>;\n  render: (\n    container: string | HTMLElement,\n    parameters: GreCAPTCHARenderOption\n  ) => string;\n}\n\nexport interface GreCAPTCHARenderOption {\n  sitekey: string;\n  size: 'invisible';\n}\n\nexport function isEnterprise(\n  grecaptcha: Recaptcha | GreCAPTCHA | undefined\n): grecaptcha is GreCAPTCHATopLevel {\n  return (\n    grecaptcha !== undefined &&\n    (grecaptcha as GreCAPTCHATopLevel).enterprise !== undefined\n  );\n}\n\n// TODO(chuanr): Replace this with the AuthWindow after resolving the dependency issue in Node.js env.\ndeclare global {\n  interface Window {\n    grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\n  }\n}\n\nexport class RecaptchaConfig {\n  /**\n   * The reCAPTCHA site key.\n   */\n  siteKey: string = '';\n\n  /**\n   * The list of providers and their enablement status for reCAPTCHA Enterprise.\n   */\n  recaptchaEnforcementState: RecaptchaEnforcementProviderState[] = [];\n\n  constructor(response: GetRecaptchaConfigResponse) {\n    if (response.recaptchaKey === undefined) {\n      throw new Error('recaptchaKey undefined');\n    }\n    // Example response.recaptchaKey: \"projects/proj123/keys/sitekey123\"\n    this.siteKey = response.recaptchaKey.split('/')[3];\n    this.recaptchaEnforcementState = response.recaptchaEnforcementState;\n  }\n\n  /**\n   * Returns the reCAPTCHA Enterprise enforcement state for the given provider.\n   *\n   * @param providerStr - The provider whose enforcement state is to be returned.\n   * @returns The reCAPTCHA Enterprise enforcement state for the given provider.\n   */\n  getProviderEnforcementState(providerStr: string): EnforcementState | null {\n    if (\n      !this.recaptchaEnforcementState ||\n      this.recaptchaEnforcementState.length === 0\n    ) {\n      return null;\n    }\n\n    for (const recaptchaEnforcementState of this.recaptchaEnforcementState) {\n      if (\n        recaptchaEnforcementState.provider &&\n        recaptchaEnforcementState.provider === providerStr\n      ) {\n        return _parseEnforcementState(\n          recaptchaEnforcementState.enforcementState\n        );\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns true if the reCAPTCHA Enterprise enforcement state for the provider is set to ENFORCE or AUDIT.\n   *\n   * @param providerStr - The provider whose enablement state is to be returned.\n   * @returns Whether or not reCAPTCHA Enterprise protection is enabled for the given provider.\n   */\n  isProviderEnabled(providerStr: string): boolean {\n    return (\n      this.getProviderEnforcementState(providerStr) ===\n        EnforcementState.ENFORCE ||\n      this.getProviderEnforcementState(providerStr) === EnforcementState.AUDIT\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _performApiRequest,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\ninterface GetRecaptchaParamResponse {\n  recaptchaSiteKey?: string;\n}\n\nexport async function getRecaptchaParams(auth: Auth): Promise<string> {\n  return (\n    (\n      await _performApiRequest<void, GetRecaptchaParamResponse>(\n        auth,\n        HttpMethod.GET,\n        Endpoint.GET_RECAPTCHA_PARAM\n      )\n    ).recaptchaSiteKey || ''\n  );\n}\n\n// The following functions are for reCAPTCHA enterprise integration.\ninterface GetRecaptchaConfigRequest {\n  tenantId?: string;\n  clientType?: RecaptchaClientType;\n  version?: RecaptchaVersion;\n}\n\nexport interface RecaptchaEnforcementProviderState {\n  provider: string;\n  enforcementState: string;\n}\n\nexport interface GetRecaptchaConfigResponse {\n  recaptchaKey: string;\n  recaptchaEnforcementState: RecaptchaEnforcementProviderState[];\n}\n\nexport async function getRecaptchaConfig(\n  auth: Auth,\n  request: GetRecaptchaConfigRequest\n): Promise<GetRecaptchaConfigResponse> {\n  return _performApiRequest<\n    GetRecaptchaConfigRequest,\n    GetRecaptchaConfigResponse\n  >(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_RECAPTCHA_CONFIG,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { MfaEnrollment } from './mfa';\nimport { Auth } from '../../model/public_types';\n\nexport interface DeleteAccountRequest {\n  idToken: string;\n}\n\nexport async function deleteAccount(\n  auth: Auth,\n  request: DeleteAccountRequest\n): Promise<void> {\n  return _performApiRequest<DeleteAccountRequest, void>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.DELETE_ACCOUNT,\n    request\n  );\n}\n\nexport interface ProviderUserInfo {\n  providerId: string;\n  rawId?: string;\n  email?: string;\n  displayName?: string;\n  photoUrl?: string;\n  phoneNumber?: string;\n}\n\nexport interface DeleteLinkedAccountsRequest {\n  idToken: string;\n  deleteProvider: string[];\n}\n\nexport interface DeleteLinkedAccountsResponse {\n  providerUserInfo: ProviderUserInfo[];\n}\n\nexport async function deleteLinkedAccounts(\n  auth: Auth,\n  request: DeleteLinkedAccountsRequest\n): Promise<DeleteLinkedAccountsResponse> {\n  return _performApiRequest<\n    DeleteLinkedAccountsRequest,\n    DeleteLinkedAccountsResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface APIUserInfo {\n  localId?: string;\n  displayName?: string;\n  photoUrl?: string;\n  email?: string;\n  emailVerified?: boolean;\n  phoneNumber?: string;\n  lastLoginAt?: number;\n  createdAt?: number;\n  tenantId?: string;\n  passwordHash?: string;\n  providerUserInfo?: ProviderUserInfo[];\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface GetAccountInfoRequest {\n  idToken: string;\n}\n\nexport interface GetAccountInfoResponse {\n  users: APIUserInfo[];\n}\n\nexport async function getAccountInfo(\n  auth: Auth,\n  request: GetAccountInfoRequest\n): Promise<GetAccountInfoResponse> {\n  return _performApiRequest<GetAccountInfoRequest, GetAccountInfoResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.GET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function utcTimestampToDateString(\n  utcTimestamp?: string | number\n): string | undefined {\n  if (!utcTimestamp) {\n    return undefined;\n  }\n  try {\n    // Convert to date object.\n    const date = new Date(Number(utcTimestamp));\n    // Test date is valid.\n    if (!isNaN(date.getTime())) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. undefined will be returned.\n  }\n  return undefined;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, ParsedToken, User } from '../../model/public_types';\nimport { base64Decode, getModularInstance } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { _logError } from '../util/log';\nimport { utcTimestampToDateString } from '../util/time';\nimport { AuthErrorCode } from '../errors';\n\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport function getIdToken(user: User, forceRefresh = false): Promise<string> {\n  return getModularInstance(user).getIdToken(forceRefresh);\n}\n\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getIdTokenResult(\n  user: User,\n  forceRefresh = false\n): Promise<IdTokenResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const token = await userInternal.getIdToken(forceRefresh);\n  const claims = _parseToken(token);\n\n  _assert(\n    claims && claims.exp && claims.auth_time && claims.iat,\n    userInternal.auth,\n    AuthErrorCode.INTERNAL_ERROR\n  );\n  const firebase =\n    typeof claims.firebase === 'object' ? claims.firebase : undefined;\n\n  const signInProvider: string | undefined = firebase?.['sign_in_provider'];\n\n  return {\n    claims,\n    token,\n    authTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.auth_time)\n    )!,\n    issuedAtTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.iat)\n    )!,\n    expirationTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.exp)\n    )!,\n    signInProvider: signInProvider || null,\n    signInSecondFactor: firebase?.['sign_in_second_factor'] || null\n  };\n}\n\nfunction secondsStringToMilliseconds(seconds: string): number {\n  return Number(seconds) * 1000;\n}\n\nexport function _parseToken(token: string): ParsedToken | null {\n  const [algorithm, payload, signature] = token.split('.');\n  if (\n    algorithm === undefined ||\n    payload === undefined ||\n    signature === undefined\n  ) {\n    _logError('JWT malformed, contained fewer than 3 sections');\n    return null;\n  }\n\n  try {\n    const decoded = base64Decode(payload);\n    if (!decoded) {\n      _logError('Failed to decode base64 JWT payload');\n      return null;\n    }\n    return JSON.parse(decoded);\n  } catch (e) {\n    _logError(\n      'Caught error parsing JWT payload as JSON',\n      (e as Error)?.toString()\n    );\n    return null;\n  }\n}\n\n/**\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\n */\nexport function _tokenExpiresIn(token: string): number {\n  const parsedToken = _parseToken(token);\n  _assert(parsedToken, AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.exp !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.iat !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\nexport async function _logoutIfInvalidated<T>(\n  user: UserInternal,\n  promise: Promise<T>,\n  bypassAuthState = false\n): Promise<T> {\n  if (bypassAuthState) {\n    return promise;\n  }\n  try {\n    return await promise;\n  } catch (e) {\n    if (e instanceof FirebaseError && isUserInvalidated(e)) {\n      if (user.auth.currentUser === user) {\n        await user.auth.signOut();\n      }\n    }\n\n    throw e;\n  }\n}\n\nfunction isUserInvalidated({ code }: FirebaseError): boolean {\n  return (\n    code === `auth/${AuthErrorCode.USER_DISABLED}` ||\n    code === `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\n// Refresh the token five minutes before expiration\nexport const enum Duration {\n  OFFSET = 5 * 1000 * 60,\n  RETRY_BACKOFF_MIN = 30 * 1000,\n  RETRY_BACKOFF_MAX = 16 * 60 * 1000\n}\n\nexport class ProactiveRefresh {\n  private isRunning = false;\n\n  // Node timers and browser timers return fundamentally different types.\n  // We don't actually care what the value is but TS won't accept unknown and\n  // we can't cast properly in both environments.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timerId: any | null = null;\n  private errorBackoff = Duration.RETRY_BACKOFF_MIN;\n\n  constructor(private readonly user: UserInternal) {}\n\n  _start(): void {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n    this.schedule();\n  }\n\n  _stop(): void {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.isRunning = false;\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  private getInterval(wasError: boolean): number {\n    if (wasError) {\n      const interval = this.errorBackoff;\n      this.errorBackoff = Math.min(\n        this.errorBackoff * 2,\n        Duration.RETRY_BACKOFF_MAX\n      );\n      return interval;\n    } else {\n      // Reset the error backoff\n      this.errorBackoff = Duration.RETRY_BACKOFF_MIN;\n      const expTime = this.user.stsTokenManager.expirationTime ?? 0;\n      const interval = expTime - Date.now() - Duration.OFFSET;\n\n      return Math.max(0, interval);\n    }\n  }\n\n  private schedule(wasError = false): void {\n    if (!this.isRunning) {\n      // Just in case...\n      return;\n    }\n\n    const interval = this.getInterval(wasError);\n    this.timerId = setTimeout(async () => {\n      await this.iteration();\n    }, interval);\n  }\n\n  private async iteration(): Promise<void> {\n    try {\n      await this.user.getIdToken(true);\n    } catch (e) {\n      // Only retry on network errors\n      if (\n        (e as FirebaseError)?.code ===\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        this.schedule(/* wasError */ true);\n      }\n\n      return;\n    }\n    this.schedule();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserMetadata as UserMetadataType } from '../../model/public_types';\n\nimport { utcTimestampToDateString } from '../util/time';\n\nexport class UserMetadata implements UserMetadataType {\n  creationTime?: string;\n  lastSignInTime?: string;\n\n  constructor(\n    private createdAt?: string | number,\n    private lastLoginAt?: string | number\n  ) {\n    this._initializeTime();\n  }\n\n  private _initializeTime(): void {\n    this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n    this.creationTime = utcTimestampToDateString(this.createdAt);\n  }\n\n  _copy(metadata: UserMetadata): void {\n    this.createdAt = metadata.createdAt;\n    this.lastLoginAt = metadata.lastLoginAt;\n    this._initializeTime();\n  }\n\n  toJSON(): object {\n    return {\n      createdAt: this.createdAt,\n      lastLoginAt: this.lastLoginAt\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User, UserInfo } from '../../model/public_types';\n\nimport {\n  getAccountInfo,\n  ProviderUserInfo\n} from '../../api/account_management/account';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserMetadata } from './user_metadata';\nimport { getModularInstance } from '@firebase/util';\n\nexport async function _reloadWithoutSaving(user: UserInternal): Promise<void> {\n  const auth = user.auth;\n  const idToken = await user.getIdToken();\n  const response = await _logoutIfInvalidated(\n    user,\n    getAccountInfo(auth, { idToken })\n  );\n\n  _assert(response?.users.length, auth, AuthErrorCode.INTERNAL_ERROR);\n\n  const coreAccount = response.users[0];\n\n  user._notifyReloadListener(coreAccount);\n\n  const newProviderData = coreAccount.providerUserInfo?.length\n    ? extractProviderData(coreAccount.providerUserInfo)\n    : [];\n\n  const providerData = mergeProviderData(user.providerData, newProviderData);\n\n  // Preserves the non-nonymous status of the stored user, even if no more\n  // credentials (federated or email/password) are linked to the user. If\n  // the user was previously anonymous, then use provider data to update.\n  // On the other hand, if it was not anonymous before, it should never be\n  // considered anonymous now.\n  const oldIsAnonymous = user.isAnonymous;\n  const newIsAnonymous =\n    !(user.email && coreAccount.passwordHash) && !providerData?.length;\n  const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n\n  const updates: Partial<UserInternal> = {\n    uid: coreAccount.localId,\n    displayName: coreAccount.displayName || null,\n    photoURL: coreAccount.photoUrl || null,\n    email: coreAccount.email || null,\n    emailVerified: coreAccount.emailVerified || false,\n    phoneNumber: coreAccount.phoneNumber || null,\n    tenantId: coreAccount.tenantId || null,\n    providerData,\n    metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n    isAnonymous\n  };\n\n  Object.assign(user, updates);\n}\n\n/**\n * Reloads user account data, if signed in.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function reload(user: User): Promise<void> {\n  const userInternal: UserInternal = getModularInstance(user) as UserInternal;\n  await _reloadWithoutSaving(userInternal);\n\n  // Even though the current user hasn't changed, update\n  // current user will trigger a persistence update w/ the\n  // new info.\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  userInternal.auth._notifyListenersIfCurrent(userInternal);\n}\n\nfunction mergeProviderData(\n  original: UserInfo[],\n  newData: UserInfo[]\n): UserInfo[] {\n  const deduped = original.filter(\n    o => !newData.some(n => n.providerId === o.providerId)\n  );\n  return [...deduped, ...newData];\n}\n\nfunction extractProviderData(providers: ProviderUserInfo[]): UserInfo[] {\n  return providers.map(({ providerId, ...provider }) => {\n    return {\n      providerId,\n      uid: provider.rawId || '',\n      displayName: provider.displayName || null,\n      email: provider.email || null,\n      phoneNumber: provider.phoneNumber || null,\n      photoURL: provider.photoUrl || null\n    };\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  _getFinalTarget,\n  _performFetchWithErrorHandling,\n  _performApiRequest,\n  _addTidIfNecessary,\n  HttpMethod,\n  HttpHeader,\n  Endpoint\n} from '../index';\nimport { FetchProvider } from '../../core/util/fetch_provider';\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\n\nexport const enum TokenType {\n  REFRESH_TOKEN = 'REFRESH_TOKEN',\n  ACCESS_TOKEN = 'ACCESS_TOKEN'\n}\n\n/** The server responses with snake_case; we convert to camelCase */\ninterface RequestStsTokenServerResponse {\n  access_token: string;\n  expires_in: string;\n  refresh_token: string;\n}\n\nexport interface RequestStsTokenResponse {\n  accessToken: string;\n  expiresIn: string;\n  refreshToken: string;\n}\n\nexport interface RevokeTokenRequest {\n  providerId: string;\n  tokenType: TokenType;\n  token: string;\n  idToken: string;\n  tenantId?: string;\n}\n\nexport interface RevokeTokenResponse {}\n\nexport async function requestStsToken(\n  auth: Auth,\n  refreshToken: string\n): Promise<RequestStsTokenResponse> {\n  const response =\n    await _performFetchWithErrorHandling<RequestStsTokenServerResponse>(\n      auth,\n      {},\n      async () => {\n        const body = querystring({\n          'grant_type': 'refresh_token',\n          'refresh_token': refreshToken\n        }).slice(1);\n        const { tokenApiHost, apiKey } = auth.config;\n        const url = _getFinalTarget(\n          auth,\n          tokenApiHost,\n          Endpoint.TOKEN,\n          `key=${apiKey}`\n        );\n\n        const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n        headers[HttpHeader.CONTENT_TYPE] = 'application/x-www-form-urlencoded';\n\n        return FetchProvider.fetch()(url, {\n          method: HttpMethod.POST,\n          headers,\n          body\n        });\n      }\n    );\n\n  // The response comes back in snake_case. Convert to camel:\n  return {\n    accessToken: response.access_token,\n    expiresIn: response.expires_in,\n    refreshToken: response.refresh_token\n  };\n}\n\nexport async function revokeToken(\n  auth: Auth,\n  request: RevokeTokenRequest\n): Promise<RevokeTokenResponse> {\n  return _performApiRequest<RevokeTokenRequest, RevokeTokenResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.REVOKE_TOKEN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { requestStsToken } from '../../api/authentication/token';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert, debugFail } from '../util/assert';\nimport { _tokenExpiresIn } from './id_token_result';\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n */\nexport const enum Buffer {\n  TOKEN_REFRESH = 30_000\n}\n\n/**\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport class StsTokenManager {\n  refreshToken: string | null = null;\n  accessToken: string | null = null;\n  expirationTime: number | null = null;\n\n  get isExpired(): boolean {\n    return (\n      !this.expirationTime ||\n      Date.now() > this.expirationTime - Buffer.TOKEN_REFRESH\n    );\n  }\n\n  updateFromServerResponse(\n    response: IdTokenResponse | FinalizeMfaResponse\n  ): void {\n    _assert(response.idToken, AuthErrorCode.INTERNAL_ERROR);\n    _assert(\n      typeof response.idToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof response.refreshToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const expiresIn =\n      'expiresIn' in response && typeof response.expiresIn !== 'undefined'\n        ? Number(response.expiresIn)\n        : _tokenExpiresIn(response.idToken);\n    this.updateTokensAndExpiration(\n      response.idToken,\n      response.refreshToken,\n      expiresIn\n    );\n  }\n\n  async getToken(\n    auth: AuthInternal,\n    forceRefresh = false\n  ): Promise<string | null> {\n    _assert(\n      !this.accessToken || this.refreshToken,\n      auth,\n      AuthErrorCode.TOKEN_EXPIRED\n    );\n\n    if (!forceRefresh && this.accessToken && !this.isExpired) {\n      return this.accessToken;\n    }\n\n    if (this.refreshToken) {\n      await this.refresh(auth, this.refreshToken!);\n      return this.accessToken;\n    }\n\n    return null;\n  }\n\n  clearRefreshToken(): void {\n    this.refreshToken = null;\n  }\n\n  private async refresh(auth: AuthInternal, oldToken: string): Promise<void> {\n    const { accessToken, refreshToken, expiresIn } = await requestStsToken(\n      auth,\n      oldToken\n    );\n    this.updateTokensAndExpiration(\n      accessToken,\n      refreshToken,\n      Number(expiresIn)\n    );\n  }\n\n  private updateTokensAndExpiration(\n    accessToken: string,\n    refreshToken: string,\n    expiresInSec: number\n  ): void {\n    this.refreshToken = refreshToken || null;\n    this.accessToken = accessToken || null;\n    this.expirationTime = Date.now() + expiresInSec * 1000;\n  }\n\n  static fromJSON(appName: string, object: PersistedBlob): StsTokenManager {\n    const { refreshToken, accessToken, expirationTime } = object;\n\n    const manager = new StsTokenManager();\n    if (refreshToken) {\n      _assert(typeof refreshToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.refreshToken = refreshToken;\n    }\n    if (accessToken) {\n      _assert(typeof accessToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.accessToken = accessToken;\n    }\n    if (expirationTime) {\n      _assert(\n        typeof expirationTime === 'number',\n        AuthErrorCode.INTERNAL_ERROR,\n        {\n          appName\n        }\n      );\n      manager.expirationTime = expirationTime;\n    }\n    return manager;\n  }\n\n  toJSON(): object {\n    return {\n      refreshToken: this.refreshToken,\n      accessToken: this.accessToken,\n      expirationTime: this.expirationTime\n    };\n  }\n\n  _assign(stsTokenManager: StsTokenManager): void {\n    this.accessToken = stsTokenManager.accessToken;\n    this.refreshToken = stsTokenManager.refreshToken;\n    this.expirationTime = stsTokenManager.expirationTime;\n  }\n\n  _clone(): StsTokenManager {\n    return Object.assign(new StsTokenManager(), this.toJSON());\n  }\n\n  _performRefresh(): never {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult } from '../../model/public_types';\nimport { NextFn } from '@firebase/util';\n\nimport {\n  APIUserInfo,\n  deleteAccount\n} from '../../api/account_management/account';\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport {\n  MutableUserInfo,\n  UserInternal,\n  UserParameters\n} from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert } from '../util/assert';\nimport { getIdTokenResult } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { ProactiveRefresh } from './proactive_refresh';\nimport { _reloadWithoutSaving, reload } from './reload';\nimport { StsTokenManager } from './token_manager';\nimport { UserMetadata } from './user_metadata';\nimport { ProviderId } from '../../model/enums';\n\nfunction assertStringOrUndefined(\n  assertion: unknown,\n  appName: string\n): asserts assertion is string | undefined {\n  _assert(\n    typeof assertion === 'string' || typeof assertion === 'undefined',\n    AuthErrorCode.INTERNAL_ERROR,\n    { appName }\n  );\n}\n\nexport class UserImpl implements UserInternal {\n  // For the user object, provider is always Firebase.\n  readonly providerId = ProviderId.FIREBASE;\n  stsTokenManager: StsTokenManager;\n  // Last known accessToken so we know when it changes\n  private accessToken: string | null;\n\n  uid: string;\n  auth: AuthInternal;\n  emailVerified: boolean;\n  isAnonymous: boolean;\n  tenantId: string | null;\n  readonly metadata: UserMetadata;\n  providerData: MutableUserInfo[];\n\n  // Optional fields from UserInfo\n  displayName: string | null;\n  email: string | null;\n  phoneNumber: string | null;\n  photoURL: string | null;\n\n  _redirectEventId?: string;\n  private readonly proactiveRefresh = new ProactiveRefresh(this);\n\n  constructor({ uid, auth, stsTokenManager, ...opt }: UserParameters) {\n    this.uid = uid;\n    this.auth = auth;\n    this.stsTokenManager = stsTokenManager;\n    this.accessToken = stsTokenManager.accessToken;\n    this.displayName = opt.displayName || null;\n    this.email = opt.email || null;\n    this.emailVerified = opt.emailVerified || false;\n    this.phoneNumber = opt.phoneNumber || null;\n    this.photoURL = opt.photoURL || null;\n    this.isAnonymous = opt.isAnonymous || false;\n    this.tenantId = opt.tenantId || null;\n    this.providerData = opt.providerData ? [...opt.providerData] : [];\n    this.metadata = new UserMetadata(\n      opt.createdAt || undefined,\n      opt.lastLoginAt || undefined\n    );\n  }\n\n  async getIdToken(forceRefresh?: boolean): Promise<string> {\n    const accessToken = await _logoutIfInvalidated(\n      this,\n      this.stsTokenManager.getToken(this.auth, forceRefresh)\n    );\n    _assert(accessToken, this.auth, AuthErrorCode.INTERNAL_ERROR);\n\n    if (this.accessToken !== accessToken) {\n      this.accessToken = accessToken;\n      await this.auth._persistUserIfCurrent(this);\n      this.auth._notifyListenersIfCurrent(this);\n    }\n\n    return accessToken;\n  }\n\n  getIdTokenResult(forceRefresh?: boolean): Promise<IdTokenResult> {\n    return getIdTokenResult(this, forceRefresh);\n  }\n\n  reload(): Promise<void> {\n    return reload(this);\n  }\n\n  private reloadUserInfo: APIUserInfo | null = null;\n  private reloadListener: NextFn<APIUserInfo> | null = null;\n\n  _assign(user: UserInternal): void {\n    if (this === user) {\n      return;\n    }\n    _assert(this.uid === user.uid, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.displayName = user.displayName;\n    this.photoURL = user.photoURL;\n    this.email = user.email;\n    this.emailVerified = user.emailVerified;\n    this.phoneNumber = user.phoneNumber;\n    this.isAnonymous = user.isAnonymous;\n    this.tenantId = user.tenantId;\n    this.providerData = user.providerData.map(userInfo => ({ ...userInfo }));\n    this.metadata._copy(user.metadata);\n    this.stsTokenManager._assign(user.stsTokenManager);\n  }\n\n  _clone(auth: AuthInternal): UserInternal {\n    const newUser = new UserImpl({\n      ...this,\n      auth,\n      stsTokenManager: this.stsTokenManager._clone()\n    });\n    newUser.metadata._copy(this.metadata);\n    return newUser;\n  }\n\n  _onReload(callback: NextFn<APIUserInfo>): void {\n    // There should only ever be one listener, and that is a single instance of MultiFactorUser\n    _assert(!this.reloadListener, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.reloadListener = callback;\n    if (this.reloadUserInfo) {\n      this._notifyReloadListener(this.reloadUserInfo);\n      this.reloadUserInfo = null;\n    }\n  }\n\n  _notifyReloadListener(userInfo: APIUserInfo): void {\n    if (this.reloadListener) {\n      this.reloadListener(userInfo);\n    } else {\n      // If no listener is subscribed yet, save the result so it's available when they do subscribe\n      this.reloadUserInfo = userInfo;\n    }\n  }\n\n  _startProactiveRefresh(): void {\n    this.proactiveRefresh._start();\n  }\n\n  _stopProactiveRefresh(): void {\n    this.proactiveRefresh._stop();\n  }\n\n  async _updateTokensIfNecessary(\n    response: IdTokenResponse | FinalizeMfaResponse,\n    reload = false\n  ): Promise<void> {\n    let tokensRefreshed = false;\n    if (\n      response.idToken &&\n      response.idToken !== this.stsTokenManager.accessToken\n    ) {\n      this.stsTokenManager.updateFromServerResponse(response);\n      tokensRefreshed = true;\n    }\n\n    if (reload) {\n      await _reloadWithoutSaving(this);\n    }\n\n    await this.auth._persistUserIfCurrent(this);\n    if (tokensRefreshed) {\n      this.auth._notifyListenersIfCurrent(this);\n    }\n  }\n\n  async delete(): Promise<void> {\n    const idToken = await this.getIdToken();\n    await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\n    this.stsTokenManager.clearRefreshToken();\n\n    // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n    //       cancels pending actions...\n\n    return this.auth.signOut();\n  }\n\n  toJSON(): PersistedBlob {\n    return {\n      uid: this.uid,\n      email: this.email || undefined,\n      emailVerified: this.emailVerified,\n      displayName: this.displayName || undefined,\n      isAnonymous: this.isAnonymous,\n      photoURL: this.photoURL || undefined,\n      phoneNumber: this.phoneNumber || undefined,\n      tenantId: this.tenantId || undefined,\n      providerData: this.providerData.map(userInfo => ({ ...userInfo })),\n      stsTokenManager: this.stsTokenManager.toJSON(),\n      // Redirect event ID must be maintained in case there is a pending\n      // redirect event.\n      _redirectEventId: this._redirectEventId,\n      ...this.metadata.toJSON(),\n\n      // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n      apiKey: this.auth.config.apiKey,\n      appName: this.auth.name\n      // Missing authDomain will be tolerated by the legacy SDK.\n      // stsTokenManager.apiKey isn't actually required (despite the legacy SDK persisting it).\n    };\n  }\n\n  get refreshToken(): string {\n    return this.stsTokenManager.refreshToken || '';\n  }\n\n  static _fromJSON(auth: AuthInternal, object: PersistedBlob): UserInternal {\n    const displayName = object.displayName ?? undefined;\n    const email = object.email ?? undefined;\n    const phoneNumber = object.phoneNumber ?? undefined;\n    const photoURL = object.photoURL ?? undefined;\n    const tenantId = object.tenantId ?? undefined;\n    const _redirectEventId = object._redirectEventId ?? undefined;\n    const createdAt = object.createdAt ?? undefined;\n    const lastLoginAt = object.lastLoginAt ?? undefined;\n    const {\n      uid,\n      emailVerified,\n      isAnonymous,\n      providerData,\n      stsTokenManager: plainObjectTokenManager\n    } = object;\n\n    _assert(uid && plainObjectTokenManager, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const stsTokenManager = StsTokenManager.fromJSON(\n      this.name,\n      plainObjectTokenManager as PersistedBlob\n    );\n\n    _assert(typeof uid === 'string', auth, AuthErrorCode.INTERNAL_ERROR);\n    assertStringOrUndefined(displayName, auth.name);\n    assertStringOrUndefined(email, auth.name);\n    _assert(\n      typeof emailVerified === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof isAnonymous === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    assertStringOrUndefined(phoneNumber, auth.name);\n    assertStringOrUndefined(photoURL, auth.name);\n    assertStringOrUndefined(tenantId, auth.name);\n    assertStringOrUndefined(_redirectEventId, auth.name);\n    assertStringOrUndefined(createdAt, auth.name);\n    assertStringOrUndefined(lastLoginAt, auth.name);\n    const user = new UserImpl({\n      uid,\n      auth,\n      email,\n      emailVerified,\n      displayName,\n      isAnonymous,\n      photoURL,\n      phoneNumber,\n      tenantId,\n      stsTokenManager,\n      createdAt,\n      lastLoginAt\n    });\n\n    if (providerData && Array.isArray(providerData)) {\n      user.providerData = providerData.map(userInfo => ({ ...userInfo }));\n    }\n\n    if (_redirectEventId) {\n      user._redirectEventId = _redirectEventId;\n    }\n\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserInternal> {\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromServerResponse(idTokenResponse);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: idTokenResponse.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // Updates the user info and data and resolves with a user instance.\n    await _reloadWithoutSaving(user);\n    return user;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from './assert';\n\n/**\n * Our API has a lot of one-off constants that are used to do things.\n * Unfortunately we can't export these as classes instantiated directly since\n * the constructor may side effect and therefore can't be proven to be safely\n * culled. Instead, we export these classes themselves as a lowerCamelCase\n * constant, and instantiate them under the hood.\n */\nexport interface SingletonInstantiator<T> {\n  new (): T;\n}\n\nconst instanceCache: Map<unknown, unknown> = new Map();\n\nexport function _getInstance<T>(cls: unknown): T {\n  debugAssert(cls instanceof Function, 'Expected a class definition');\n  let instance = instanceCache.get(cls) as T | undefined;\n\n  if (instance) {\n    debugAssert(\n      instance instanceof cls,\n      'Instance stored in cache mismatched with class'\n    );\n    return instance;\n  }\n\n  instance = new (cls as SingletonInstantiator<T>)();\n  instanceCache.set(cls, instance);\n  return instance;\n}\n\nexport function _clearInstanceMap(): void {\n  instanceCache.clear();\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../persistence';\n\nexport class InMemoryPersistence implements PersistenceInternal {\n  static type: 'NONE' = 'NONE';\n  readonly type = PersistenceType.NONE;\n  storage: Record<string, PersistenceValue> = {};\n\n  async _isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage[key] = value;\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = this.storage[key];\n    return value === undefined ? null : (value as T);\n  }\n\n  async _remove(key: string): Promise<void> {\n    delete this.storage[key];\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'NONE'.\n *\n * @public\n */\nexport const inMemoryPersistence: Persistence = InMemoryPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { PersistedBlob, PersistenceInternal } from '../persistence';\nimport { UserImpl } from '../user/user_impl';\nimport { _getInstance } from '../util/instantiator';\nimport { inMemoryPersistence } from './in_memory';\n\nexport const enum KeyName {\n  AUTH_USER = 'authUser',\n  AUTH_EVENT = 'authEvent',\n  REDIRECT_USER = 'redirectUser',\n  PERSISTENCE_USER = 'persistence'\n}\nexport const enum Namespace {\n  PERSISTENCE = 'firebase'\n}\n\nexport function _persistenceKeyName(\n  key: string,\n  apiKey: ApiKey,\n  appName: AppName\n): string {\n  return `${Namespace.PERSISTENCE}:${key}:${apiKey}:${appName}`;\n}\n\nexport class PersistenceUserManager {\n  private readonly fullUserKey: string;\n  private readonly fullPersistenceKey: string;\n  private readonly boundEventHandler: () => void;\n\n  private constructor(\n    public persistence: PersistenceInternal,\n    private readonly auth: AuthInternal,\n    private readonly userKey: string\n  ) {\n    const { config, name } = this.auth;\n    this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n    this.fullPersistenceKey = _persistenceKeyName(\n      KeyName.PERSISTENCE_USER,\n      config.apiKey,\n      name\n    );\n    this.boundEventHandler = auth._onStorageEvent.bind(auth);\n    this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  setCurrentUser(user: UserInternal): Promise<void> {\n    return this.persistence._set(this.fullUserKey, user.toJSON());\n  }\n\n  async getCurrentUser(): Promise<UserInternal | null> {\n    const blob = await this.persistence._get<PersistedBlob>(this.fullUserKey);\n    return blob ? UserImpl._fromJSON(this.auth, blob) : null;\n  }\n\n  removeCurrentUser(): Promise<void> {\n    return this.persistence._remove(this.fullUserKey);\n  }\n\n  savePersistenceForRedirect(): Promise<void> {\n    return this.persistence._set(\n      this.fullPersistenceKey,\n      this.persistence.type\n    );\n  }\n\n  async setPersistence(newPersistence: PersistenceInternal): Promise<void> {\n    if (this.persistence === newPersistence) {\n      return;\n    }\n\n    const currentUser = await this.getCurrentUser();\n    await this.removeCurrentUser();\n\n    this.persistence = newPersistence;\n\n    if (currentUser) {\n      return this.setCurrentUser(currentUser);\n    }\n  }\n\n  delete(): void {\n    this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  static async create(\n    auth: AuthInternal,\n    persistenceHierarchy: PersistenceInternal[],\n    userKey = KeyName.AUTH_USER\n  ): Promise<PersistenceUserManager> {\n    if (!persistenceHierarchy.length) {\n      return new PersistenceUserManager(\n        _getInstance(inMemoryPersistence),\n        auth,\n        userKey\n      );\n    }\n\n    // Eliminate any persistences that are not available\n    const availablePersistences = (\n      await Promise.all(\n        persistenceHierarchy.map(async persistence => {\n          if (await persistence._isAvailable()) {\n            return persistence;\n          }\n          return undefined;\n        })\n      )\n    ).filter(persistence => persistence) as PersistenceInternal[];\n\n    // Fall back to the first persistence listed, or in memory if none available\n    let selectedPersistence =\n      availablePersistences[0] ||\n      _getInstance<PersistenceInternal>(inMemoryPersistence);\n\n    const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n\n    // Pull out the existing user, setting the chosen persistence to that\n    // persistence if the user exists.\n    let userToMigrate: UserInternal | null = null;\n    // Note, here we check for a user in _all_ persistences, not just the\n    // ones deemed available. If we can migrate a user out of a broken\n    // persistence, we will (but only if that persistence supports migration).\n    for (const persistence of persistenceHierarchy) {\n      try {\n        const blob = await persistence._get<PersistedBlob>(key);\n        if (blob) {\n          const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\n          if (persistence !== selectedPersistence) {\n            userToMigrate = user;\n          }\n          selectedPersistence = persistence;\n          break;\n        }\n      } catch {}\n    }\n\n    // If we find the user in a persistence that does support migration, use\n    // that migration path (of only persistences that support migration)\n    const migrationHierarchy = availablePersistences.filter(\n      p => p._shouldAllowMigration\n    );\n\n    // If the persistence does _not_ allow migration, just finish off here\n    if (\n      !selectedPersistence._shouldAllowMigration ||\n      !migrationHierarchy.length\n    ) {\n      return new PersistenceUserManager(selectedPersistence, auth, userKey);\n    }\n\n    selectedPersistence = migrationHierarchy[0];\n    if (userToMigrate) {\n      // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n      // we'll just let it bubble to surface the error.\n      await selectedPersistence._set(key, userToMigrate.toJSON());\n    }\n\n    // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n    // such as users getting stuck with a previous account after signing out and refreshing the tab.\n    await Promise.all(\n      persistenceHierarchy.map(async persistence => {\n        if (persistence !== selectedPersistence) {\n          try {\n            await persistence._remove(key);\n          } catch {}\n        }\n      })\n    );\n    return new PersistenceUserManager(selectedPersistence, auth, userKey);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIE, getUA } from '@firebase/util';\n\ninterface NavigatorStandalone extends Navigator {\n  standalone?: unknown;\n}\n\ninterface Document {\n  documentMode?: number;\n}\n\n/**\n * Enums for Browser name.\n */\nexport const enum BrowserName {\n  ANDROID = 'Android',\n  BLACKBERRY = 'Blackberry',\n  EDGE = 'Edge',\n  FIREFOX = 'Firefox',\n  IE = 'IE',\n  IEMOBILE = 'IEMobile',\n  OPERA = 'Opera',\n  OTHER = 'Other',\n  CHROME = 'Chrome',\n  SAFARI = 'Safari',\n  SILK = 'Silk',\n  WEBOS = 'Webos'\n}\n\n/**\n * Determine the browser for the purposes of reporting usage to the API\n */\nexport function _getBrowserName(userAgent: string): BrowserName | string {\n  const ua = userAgent.toLowerCase();\n  if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n    return BrowserName.OPERA;\n  } else if (_isIEMobile(ua)) {\n    // Windows phone IEMobile browser.\n    return BrowserName.IEMOBILE;\n  } else if (ua.includes('msie') || ua.includes('trident/')) {\n    return BrowserName.IE;\n  } else if (ua.includes('edge/')) {\n    return BrowserName.EDGE;\n  } else if (_isFirefox(ua)) {\n    return BrowserName.FIREFOX;\n  } else if (ua.includes('silk/')) {\n    return BrowserName.SILK;\n  } else if (_isBlackBerry(ua)) {\n    // Blackberry browser.\n    return BrowserName.BLACKBERRY;\n  } else if (_isWebOS(ua)) {\n    // WebOS default browser.\n    return BrowserName.WEBOS;\n  } else if (_isSafari(ua)) {\n    return BrowserName.SAFARI;\n  } else if (\n    (ua.includes('chrome/') || _isChromeIOS(ua)) &&\n    !ua.includes('edge/')\n  ) {\n    return BrowserName.CHROME;\n  } else if (_isAndroid(ua)) {\n    // Android stock browser.\n    return BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n    const matches = userAgent.match(re);\n    if (matches?.length === 2) {\n      return matches[1];\n    }\n  }\n  return BrowserName.OTHER;\n}\n\nexport function _isFirefox(ua = getUA()): boolean {\n  return /firefox\\//i.test(ua);\n}\n\nexport function _isSafari(userAgent = getUA()): boolean {\n  const ua = userAgent.toLowerCase();\n  return (\n    ua.includes('safari/') &&\n    !ua.includes('chrome/') &&\n    !ua.includes('crios/') &&\n    !ua.includes('android')\n  );\n}\n\nexport function _isChromeIOS(ua = getUA()): boolean {\n  return /crios\\//i.test(ua);\n}\n\nexport function _isIEMobile(ua = getUA()): boolean {\n  return /iemobile/i.test(ua);\n}\n\nexport function _isAndroid(ua = getUA()): boolean {\n  return /android/i.test(ua);\n}\n\nexport function _isBlackBerry(ua = getUA()): boolean {\n  return /blackberry/i.test(ua);\n}\n\nexport function _isWebOS(ua = getUA()): boolean {\n  return /webos/i.test(ua);\n}\n\nexport function _isIOS(ua = getUA()): boolean {\n  return (\n    /iphone|ipad|ipod/i.test(ua) ||\n    (/macintosh/i.test(ua) && /mobile/i.test(ua))\n  );\n}\n\nexport function _isIOS7Or8(ua = getUA()): boolean {\n  return (\n    /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\n    /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua)\n  );\n}\n\nexport function _isIOSStandalone(ua = getUA()): boolean {\n  return _isIOS(ua) && !!(window.navigator as NavigatorStandalone)?.standalone;\n}\n\nexport function _isIE10(): boolean {\n  return isIE() && (document as Document).documentMode === 10;\n}\n\nexport function _isMobileBrowser(ua: string = getUA()): boolean {\n  // TODO: implement getBrowserName equivalent for OS.\n  return (\n    _isIOS(ua) ||\n    _isAndroid(ua) ||\n    _isWebOS(ua) ||\n    _isBlackBerry(ua) ||\n    /windows phone/i.test(ua) ||\n    _isIEMobile(ua)\n  );\n}\n\nexport function _isIframe(): boolean {\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(window && window !== window.top);\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { _getBrowserName } from './browser';\nimport { getUA } from '@firebase/util';\n\nexport const enum ClientImplementation {\n  CORE = 'JsCore'\n}\n\n/**\n * @internal\n */\nexport const enum ClientPlatform {\n  BROWSER = 'Browser',\n  NODE = 'Node',\n  REACT_NATIVE = 'ReactNative',\n  CORDOVA = 'Cordova',\n  WORKER = 'Worker'\n}\n\n/*\n * Determine the SDK version string\n */\nexport function _getClientVersion(\n  clientPlatform: ClientPlatform,\n  frameworks: readonly string[] = []\n): string {\n  let reportedPlatform: string;\n  switch (clientPlatform) {\n    case ClientPlatform.BROWSER:\n      // In a browser environment, report the browser name.\n      reportedPlatform = _getBrowserName(getUA());\n      break;\n    case ClientPlatform.WORKER:\n      // Technically a worker runs from a browser but we need to differentiate a\n      // worker from a browser.\n      // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n      break;\n    default:\n      reportedPlatform = clientPlatform;\n  }\n  const reportedFrameworks = frameworks.length\n    ? frameworks.join(',')\n    : 'FirebaseCore-web'; /* default value if no other framework is used */\n  return `${reportedPlatform}/${ClientImplementation.CORE}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport { Unsubscribe, User } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\n\ninterface MiddlewareEntry {\n  (user: User | null): Promise<void>;\n  onAbort?: () => void;\n}\n\nexport class AuthMiddlewareQueue {\n  private readonly queue: MiddlewareEntry[] = [];\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  pushCallback(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    // The callback could be sync or async. Wrap it into a\n    // function that is always async.\n    const wrappedCallback: MiddlewareEntry = (\n      user: User | null\n    ): Promise<void> =>\n      new Promise((resolve, reject) => {\n        try {\n          const result = callback(user);\n          // Either resolve with existing promise or wrap a non-promise\n          // return value into a promise.\n          resolve(result);\n        } catch (e) {\n          // Sync callback throws.\n          reject(e);\n        }\n      });\n    // Attach the onAbort if present\n    wrappedCallback.onAbort = onAbort;\n    this.queue.push(wrappedCallback);\n\n    const index = this.queue.length - 1;\n    return () => {\n      // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\n      // indexing of other elements.\n      this.queue[index] = () => Promise.resolve();\n    };\n  }\n\n  async runMiddleware(nextUser: User | null): Promise<void> {\n    if (this.auth.currentUser === nextUser) {\n      return;\n    }\n\n    // While running the middleware, build a temporary stack of onAbort\n    // callbacks to call if one middleware callback rejects.\n\n    const onAbortStack: Array<() => void> = [];\n    try {\n      for (const beforeStateCallback of this.queue) {\n        await beforeStateCallback(nextUser);\n\n        // Only push the onAbort if the callback succeeds\n        if (beforeStateCallback.onAbort) {\n          onAbortStack.push(beforeStateCallback.onAbort);\n        }\n      }\n    } catch (e) {\n      // Run all onAbort, with separate try/catch to ignore any errors and\n      // continue\n      onAbortStack.reverse();\n      for (const onAbort of onAbortStack) {\n        try {\n          onAbort();\n        } catch (_) {\n          /* swallow error */\n        }\n      }\n\n      throw this.auth._errorFactory.create(AuthErrorCode.LOGIN_BLOCKED, {\n        originalMessage: (e as Error)?.message\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\n/**\n * Request object for fetching the password policy.\n */\nexport interface GetPasswordPolicyRequest {\n  tenantId?: string;\n}\n\n/**\n * Response object for fetching the password policy.\n */\nexport interface GetPasswordPolicyResponse {\n  customStrengthOptions: {\n    minPasswordLength?: number;\n    maxPasswordLength?: number;\n    containsLowercaseCharacter?: boolean;\n    containsUppercaseCharacter?: boolean;\n    containsNumericCharacter?: boolean;\n    containsNonAlphanumericCharacter?: boolean;\n  };\n  allowedNonAlphanumericCharacters?: string[];\n  enforcementState: string;\n  forceUpgradeOnSignin?: boolean;\n  schemaVersion: number;\n}\n\n/**\n * Fetches the password policy for the currently set tenant or the project if no tenant is set.\n *\n * @param auth Auth object.\n * @param request Password policy request.\n * @returns Password policy response.\n */\nexport async function _getPasswordPolicy(\n  auth: Auth,\n  request: GetPasswordPolicyRequest = {}\n): Promise<GetPasswordPolicyResponse> {\n  return _performApiRequest<\n    GetPasswordPolicyRequest,\n    GetPasswordPolicyResponse\n  >(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PASSWORD_POLICY,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GetPasswordPolicyResponse } from '../../api/password_policy/get_password_policy';\nimport {\n  PasswordPolicyCustomStrengthOptions,\n  PasswordPolicyInternal,\n  PasswordValidationStatusInternal\n} from '../../model/password_policy';\nimport { PasswordValidationStatus } from '../../model/public_types';\n\n// Minimum min password length enforced by the backend, even if no minimum length is set.\nconst MINIMUM_MIN_PASSWORD_LENGTH = 6;\n\n/**\n * Stores password policy requirements and provides password validation against the policy.\n *\n * @internal\n */\nexport class PasswordPolicyImpl implements PasswordPolicyInternal {\n  readonly customStrengthOptions: PasswordPolicyCustomStrengthOptions;\n  readonly allowedNonAlphanumericCharacters: string;\n  readonly enforcementState: string;\n  readonly forceUpgradeOnSignin: boolean;\n  readonly schemaVersion: number;\n\n  constructor(response: GetPasswordPolicyResponse) {\n    // Only include custom strength options defined in the response.\n    const responseOptions = response.customStrengthOptions;\n    this.customStrengthOptions = {};\n    // TODO: Remove once the backend is updated to include the minimum min password length instead of undefined when there is no minimum length set.\n    this.customStrengthOptions.minPasswordLength =\n      responseOptions.minPasswordLength ?? MINIMUM_MIN_PASSWORD_LENGTH;\n    if (responseOptions.maxPasswordLength) {\n      this.customStrengthOptions.maxPasswordLength =\n        responseOptions.maxPasswordLength;\n    }\n    if (responseOptions.containsLowercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsLowercaseLetter =\n        responseOptions.containsLowercaseCharacter;\n    }\n    if (responseOptions.containsUppercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsUppercaseLetter =\n        responseOptions.containsUppercaseCharacter;\n    }\n    if (responseOptions.containsNumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNumericCharacter =\n        responseOptions.containsNumericCharacter;\n    }\n    if (responseOptions.containsNonAlphanumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNonAlphanumericCharacter =\n        responseOptions.containsNonAlphanumericCharacter;\n    }\n\n    this.enforcementState = response.enforcementState;\n    if (this.enforcementState === 'ENFORCEMENT_STATE_UNSPECIFIED') {\n      this.enforcementState = 'OFF';\n    }\n\n    // Use an empty string if no non-alphanumeric characters are specified in the response.\n    this.allowedNonAlphanumericCharacters =\n      response.allowedNonAlphanumericCharacters?.join('') ?? '';\n\n    this.forceUpgradeOnSignin = response.forceUpgradeOnSignin ?? false;\n    this.schemaVersion = response.schemaVersion;\n  }\n\n  validatePassword(password: string): PasswordValidationStatus {\n    const status: PasswordValidationStatusInternal = {\n      isValid: true,\n      passwordPolicy: this\n    };\n\n    // Check the password length and character options.\n    this.validatePasswordLengthOptions(password, status);\n    this.validatePasswordCharacterOptions(password, status);\n\n    // Combine the status into single isValid property.\n    status.isValid &&= status.meetsMinPasswordLength ?? true;\n    status.isValid &&= status.meetsMaxPasswordLength ?? true;\n    status.isValid &&= status.containsLowercaseLetter ?? true;\n    status.isValid &&= status.containsUppercaseLetter ?? true;\n    status.isValid &&= status.containsNumericCharacter ?? true;\n    status.isValid &&= status.containsNonAlphanumericCharacter ?? true;\n\n    return status;\n  }\n\n  /**\n   * Validates that the password meets the length options for the policy.\n   *\n   * @param password Password to validate.\n   * @param status Validation status.\n   */\n  private validatePasswordLengthOptions(\n    password: string,\n    status: PasswordValidationStatusInternal\n  ): void {\n    const minPasswordLength = this.customStrengthOptions.minPasswordLength;\n    const maxPasswordLength = this.customStrengthOptions.maxPasswordLength;\n    if (minPasswordLength) {\n      status.meetsMinPasswordLength = password.length >= minPasswordLength;\n    }\n    if (maxPasswordLength) {\n      status.meetsMaxPasswordLength = password.length <= maxPasswordLength;\n    }\n  }\n\n  /**\n   * Validates that the password meets the character options for the policy.\n   *\n   * @param password Password to validate.\n   * @param status Validation status.\n   */\n  private validatePasswordCharacterOptions(\n    password: string,\n    status: PasswordValidationStatusInternal\n  ): void {\n    // Assign statuses for requirements even if the password is an empty string.\n    this.updatePasswordCharacterOptionsStatuses(\n      status,\n      /* containsLowercaseCharacter= */ false,\n      /* containsUppercaseCharacter= */ false,\n      /* containsNumericCharacter= */ false,\n      /* containsNonAlphanumericCharacter= */ false\n    );\n\n    let passwordChar;\n    for (let i = 0; i < password.length; i++) {\n      passwordChar = password.charAt(i);\n      this.updatePasswordCharacterOptionsStatuses(\n        status,\n        /* containsLowercaseCharacter= */ passwordChar >= 'a' &&\n          passwordChar <= 'z',\n        /* containsUppercaseCharacter= */ passwordChar >= 'A' &&\n          passwordChar <= 'Z',\n        /* containsNumericCharacter= */ passwordChar >= '0' &&\n          passwordChar <= '9',\n        /* containsNonAlphanumericCharacter= */ this.allowedNonAlphanumericCharacters.includes(\n          passwordChar\n        )\n      );\n    }\n  }\n\n  /**\n   * Updates the running validation status with the statuses for the character options.\n   * Expected to be called each time a character is processed to update each option status\n   * based on the current character.\n   *\n   * @param status Validation status.\n   * @param containsLowercaseCharacter Whether the character is a lowercase letter.\n   * @param containsUppercaseCharacter Whether the character is an uppercase letter.\n   * @param containsNumericCharacter Whether the character is a numeric character.\n   * @param containsNonAlphanumericCharacter Whether the character is a non-alphanumeric character.\n   */\n  private updatePasswordCharacterOptionsStatuses(\n    status: PasswordValidationStatusInternal,\n    containsLowercaseCharacter: boolean,\n    containsUppercaseCharacter: boolean,\n    containsNumericCharacter: boolean,\n    containsNonAlphanumericCharacter: boolean\n  ): void {\n    if (this.customStrengthOptions.containsLowercaseLetter) {\n      status.containsLowercaseLetter ||= containsLowercaseCharacter;\n    }\n    if (this.customStrengthOptions.containsUppercaseLetter) {\n      status.containsUppercaseLetter ||= containsUppercaseCharacter;\n    }\n    if (this.customStrengthOptions.containsNumericCharacter) {\n      status.containsNumericCharacter ||= containsNumericCharacter;\n    }\n    if (this.customStrengthOptions.containsNonAlphanumericCharacter) {\n      status.containsNonAlphanumericCharacter ||=\n        containsNonAlphanumericCharacter;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _FirebaseService, FirebaseApp } from '@firebase/app';\nimport { Provider } from '@firebase/component';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport {\n  Auth,\n  AuthErrorMap,\n  AuthSettings,\n  EmulatorConfig,\n  NextOrObserver,\n  Persistence,\n  PopupRedirectResolver,\n  User,\n  UserCredential,\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Unsubscribe,\n  PasswordValidationStatus\n} from '../../model/public_types';\nimport {\n  createSubscribe,\n  ErrorFactory,\n  FirebaseError,\n  getModularInstance,\n  Observer,\n  Subscribe\n} from '@firebase/util';\n\nimport { AuthInternal, ConfigInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport {\n  AuthErrorCode,\n  AuthErrorParams,\n  ErrorMapRetriever,\n  _DEFAULT_AUTH_ERROR_FACTORY\n} from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport {\n  KeyName,\n  PersistenceUserManager\n} from '../persistence/persistence_user_manager';\nimport { _reloadWithoutSaving } from '../user/reload';\nimport { _assert } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { _getUserLanguage } from '../util/navigator';\nimport { _getClientVersion } from '../util/version';\nimport { HttpHeader } from '../../api';\nimport {\n  RevokeTokenRequest,\n  TokenType,\n  revokeToken\n} from '../../api/authentication/token';\nimport { AuthMiddlewareQueue } from './middleware';\nimport { RecaptchaConfig } from '../../platform_browser/recaptcha/recaptcha';\nimport { _logWarn } from '../util/log';\nimport { _getPasswordPolicy } from '../../api/password_policy/get_password_policy';\nimport { PasswordPolicyInternal } from '../../model/password_policy';\nimport { PasswordPolicyImpl } from './password_policy_impl';\n\ninterface AsyncAction {\n  (): Promise<void>;\n}\n\nexport const enum DefaultConfig {\n  TOKEN_API_HOST = 'securetoken.googleapis.com',\n  API_HOST = 'identitytoolkit.googleapis.com',\n  API_SCHEME = 'https'\n}\n\nexport class AuthImpl implements AuthInternal, _FirebaseService {\n  currentUser: User | null = null;\n  emulatorConfig: EmulatorConfig | null = null;\n  private operations = Promise.resolve();\n  private persistenceManager?: PersistenceUserManager;\n  private redirectPersistenceManager?: PersistenceUserManager;\n  private authStateSubscription = new Subscription<User>(this);\n  private idTokenSubscription = new Subscription<User>(this);\n  private readonly beforeStateQueue = new AuthMiddlewareQueue(this);\n  private redirectUser: UserInternal | null = null;\n  private isProactiveRefreshEnabled = false;\n  private readonly EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION: number = 1;\n\n  // Any network calls will set this to true and prevent subsequent emulator\n  // initialization\n  _canInitEmulator = true;\n  _isInitialized = false;\n  _deleted = false;\n  _initializationPromise: Promise<void> | null = null;\n  _popupRedirectResolver: PopupRedirectResolverInternal | null = null;\n  _errorFactory: ErrorFactory<AuthErrorCode, AuthErrorParams> =\n    _DEFAULT_AUTH_ERROR_FACTORY;\n  _agentRecaptchaConfig: RecaptchaConfig | null = null;\n  _tenantRecaptchaConfigs: Record<string, RecaptchaConfig> = {};\n  _projectPasswordPolicy: PasswordPolicyInternal | null = null;\n  _tenantPasswordPolicies: Record<string, PasswordPolicyInternal> = {};\n  readonly name: string;\n\n  // Tracks the last notified UID for state change listeners to prevent\n  // repeated calls to the callbacks. Undefined means it's never been\n  // called, whereas null means it's been called with a signed out user\n  private lastNotifiedUid: string | null | undefined = undefined;\n\n  languageCode: string | null = null;\n  tenantId: string | null = null;\n  settings: AuthSettings = { appVerificationDisabledForTesting: false };\n\n  constructor(\n    public readonly app: FirebaseApp,\n    private readonly heartbeatServiceProvider: Provider<'heartbeat'>,\n    private readonly appCheckServiceProvider: Provider<AppCheckInternalComponentName>,\n    public readonly config: ConfigInternal\n  ) {\n    this.name = app.name;\n    this.clientVersion = config.sdkClientVersion;\n  }\n\n  _initializeWithPersistence(\n    persistenceHierarchy: PersistenceInternal[],\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (popupRedirectResolver) {\n      this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n    }\n\n    // Have to check for app deletion throughout initialization (after each\n    // promise resolution)\n    this._initializationPromise = this.queue(async () => {\n      if (this._deleted) {\n        return;\n      }\n\n      this.persistenceManager = await PersistenceUserManager.create(\n        this,\n        persistenceHierarchy\n      );\n\n      if (this._deleted) {\n        return;\n      }\n\n      // Initialize the resolver early if necessary (only applicable to web:\n      // this will cause the iframe to load immediately in certain cases)\n      if (this._popupRedirectResolver?._shouldInitProactively) {\n        // If this fails, don't halt auth loading\n        try {\n          await this._popupRedirectResolver._initialize(this);\n        } catch (e) {\n          /* Ignore the error */\n        }\n      }\n\n      await this.initializeCurrentUser(popupRedirectResolver);\n      this.lastNotifiedUid = this.currentUser?.uid || null;\n\n      if (this._deleted) {\n        return;\n      }\n\n      this._isInitialized = true;\n    });\n\n    return this._initializationPromise;\n  }\n\n  /**\n   * If the persistence is changed in another window, the user manager will let us know\n   */\n  async _onStorageEvent(): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n\n    const user = await this.assertedPersistence.getCurrentUser();\n\n    if (!this.currentUser && !user) {\n      // No change, do nothing (was signed out and remained signed out).\n      return;\n    }\n\n    // If the same user is to be synchronized.\n    if (this.currentUser && user && this.currentUser.uid === user.uid) {\n      // Data update, simply copy data changes.\n      this._currentUser._assign(user);\n      // If tokens changed from previous user tokens, this will trigger\n      // notifyAuthListeners_.\n      await this.currentUser.getIdToken();\n      return;\n    }\n\n    // Update current Auth state. Either a new login or logout.\n    // Skip blocking callbacks, they should not apply to a change in another tab.\n    await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\n  }\n\n  private async initializeCurrentUser(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    // First check to see if we have a pending redirect event.\n    const previouslyStoredUser =\n      (await this.assertedPersistence.getCurrentUser()) as UserInternal | null;\n    let futureCurrentUser = previouslyStoredUser;\n    let needsTocheckMiddleware = false;\n    if (popupRedirectResolver && this.config.authDomain) {\n      await this.getOrInitRedirectPersistenceManager();\n      const redirectUserEventId = this.redirectUser?._redirectEventId;\n      const storedUserEventId = futureCurrentUser?._redirectEventId;\n      const result = await this.tryRedirectSignIn(popupRedirectResolver);\n\n      // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n      // matches the redirect user, then we want to initially sign in with the\n      // new user object from result.\n      // TODO(samgho): More thoroughly test all of this\n      if (\n        (!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\n        result?.user\n      ) {\n        futureCurrentUser = result.user as UserInternal;\n        needsTocheckMiddleware = true;\n      }\n    }\n\n    // If no user in persistence, there is no current user. Set to null.\n    if (!futureCurrentUser) {\n      return this.directlySetCurrentUser(null);\n    }\n\n    if (!futureCurrentUser._redirectEventId) {\n      // This isn't a redirect link operation, we can reload and bail.\n      // First though, ensure that we check the middleware is happy.\n      if (needsTocheckMiddleware) {\n        try {\n          await this.beforeStateQueue.runMiddleware(futureCurrentUser);\n        } catch (e) {\n          futureCurrentUser = previouslyStoredUser;\n          // We know this is available since the bit is only set when the\n          // resolver is available\n          this._popupRedirectResolver!._overrideRedirectResult(this, () =>\n            Promise.reject(e)\n          );\n        }\n      }\n\n      if (futureCurrentUser) {\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    _assert(this._popupRedirectResolver, this, AuthErrorCode.ARGUMENT_ERROR);\n    await this.getOrInitRedirectPersistenceManager();\n\n    // If the redirect user's event ID matches the current user's event ID,\n    // DO NOT reload the current user, otherwise they'll be cleared from storage.\n    // This is important for the reauthenticateWithRedirect() flow.\n    if (\n      this.redirectUser &&\n      this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId\n    ) {\n      return this.directlySetCurrentUser(futureCurrentUser);\n    }\n\n    return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n  }\n\n  private async tryRedirectSignIn(\n    redirectResolver: PopupRedirectResolver\n  ): Promise<UserCredential | null> {\n    // The redirect user needs to be checked (and signed in if available)\n    // during auth initialization. All of the normal sign in and link/reauth\n    // flows call back into auth and push things onto the promise queue. We\n    // need to await the result of the redirect sign in *inside the promise\n    // queue*. This presents a problem: we run into deadlock. See:\n    //    ┌> [Initialization] ─────┐\n    //    ┌> [<other queue tasks>] │\n    //    └─ [getRedirectResult] <─┘\n    //    where [] are tasks on the queue and arrows denote awaits\n    // Initialization will never complete because it's waiting on something\n    // that's waiting for initialization to complete!\n    //\n    // Instead, this method calls getRedirectResult() (stored in\n    // _completeRedirectFn) with an optional parameter that instructs all of\n    // the underlying auth operations to skip anything that mutates auth state.\n\n    let result: UserCredential | null = null;\n    try {\n      // We know this._popupRedirectResolver is set since redirectResolver\n      // is passed in. The _completeRedirectFn expects the unwrapped extern.\n      result = await this._popupRedirectResolver!._completeRedirectFn(\n        this,\n        redirectResolver,\n        true\n      );\n    } catch (e) {\n      // Swallow any errors here; the code can retrieve them in\n      // getRedirectResult().\n      await this._setRedirectUser(null);\n    }\n\n    return result;\n  }\n\n  private async reloadAndSetCurrentUserOrClear(\n    user: UserInternal\n  ): Promise<void> {\n    try {\n      await _reloadWithoutSaving(user);\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !==\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        // Something's wrong with the user's token. Log them out and remove\n        // them from storage\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    return this.directlySetCurrentUser(user);\n  }\n\n  useDeviceLanguage(): void {\n    this.languageCode = _getUserLanguage();\n  }\n\n  async _delete(): Promise<void> {\n    this._deleted = true;\n  }\n\n  async updateCurrentUser(userExtern: User | null): Promise<void> {\n    // The public updateCurrentUser method needs to make a copy of the user,\n    // and also check that the project matches\n    const user = userExtern\n      ? (getModularInstance(userExtern) as UserInternal)\n      : null;\n    if (user) {\n      _assert(\n        user.auth.config.apiKey === this.config.apiKey,\n        this,\n        AuthErrorCode.INVALID_AUTH\n      );\n    }\n    return this._updateCurrentUser(user && user._clone(this));\n  }\n\n  async _updateCurrentUser(\n    user: User | null,\n    skipBeforeStateCallbacks: boolean = false\n  ): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n    if (user) {\n      _assert(\n        this.tenantId === user.tenantId,\n        this,\n        AuthErrorCode.TENANT_ID_MISMATCH\n      );\n    }\n\n    if (!skipBeforeStateCallbacks) {\n      await this.beforeStateQueue.runMiddleware(user);\n    }\n\n    return this.queue(async () => {\n      await this.directlySetCurrentUser(user as UserInternal | null);\n      this.notifyAuthListeners();\n    });\n  }\n\n  async signOut(): Promise<void> {\n    // Run first, to block _setRedirectUser() if any callbacks fail.\n    await this.beforeStateQueue.runMiddleware(null);\n    // Clear the redirect user when signOut is called\n    if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n      await this._setRedirectUser(null);\n    }\n\n    // Prevent callbacks from being called again in _updateCurrentUser, as\n    // they were already called in the first line.\n    return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\n  }\n\n  setPersistence(persistence: Persistence): Promise<void> {\n    return this.queue(async () => {\n      await this.assertedPersistence.setPersistence(_getInstance(persistence));\n    });\n  }\n\n  _getRecaptchaConfig(): RecaptchaConfig | null {\n    if (this.tenantId == null) {\n      return this._agentRecaptchaConfig;\n    } else {\n      return this._tenantRecaptchaConfigs[this.tenantId];\n    }\n  }\n\n  async validatePassword(password: string): Promise<PasswordValidationStatus> {\n    if (!this._getPasswordPolicyInternal()) {\n      await this._updatePasswordPolicy();\n    }\n\n    // Password policy will be defined after fetching.\n    const passwordPolicy: PasswordPolicyInternal =\n      this._getPasswordPolicyInternal()!;\n\n    // Check that the policy schema version is supported by the SDK.\n    // TODO: Update this logic to use a max supported policy schema version once we have multiple schema versions.\n    if (\n      passwordPolicy.schemaVersion !==\n      this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION\n    ) {\n      return Promise.reject(\n        this._errorFactory.create(\n          AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION,\n          {}\n        )\n      );\n    }\n\n    return passwordPolicy.validatePassword(password);\n  }\n\n  _getPasswordPolicyInternal(): PasswordPolicyInternal | null {\n    if (this.tenantId === null) {\n      return this._projectPasswordPolicy;\n    } else {\n      return this._tenantPasswordPolicies[this.tenantId];\n    }\n  }\n\n  async _updatePasswordPolicy(): Promise<void> {\n    const response = await _getPasswordPolicy(this);\n\n    const passwordPolicy: PasswordPolicyInternal = new PasswordPolicyImpl(\n      response\n    );\n\n    if (this.tenantId === null) {\n      this._projectPasswordPolicy = passwordPolicy;\n    } else {\n      this._tenantPasswordPolicies[this.tenantId] = passwordPolicy;\n    }\n  }\n\n  _getPersistence(): string {\n    return this.assertedPersistence.persistence.type;\n  }\n\n  _updateErrorMap(errorMap: AuthErrorMap): void {\n    this._errorFactory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n      'auth',\n      'Firebase',\n      (errorMap as ErrorMapRetriever)()\n    );\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.authStateSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  beforeAuthStateChanged(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    return this.beforeStateQueue.pushCallback(callback, onAbort);\n  }\n\n  onIdTokenChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.idTokenSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  authStateReady(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.currentUser) {\n        resolve();\n      } else {\n        const unsubscribe = this.onAuthStateChanged(() => {\n          unsubscribe();\n          resolve();\n        }, reject);\n      }\n    });\n  }\n\n  /**\n   * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n   */\n  async revokeAccessToken(token: string): Promise<void> {\n    if (this.currentUser) {\n      const idToken = await this.currentUser.getIdToken();\n      // Generalize this to accept other providers once supported.\n      const request: RevokeTokenRequest = {\n        providerId: 'apple.com',\n        tokenType: TokenType.ACCESS_TOKEN,\n        token,\n        idToken\n      };\n      if (this.tenantId != null) {\n        request.tenantId = this.tenantId;\n      }\n      await revokeToken(this, request);\n    }\n  }\n\n  toJSON(): object {\n    return {\n      apiKey: this.config.apiKey,\n      authDomain: this.config.authDomain,\n      appName: this.name,\n      currentUser: this._currentUser?.toJSON()\n    };\n  }\n\n  async _setRedirectUser(\n    user: UserInternal | null,\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    const redirectManager = await this.getOrInitRedirectPersistenceManager(\n      popupRedirectResolver\n    );\n    return user === null\n      ? redirectManager.removeCurrentUser()\n      : redirectManager.setCurrentUser(user);\n  }\n\n  private async getOrInitRedirectPersistenceManager(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<PersistenceUserManager> {\n    if (!this.redirectPersistenceManager) {\n      const resolver: PopupRedirectResolverInternal | null =\n        (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\n        this._popupRedirectResolver;\n      _assert(resolver, this, AuthErrorCode.ARGUMENT_ERROR);\n      this.redirectPersistenceManager = await PersistenceUserManager.create(\n        this,\n        [_getInstance(resolver._redirectPersistence)],\n        KeyName.REDIRECT_USER\n      );\n      this.redirectUser =\n        await this.redirectPersistenceManager.getCurrentUser();\n    }\n\n    return this.redirectPersistenceManager;\n  }\n\n  async _redirectUserForId(id: string): Promise<UserInternal | null> {\n    // Make sure we've cleared any pending persistence actions if we're not in\n    // the initializer\n    if (this._isInitialized) {\n      await this.queue(async () => {});\n    }\n\n    if (this._currentUser?._redirectEventId === id) {\n      return this._currentUser;\n    }\n\n    if (this.redirectUser?._redirectEventId === id) {\n      return this.redirectUser;\n    }\n\n    return null;\n  }\n\n  async _persistUserIfCurrent(user: UserInternal): Promise<void> {\n    if (user === this.currentUser) {\n      return this.queue(async () => this.directlySetCurrentUser(user));\n    }\n  }\n\n  /** Notifies listeners only if the user is current */\n  _notifyListenersIfCurrent(user: UserInternal): void {\n    if (user === this.currentUser) {\n      this.notifyAuthListeners();\n    }\n  }\n\n  _key(): string {\n    return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n  }\n\n  _startProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = true;\n    if (this.currentUser) {\n      this._currentUser._startProactiveRefresh();\n    }\n  }\n\n  _stopProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = false;\n    if (this.currentUser) {\n      this._currentUser._stopProactiveRefresh();\n    }\n  }\n\n  /** Returns the current user cast as the internal type */\n  get _currentUser(): UserInternal {\n    return this.currentUser as UserInternal;\n  }\n\n  private notifyAuthListeners(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    this.idTokenSubscription.next(this.currentUser);\n\n    const currentUid = this.currentUser?.uid ?? null;\n    if (this.lastNotifiedUid !== currentUid) {\n      this.lastNotifiedUid = currentUid;\n      this.authStateSubscription.next(this.currentUser);\n    }\n  }\n\n  private registerStateListener(\n    subscription: Subscription<User>,\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    if (this._deleted) {\n      return () => {};\n    }\n\n    const cb =\n      typeof nextOrObserver === 'function'\n        ? nextOrObserver\n        : nextOrObserver.next.bind(nextOrObserver);\n\n    let isUnsubscribed = false;\n\n    const promise = this._isInitialized\n      ? Promise.resolve()\n      : this._initializationPromise;\n    _assert(promise, this, AuthErrorCode.INTERNAL_ERROR);\n    // The callback needs to be called asynchronously per the spec.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    promise.then(() => {\n      if (isUnsubscribed) {\n        return;\n      }\n      cb(this.currentUser);\n    });\n\n    if (typeof nextOrObserver === 'function') {\n      const unsubscribe = subscription.addObserver(\n        nextOrObserver,\n        error,\n        completed\n      );\n      return () => {\n        isUnsubscribed = true;\n        unsubscribe();\n      };\n    } else {\n      const unsubscribe = subscription.addObserver(nextOrObserver);\n      return () => {\n        isUnsubscribed = true;\n        unsubscribe();\n      };\n    }\n  }\n\n  /**\n   * Unprotected (from race conditions) method to set the current user. This\n   * should only be called from within a queued callback. This is necessary\n   * because the queue shouldn't rely on another queued callback.\n   */\n  private async directlySetCurrentUser(\n    user: UserInternal | null\n  ): Promise<void> {\n    if (this.currentUser && this.currentUser !== user) {\n      this._currentUser._stopProactiveRefresh();\n    }\n    if (user && this.isProactiveRefreshEnabled) {\n      user._startProactiveRefresh();\n    }\n\n    this.currentUser = user;\n\n    if (user) {\n      await this.assertedPersistence.setCurrentUser(user);\n    } else {\n      await this.assertedPersistence.removeCurrentUser();\n    }\n  }\n\n  private queue(action: AsyncAction): Promise<void> {\n    // In case something errors, the callback still should be called in order\n    // to keep the promise chain alive\n    this.operations = this.operations.then(action, action);\n    return this.operations;\n  }\n\n  private get assertedPersistence(): PersistenceUserManager {\n    _assert(this.persistenceManager, this, AuthErrorCode.INTERNAL_ERROR);\n    return this.persistenceManager;\n  }\n\n  private frameworks: string[] = [];\n  private clientVersion: string;\n  _logFramework(framework: string): void {\n    if (!framework || this.frameworks.includes(framework)) {\n      return;\n    }\n    this.frameworks.push(framework);\n\n    // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n    // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n    this.frameworks.sort();\n    this.clientVersion = _getClientVersion(\n      this.config.clientPlatform,\n      this._getFrameworks()\n    );\n  }\n  _getFrameworks(): readonly string[] {\n    return this.frameworks;\n  }\n  async _getAdditionalHeaders(): Promise<Record<string, string>> {\n    // Additional headers on every request\n    const headers: Record<string, string> = {\n      [HttpHeader.X_CLIENT_VERSION]: this.clientVersion\n    };\n\n    if (this.app.options.appId) {\n      headers[HttpHeader.X_FIREBASE_GMPID] = this.app.options.appId;\n    }\n\n    // If the heartbeat service exists, add the heartbeat string\n    const heartbeatsHeader = await this.heartbeatServiceProvider\n      .getImmediate({\n        optional: true\n      })\n      ?.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers[HttpHeader.X_FIREBASE_CLIENT] = heartbeatsHeader;\n    }\n\n    // If the App Check service exists, add the App Check token in the headers\n    const appCheckToken = await this._getAppCheckToken();\n    if (appCheckToken) {\n      headers[HttpHeader.X_FIREBASE_APP_CHECK] = appCheckToken;\n    }\n\n    return headers;\n  }\n\n  async _getAppCheckToken(): Promise<string | undefined> {\n    const appCheckTokenResult = await this.appCheckServiceProvider\n      .getImmediate({ optional: true })\n      ?.getToken();\n    if (appCheckTokenResult?.error) {\n      // Context: appCheck.getToken() will never throw even if an error happened.\n      // In the error case, a dummy token will be returned along with an error field describing\n      // the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      _logWarn(\n        `Error while retrieving App Check token: ${appCheckTokenResult.error}`\n      );\n    }\n    return appCheckTokenResult?.token;\n  }\n}\n\n/**\n * Method to be used to cast down to our private implmentation of Auth.\n * It will also handle unwrapping from the compat type if necessary\n *\n * @param auth Auth object passed in from developer\n */\nexport function _castAuth(auth: Auth): AuthInternal {\n  return getModularInstance(auth) as AuthInternal;\n}\n\n/** Helper class to wrap subscriber logic */\nclass Subscription<T> {\n  private observer: Observer<T | null> | null = null;\n  readonly addObserver: Subscribe<T | null> = createSubscribe(\n    observer => (this.observer = observer)\n  );\n\n  constructor(readonly auth: AuthInternal) {}\n\n  get next(): NextFn<T | null> {\n    _assert(this.observer, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.observer.next.bind(this.observer);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\nimport { _createError } from '../core/util/assert';\n\nfunction getScriptParentElement(): HTMLDocument | HTMLHeadElement {\n  return document.getElementsByTagName('head')?.[0] ?? document;\n}\n\nexport function _loadJS(url: string): Promise<Event> {\n  // TODO: consider adding timeout support & cancellation\n  return new Promise((resolve, reject) => {\n    const el = document.createElement('script');\n    el.setAttribute('src', url);\n    el.onload = resolve;\n    el.onerror = e => {\n      const error = _createError(AuthErrorCode.INTERNAL_ERROR);\n      error.customData = e as unknown as Record<string, unknown>;\n      reject(error);\n    };\n    el.type = 'text/javascript';\n    el.charset = 'UTF-8';\n    getScriptParentElement().appendChild(el);\n  });\n}\n\nexport function _generateCallbackName(prefix: string): string {\n  return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\n}\n","/* eslint-disable @typescript-eslint/no-require-imports */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isEnterprise, RecaptchaConfig } from './recaptcha';\nimport { getRecaptchaConfig } from '../../api/authentication/recaptcha';\nimport {\n  RecaptchaClientType,\n  RecaptchaVersion,\n  RecaptchaActionName,\n  RecaptchaProvider\n} from '../../api';\n\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport * as jsHelpers from '../load_js';\nimport { AuthErrorCode } from '../../core/errors';\n\nconst RECAPTCHA_ENTERPRISE_URL =\n  'https://www.google.com/recaptcha/enterprise.js?render=';\n\nexport const RECAPTCHA_ENTERPRISE_VERIFIER_TYPE = 'recaptcha-enterprise';\nexport const FAKE_TOKEN = 'NO_RECAPTCHA';\n\nexport class RecaptchaEnterpriseVerifier {\n  /**\n   * Identifies the type of application verifier (e.g. \"recaptcha-enterprise\").\n   */\n  readonly type = RECAPTCHA_ENTERPRISE_VERIFIER_TYPE;\n\n  private readonly auth: AuthInternal;\n\n  /**\n   *\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   *\n   */\n  constructor(authExtern: Auth) {\n    this.auth = _castAuth(authExtern);\n  }\n\n  /**\n   * Executes the verification process.\n   *\n   * @returns A Promise for a token that can be used to assert the validity of a request.\n   */\n  async verify(\n    action: string = 'verify',\n    forceRefresh = false\n  ): Promise<string> {\n    async function retrieveSiteKey(auth: AuthInternal): Promise<string> {\n      if (!forceRefresh) {\n        if (auth.tenantId == null && auth._agentRecaptchaConfig != null) {\n          return auth._agentRecaptchaConfig.siteKey;\n        }\n        if (\n          auth.tenantId != null &&\n          auth._tenantRecaptchaConfigs[auth.tenantId] !== undefined\n        ) {\n          return auth._tenantRecaptchaConfigs[auth.tenantId].siteKey;\n        }\n      }\n\n      return new Promise<string>(async (resolve, reject) => {\n        getRecaptchaConfig(auth, {\n          clientType: RecaptchaClientType.WEB,\n          version: RecaptchaVersion.ENTERPRISE\n        })\n          .then(response => {\n            if (response.recaptchaKey === undefined) {\n              reject(new Error('recaptcha Enterprise site key undefined'));\n            } else {\n              const config = new RecaptchaConfig(response);\n              if (auth.tenantId == null) {\n                auth._agentRecaptchaConfig = config;\n              } else {\n                auth._tenantRecaptchaConfigs[auth.tenantId] = config;\n              }\n              return resolve(config.siteKey);\n            }\n          })\n          .catch(error => {\n            reject(error);\n          });\n      });\n    }\n\n    function retrieveRecaptchaToken(\n      siteKey: string,\n      resolve: (value: string | PromiseLike<string>) => void,\n      reject: (reason?: unknown) => void\n    ): void {\n      const grecaptcha = window.grecaptcha;\n      if (isEnterprise(grecaptcha)) {\n        grecaptcha.enterprise.ready(() => {\n          grecaptcha.enterprise\n            .execute(siteKey, { action })\n            .then(token => {\n              resolve(token);\n            })\n            .catch(() => {\n              resolve(FAKE_TOKEN);\n            });\n        });\n      } else {\n        reject(Error('No reCAPTCHA enterprise script loaded.'));\n      }\n    }\n\n    return new Promise<string>((resolve, reject) => {\n      retrieveSiteKey(this.auth)\n        .then(siteKey => {\n          if (!forceRefresh && isEnterprise(window.grecaptcha)) {\n            retrieveRecaptchaToken(siteKey, resolve, reject);\n          } else {\n            if (typeof window === 'undefined') {\n              reject(\n                new Error('RecaptchaVerifier is only supported in browser')\n              );\n              return;\n            }\n            jsHelpers\n              ._loadJS(RECAPTCHA_ENTERPRISE_URL + siteKey)\n              .then(() => {\n                retrieveRecaptchaToken(siteKey, resolve, reject);\n              })\n              .catch(error => {\n                reject(error);\n              });\n          }\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n}\n\nexport async function injectRecaptchaFields<T>(\n  auth: AuthInternal,\n  request: T,\n  action: RecaptchaActionName,\n  captchaResp = false\n): Promise<T> {\n  const verifier = new RecaptchaEnterpriseVerifier(auth);\n  let captchaResponse;\n  try {\n    captchaResponse = await verifier.verify(action);\n  } catch (error) {\n    captchaResponse = await verifier.verify(action, true);\n  }\n  const newRequest = { ...request };\n  if (!captchaResp) {\n    Object.assign(newRequest, { captchaResponse });\n  } else {\n    Object.assign(newRequest, { 'captchaResp': captchaResponse });\n  }\n  Object.assign(newRequest, { 'clientType': RecaptchaClientType.WEB });\n  Object.assign(newRequest, {\n    'recaptchaVersion': RecaptchaVersion.ENTERPRISE\n  });\n  return newRequest;\n}\n\ntype ActionMethod<TRequest, TResponse> = (\n  auth: Auth,\n  request: TRequest\n) => Promise<TResponse>;\n\nexport async function handleRecaptchaFlow<TRequest, TResponse>(\n  authInstance: AuthInternal,\n  request: TRequest,\n  actionName: RecaptchaActionName,\n  actionMethod: ActionMethod<TRequest, TResponse>\n): Promise<TResponse> {\n  if (\n    authInstance\n      ._getRecaptchaConfig()\n      ?.isProviderEnabled(RecaptchaProvider.EMAIL_PASSWORD_PROVIDER)\n  ) {\n    const requestWithRecaptcha = await injectRecaptchaFields(\n      authInstance,\n      request,\n      actionName,\n      actionName === RecaptchaActionName.GET_OOB_CODE\n    );\n    return actionMethod(authInstance, requestWithRecaptcha);\n  } else {\n    return actionMethod(authInstance, request).catch(async error => {\n      if (error.code === `auth/${AuthErrorCode.MISSING_RECAPTCHA_TOKEN}`) {\n        console.log(\n          `${actionName} is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.`\n        );\n        const requestWithRecaptcha = await injectRecaptchaFields(\n          authInstance,\n          request,\n          actionName,\n          actionName === RecaptchaActionName.GET_OOB_CODE\n        );\n        return actionMethod(authInstance, requestWithRecaptcha);\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n}\n\nexport async function _initializeRecaptchaConfig(auth: Auth): Promise<void> {\n  const authInternal = _castAuth(auth);\n\n  const response = await getRecaptchaConfig(authInternal, {\n    clientType: RecaptchaClientType.WEB,\n    version: RecaptchaVersion.ENTERPRISE\n  });\n\n  const config = new RecaptchaConfig(response);\n  if (authInternal.tenantId == null) {\n    authInternal._agentRecaptchaConfig = config;\n  } else {\n    authInternal._tenantRecaptchaConfigs[authInternal.tenantId] = config;\n  }\n\n  if (config.isProviderEnabled(RecaptchaProvider.EMAIL_PASSWORD_PROVIDER)) {\n    const verifier = new RecaptchaEnterpriseVerifier(authInternal);\n    void verifier.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp } from '@firebase/app';\nimport { deepEqual } from '@firebase/util';\nimport { Auth, Dependencies } from '../../model/public_types';\n\nimport { AuthErrorCode } from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport { _fail } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { AuthImpl } from './auth_impl';\n\n/**\n * Initializes an {@link Auth} instance with fine-grained control over\n * {@link Dependencies}.\n *\n * @remarks\n *\n * This function allows more control over the {@link Auth} instance than\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\n * need control over which persistence layer is used, or to minimize bundle\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\n *\n * For example, if your app only uses anonymous accounts and you only want\n * accounts saved for the current session, initialize `Auth` with:\n *\n * ```js\n * const auth = initializeAuth(app, {\n *   persistence: browserSessionPersistence,\n *   popupRedirectResolver: undefined,\n * });\n * ```\n *\n * @public\n */\nexport function initializeAuth(app: FirebaseApp, deps?: Dependencies): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    const auth = provider.getImmediate() as AuthImpl;\n    const initialOptions = provider.getOptions() as Dependencies;\n    if (deepEqual(initialOptions, deps ?? {})) {\n      return auth;\n    } else {\n      _fail(auth, AuthErrorCode.ALREADY_INITIALIZED);\n    }\n  }\n\n  const auth = provider.initialize({ options: deps }) as AuthImpl;\n\n  return auth;\n}\n\nexport function _initializeAuthInstance(\n  auth: AuthImpl,\n  deps?: Dependencies\n): void {\n  const persistence = deps?.persistence || [];\n  const hierarchy = (\n    Array.isArray(persistence) ? persistence : [persistence]\n  ).map<PersistenceInternal>(_getInstance);\n  if (deps?.errorMap) {\n    auth._updateErrorMap(deps.errorMap);\n  }\n\n  // This promise is intended to float; auth initialization happens in the\n  // background, meanwhile the auth object may be used by the app.\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  auth._initializeWithPersistence(hierarchy, deps?.popupRedirectResolver);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Auth } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _castAuth } from './auth_impl';\n\n/**\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\n * Firebase Auth services.\n *\n * @remarks\n * This must be called synchronously immediately following the first call to\n * {@link initializeAuth}.  Do not use with production credentials as emulator\n * traffic is not encrypted.\n *\n *\n * @example\n * ```javascript\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\n * `true` to disable the warning banner attached to the DOM.\n *\n * @public\n */\nexport function connectAuthEmulator(\n  auth: Auth,\n  url: string,\n  options?: { disableWarnings: boolean }\n): void {\n  const authInternal = _castAuth(auth);\n  _assert(\n    authInternal._canInitEmulator,\n    authInternal,\n    AuthErrorCode.EMULATOR_CONFIG_FAILED\n  );\n\n  _assert(\n    /^https?:\\/\\//.test(url),\n    authInternal,\n    AuthErrorCode.INVALID_EMULATOR_SCHEME\n  );\n\n  const disableWarnings = !!options?.disableWarnings;\n\n  const protocol = extractProtocol(url);\n  const { host, port } = extractHostAndPort(url);\n  const portStr = port === null ? '' : `:${port}`;\n\n  // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n  authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\n  authInternal.settings.appVerificationDisabledForTesting = true;\n  authInternal.emulatorConfig = Object.freeze({\n    host,\n    port,\n    protocol: protocol.replace(':', ''),\n    options: Object.freeze({ disableWarnings })\n  });\n\n  if (!disableWarnings) {\n    emitEmulatorWarning();\n  }\n}\n\nfunction extractProtocol(url: string): string {\n  const protocolEnd = url.indexOf(':');\n  return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\n\nfunction extractHostAndPort(url: string): {\n  host: string;\n  port: number | null;\n} {\n  const protocol = extractProtocol(url);\n  const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n  if (!authority) {\n    return { host: '', port: null };\n  }\n  const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n  const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n  if (bracketedIPv6) {\n    const host = bracketedIPv6[1];\n    return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\n  } else {\n    const [host, port] = hostAndPort.split(':');\n    return { host, port: parsePort(port) };\n  }\n}\n\nfunction parsePort(portStr: string): number | null {\n  if (!portStr) {\n    return null;\n  }\n  const port = Number(portStr);\n  if (isNaN(port)) {\n    return null;\n  }\n  return port;\n}\n\nfunction emitEmulatorWarning(): void {\n  function attachBanner(): void {\n    const el = document.createElement('p');\n    const sty = el.style;\n    el.innerText =\n      'Running in emulator mode. Do not use with production credentials.';\n    sty.position = 'fixed';\n    sty.width = '100%';\n    sty.backgroundColor = '#ffffff';\n    sty.border = '.1em solid #000000';\n    sty.color = '#b50000';\n    sty.bottom = '0px';\n    sty.left = '0px';\n    sty.margin = '0px';\n    sty.zIndex = '10000';\n    sty.textAlign = 'center';\n    el.classList.add('firebase-emulator-warning');\n    document.body.appendChild(el);\n  }\n\n  if (typeof console !== 'undefined' && typeof console.info === 'function') {\n    console.info(\n      'WARNING: You are using the Auth Emulator,' +\n        ' which is intended for local testing only.  Do not use with' +\n        ' production credentials.'\n    );\n  }\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    if (document.readyState === 'loading') {\n      window.addEventListener('DOMContentLoaded', attachBanner);\n    } else {\n      attachBanner();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { debugFail } from '../util/assert';\n\n/**\n * Interface that represents the credentials returned by an {@link AuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class AuthCredential {\n  /** @internal */\n  protected constructor(\n    /**\n     * The authentication provider ID for the credential.\n     *\n     * @remarks\n     * For example, 'facebook.com', or 'google.com'.\n     */\n    readonly providerId: string,\n    /**\n     * The authentication sign in method for the credential.\n     *\n     * @remarks\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\n     */\n    readonly signInMethod: string\n  ) {}\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object {\n    return debugFail('not implemented');\n  }\n\n  /** @internal */\n  _getIdTokenResponse(_auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _linkToIdToken(\n    _auth: AuthInternal,\n    _idToken: string\n  ): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _getReauthenticationResolver(_auth: AuthInternal): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from './mfa';\nimport { SignUpRequest, SignUpResponse } from '../authentication/sign_up';\n\nexport interface ResetPasswordRequest {\n  oobCode: string;\n  newPassword?: string;\n  tenantId?: string;\n}\n\nexport interface ResetPasswordResponse {\n  email: string;\n  newEmail?: string;\n  requestType?: ActionCodeOperation;\n  mfaInfo?: MfaEnrollment;\n}\n\nexport async function resetPassword(\n  auth: Auth,\n  request: ResetPasswordRequest\n): Promise<ResetPasswordResponse> {\n  return _performApiRequest<ResetPasswordRequest, ResetPasswordResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.RESET_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface UpdateEmailPasswordRequest {\n  idToken: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n}\n\nexport interface UpdateEmailPasswordResponse extends IdTokenResponse {}\n\nexport async function updateEmailPassword(\n  auth: Auth,\n  request: UpdateEmailPasswordRequest\n): Promise<UpdateEmailPasswordResponse> {\n  return _performApiRequest<\n    UpdateEmailPasswordRequest,\n    UpdateEmailPasswordResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\n// Used for linking an email/password account to an existing idToken. Uses the same request/response\n// format as updateEmailPassword.\nexport async function linkEmailPassword(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performApiRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    request\n  );\n}\n\nexport interface ApplyActionCodeRequest {\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface ApplyActionCodeResponse {}\n\nexport async function applyActionCode(\n  auth: Auth,\n  request: ApplyActionCodeRequest\n): Promise<ApplyActionCodeResponse> {\n  return _performApiRequest<ApplyActionCodeRequest, ApplyActionCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _addTidIfNecessary,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\n\nexport interface SignInWithPasswordRequest {\n  returnSecureToken?: boolean;\n  email: string;\n  password: string;\n  tenantId?: string;\n  captchaResponse?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface SignInWithPasswordResponse extends IdTokenResponse {\n  email: string;\n  displayName: string;\n}\n\nexport async function signInWithPassword(\n  auth: Auth,\n  request: SignInWithPasswordRequest\n): Promise<SignInWithPasswordResponse> {\n  return _performSignInRequest<\n    SignInWithPasswordRequest,\n    SignInWithPasswordResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface GetOobCodeRequest {\n  email?: string; // Everything except VERIFY_AND_CHANGE_EMAIL\n  continueUrl?: string;\n  iOSBundleId?: string;\n  iosAppStoreId?: string;\n  androidPackageName?: string;\n  androidInstallApp?: boolean;\n  androidMinimumVersionCode?: string;\n  canHandleCodeInApp?: boolean;\n  dynamicLinkDomain?: string;\n  tenantId?: string;\n  targetProjectid?: string;\n}\n\nexport interface VerifyEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_EMAIL;\n  idToken: IdToken;\n}\n\nexport interface PasswordResetRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.PASSWORD_RESET;\n  email: string;\n  captchaResp?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface EmailSignInRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.EMAIL_SIGNIN;\n  email: string;\n  captchaResp?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface VerifyAndChangeEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n  idToken: IdToken;\n  newEmail: string;\n}\n\ninterface GetOobCodeResponse {\n  email: string;\n}\n\nexport interface VerifyEmailResponse extends GetOobCodeResponse {}\nexport interface PasswordResetResponse extends GetOobCodeResponse {}\nexport interface EmailSignInResponse extends GetOobCodeResponse {}\nexport interface VerifyAndChangeEmailResponse extends GetOobCodeRequest {}\n\nasync function sendOobCode(\n  auth: Auth,\n  request: GetOobCodeRequest\n): Promise<GetOobCodeResponse> {\n  return _performApiRequest<GetOobCodeRequest, GetOobCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_OOB_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function sendEmailVerification(\n  auth: Auth,\n  request: VerifyEmailRequest\n): Promise<VerifyEmailResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  request: PasswordResetRequest\n): Promise<PasswordResetResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  request: EmailSignInRequest\n): Promise<EmailSignInResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function verifyAndChangeEmail(\n  auth: Auth,\n  request: VerifyAndChangeEmailRequest\n): Promise<VerifyAndChangeEmailResponse> {\n  return sendOobCode(auth, request);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performSignInRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithEmailLinkRequest {\n  email: string;\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithEmailLinkResponse extends IdTokenResponse {\n  email: string;\n  isNewUser: boolean;\n}\n\nexport async function signInWithEmailLink(\n  auth: Auth,\n  request: SignInWithEmailLinkRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface SignInWithEmailLinkForLinkingRequest\n  extends SignInWithEmailLinkRequest {\n  idToken: string;\n}\n\nexport async function signInWithEmailLinkForLinking(\n  auth: Auth,\n  request: SignInWithEmailLinkForLinkingRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkForLinkingRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { linkEmailPassword } from '../../api/account_management/email_and_password';\nimport {\n  signInWithPassword,\n  SignInWithPasswordRequest\n} from '../../api/authentication/email_and_password';\nimport {\n  signInWithEmailLink,\n  signInWithEmailLinkForLinking\n} from '../../api/authentication/email_link';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { SignUpRequest } from '../../api/authentication/sign_up';\n/**\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\n * {@link ProviderId}.PASSWORD\n *\n * @remarks\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @public\n */\nexport class EmailAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    /** @internal */\n    readonly _email: string,\n    /** @internal */\n    readonly _password: string,\n    signInMethod: SignInMethod,\n    /** @internal */\n    readonly _tenantId: string | null = null\n  ) {\n    super(ProviderId.PASSWORD, signInMethod);\n  }\n\n  /** @internal */\n  static _fromEmailAndPassword(\n    email: string,\n    password: string\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      password,\n      SignInMethod.EMAIL_PASSWORD\n    );\n  }\n\n  /** @internal */\n  static _fromEmailAndCode(\n    email: string,\n    oobCode: string,\n    tenantId: string | null = null\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      oobCode,\n      SignInMethod.EMAIL_LINK,\n      tenantId\n    );\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    return {\n      email: this._email,\n      password: this._password,\n      signInMethod: this.signInMethod,\n      tenantId: this._tenantId\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\n   *\n   * @param json - Either `object` or the stringified representation of the object. When string is\n   * provided, `JSON.parse` would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\n   */\n  static fromJSON(json: object | string): EmailAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    if (obj?.email && obj?.password) {\n      if (obj.signInMethod === SignInMethod.EMAIL_PASSWORD) {\n        return this._fromEmailAndPassword(obj.email, obj.password);\n      } else if (obj.signInMethod === SignInMethod.EMAIL_LINK) {\n        return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n      }\n    }\n    return null;\n  }\n\n  /** @internal */\n  async _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        const request: SignInWithPasswordRequest = {\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password,\n          clientType: RecaptchaClientType.WEB\n        };\n        return handleRecaptchaFlow(\n          auth,\n          request,\n          RecaptchaActionName.SIGN_IN_WITH_PASSWORD,\n          signInWithPassword\n        );\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLink(auth, {\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  async _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        const request: SignUpRequest = {\n          idToken,\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password,\n          clientType: RecaptchaClientType.WEB\n        };\n        return handleRecaptchaFlow(\n          auth,\n          request,\n          RecaptchaActionName.SIGN_UP_PASSWORD,\n          linkEmailPassword\n        );\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLinkForLinking(auth, {\n          idToken,\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return this._getIdTokenResponse(auth);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithIdpRequest {\n  requestUri: string;\n  postBody?: string;\n  sessionId?: string;\n  tenantId?: string;\n  returnSecureToken: boolean;\n  returnIdpCredential?: boolean;\n  idToken?: IdToken;\n  autoCreate?: boolean;\n  pendingToken?: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithIdpResponse extends IdTokenResponse {\n  oauthAccessToken?: string;\n  oauthTokenSecret?: string;\n  nonce?: string;\n  oauthIdToken?: string;\n  pendingToken?: string;\n}\n\nexport async function signInWithIdp(\n  auth: Auth,\n  request: SignInWithIdpRequest\n): Promise<SignInWithIdpResponse> {\n  return _performSignInRequest<SignInWithIdpRequest, SignInWithIdpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_IDP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\nexport interface OAuthCredentialParams {\n  // OAuth 2 uses either id token or access token\n  idToken?: string | null;\n  accessToken?: string | null;\n\n  // These fields are used with OAuth 1\n  oauthToken?: string;\n  secret?: string;\n  oauthTokenSecret?: string;\n\n  // Nonce is only set if pendingToken is not present\n  nonce?: string;\n  pendingToken?: string;\n\n  // Utilities\n  providerId: string;\n  signInMethod: string;\n}\n\n/**\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class OAuthCredential extends AuthCredential {\n  /**\n   * The OAuth ID token associated with the credential if it belongs to an OIDC provider,\n   * such as `google.com`.\n   * @readonly\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token associated with the credential if it belongs to an\n   * {@link OAuthProvider}, such as `facebook.com`, `twitter.com`, etc.\n   * @readonly\n   */\n  accessToken?: string;\n  /**\n   * The OAuth access token secret associated with the credential if it belongs to an OAuth 1.0\n   * provider, such as `twitter.com`.\n   * @readonly\n   */\n  secret?: string;\n\n  private nonce?: string;\n  private pendingToken: string | null = null;\n\n  /** @internal */\n  static _fromParams(params: OAuthCredentialParams): OAuthCredential {\n    const cred = new OAuthCredential(params.providerId, params.signInMethod);\n\n    if (params.idToken || params.accessToken) {\n      // OAuth 2 and either ID token or access token.\n      if (params.idToken) {\n        cred.idToken = params.idToken;\n      }\n\n      if (params.accessToken) {\n        cred.accessToken = params.accessToken;\n      }\n\n      // Add nonce if available and no pendingToken is present.\n      if (params.nonce && !params.pendingToken) {\n        cred.nonce = params.nonce;\n      }\n\n      if (params.pendingToken) {\n        cred.pendingToken = params.pendingToken;\n      }\n    } else if (params.oauthToken && params.oauthTokenSecret) {\n      // OAuth 1 and OAuth token with token secret\n      cred.accessToken = params.oauthToken;\n      cred.secret = params.oauthTokenSecret;\n    } else {\n      _fail(AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    return cred;\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      idToken: this.idToken,\n      accessToken: this.accessToken,\n      secret: this.secret,\n      nonce: this.nonce,\n      pendingToken: this.pendingToken,\n      providerId: this.providerId,\n      signInMethod: this.signInMethod\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): OAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, ...rest }: OAuthCredentialParams = obj;\n    if (!providerId || !signInMethod) {\n      return null;\n    }\n\n    const cred = new OAuthCredential(providerId, signInMethod);\n    cred.idToken = rest.idToken || undefined;\n    cred.accessToken = rest.accessToken || undefined;\n    cred.secret = rest.secret;\n    cred.nonce = rest.nonce;\n    cred.pendingToken = rest.pendingToken || null;\n    return cred;\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true\n    };\n\n    if (this.pendingToken) {\n      request.pendingToken = this.pendingToken;\n    } else {\n      const postBody: Record<string, string> = {};\n      if (this.idToken) {\n        postBody['id_token'] = this.idToken;\n      }\n      if (this.accessToken) {\n        postBody['access_token'] = this.accessToken;\n      }\n      if (this.secret) {\n        postBody['oauth_token_secret'] = this.secret;\n      }\n\n      postBody['providerId'] = this.providerId;\n      if (this.nonce && !this.pendingToken) {\n        postBody['nonce'] = this.nonce;\n      }\n\n      request.postBody = querystring(postBody);\n    }\n\n    return request;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _makeTaggedError,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { AuthErrorCode } from '../../core/errors';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { ServerError, ServerErrorMap } from '../errors';\nimport { Auth } from '../../model/public_types';\n\nexport interface SendPhoneVerificationCodeRequest {\n  phoneNumber: string;\n  recaptchaToken: string;\n  tenantId?: string;\n}\n\nexport interface SendPhoneVerificationCodeResponse {\n  sessionInfo: string;\n}\n\nexport async function sendPhoneVerificationCode(\n  auth: Auth,\n  request: SendPhoneVerificationCodeRequest\n): Promise<SendPhoneVerificationCodeResponse> {\n  return _performApiRequest<\n    SendPhoneVerificationCodeRequest,\n    SendPhoneVerificationCodeResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_VERIFICATION_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberRequest {\n  temporaryProof?: string;\n  phoneNumber?: string;\n  sessionInfo?: string;\n  code?: string;\n  tenantId?: string;\n}\n\nexport interface LinkWithPhoneNumberRequest\n  extends SignInWithPhoneNumberRequest {\n  idToken: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberResponse extends IdTokenResponse {\n  temporaryProof?: string;\n  phoneNumber?: string;\n}\n\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  return _performSignInRequest<\n    SignInWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function linkWithPhoneNumber(\n  auth: Auth,\n  request: LinkWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const response = await _performSignInRequest<\n    LinkWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n  if (response.temporaryProof) {\n    throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, response);\n  }\n  return response;\n}\n\ninterface VerifyPhoneNumberForExistingRequest\n  extends SignInWithPhoneNumberRequest {\n  operation: 'REAUTH';\n}\n\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_: Partial<\n  ServerErrorMap<ServerError>\n> = {\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.USER_DELETED\n};\n\nexport async function verifyPhoneNumberForExisting(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const apiRequest: VerifyPhoneNumberForExistingRequest = {\n    ...request,\n    operation: 'REAUTH'\n  };\n  return _performSignInRequest<\n    VerifyPhoneNumberForExistingRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, apiRequest),\n    VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport {\n  linkWithPhoneNumber,\n  signInWithPhoneNumber,\n  SignInWithPhoneNumberRequest,\n  verifyPhoneNumberForExisting\n} from '../../api/authentication/sms';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nexport interface PhoneAuthCredentialParameters {\n  verificationId?: string;\n  verificationCode?: string;\n  phoneNumber?: string;\n  temporaryProof?: string;\n}\n\n/**\n * Represents the credentials returned by {@link PhoneAuthProvider}.\n *\n * @public\n */\nexport class PhoneAuthCredential extends AuthCredential {\n  private constructor(private readonly params: PhoneAuthCredentialParameters) {\n    super(ProviderId.PHONE, SignInMethod.PHONE);\n  }\n\n  /** @internal */\n  static _fromVerification(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ verificationId, verificationCode });\n  }\n\n  /** @internal */\n  static _fromTokenResponse(\n    phoneNumber: string,\n    temporaryProof: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ phoneNumber, temporaryProof });\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithPhoneNumber(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return linkWithPhoneNumber(auth, {\n      idToken,\n      ...this._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _makeVerificationRequest(): SignInWithPhoneNumberRequest {\n    const { temporaryProof, phoneNumber, verificationId, verificationCode } =\n      this.params;\n    if (temporaryProof && phoneNumber) {\n      return { temporaryProof, phoneNumber };\n    }\n\n    return {\n      sessionInfo: verificationId,\n      code: verificationCode\n    };\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    const obj: Record<string, string> = {\n      providerId: this.providerId\n    };\n    if (this.params.phoneNumber) {\n      obj.phoneNumber = this.params.phoneNumber;\n    }\n    if (this.params.temporaryProof) {\n      obj.temporaryProof = this.params.temporaryProof;\n    }\n    if (this.params.verificationCode) {\n      obj.verificationCode = this.params.verificationCode;\n    }\n    if (this.params.verificationId) {\n      obj.verificationId = this.params.verificationId;\n    }\n\n    return obj;\n  }\n\n  /** Generates a phone credential based on a plain object or a JSON string. */\n  static fromJSON(json: object | string): PhoneAuthCredential | null {\n    if (typeof json === 'string') {\n      json = JSON.parse(json);\n    }\n\n    const { verificationId, verificationCode, phoneNumber, temporaryProof } =\n      json as { [key: string]: string };\n    if (\n      !verificationCode &&\n      !verificationId &&\n      !phoneNumber &&\n      !temporaryProof\n    ) {\n      return null;\n    }\n\n    return new PhoneAuthCredential({\n      verificationId,\n      verificationCode,\n      phoneNumber,\n      temporaryProof\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extractQuerystring, querystringDecode } from '@firebase/util';\nimport { ActionCodeOperation } from '../model/public_types';\nimport { AuthErrorCode } from './errors';\nimport { _assert } from './util/assert';\n\n/**\n * Enums for fields in URL query string.\n *\n * @enum {string}\n */\nconst enum QueryField {\n  API_KEY = 'apiKey',\n  CODE = 'oobCode',\n  CONTINUE_URL = 'continueUrl',\n  LANGUAGE_CODE = 'languageCode',\n  MODE = 'mode',\n  TENANT_ID = 'tenantId'\n}\n\n/**\n * Maps the mode string in action code URL to Action Code Info operation.\n *\n * @param mode\n */\nfunction parseMode(mode: string | null): ActionCodeOperation | null {\n  switch (mode) {\n    case 'recoverEmail':\n      return ActionCodeOperation.RECOVER_EMAIL;\n    case 'resetPassword':\n      return ActionCodeOperation.PASSWORD_RESET;\n    case 'signIn':\n      return ActionCodeOperation.EMAIL_SIGNIN;\n    case 'verifyEmail':\n      return ActionCodeOperation.VERIFY_EMAIL;\n    case 'verifyAndChangeEmail':\n      return ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n    case 'revertSecondFactorAddition':\n      return ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION;\n    default:\n      return null;\n  }\n}\n\n/**\n * Helper to parse FDL links\n *\n * @param url\n */\nfunction parseDeepLink(url: string): string {\n  const link = querystringDecode(extractQuerystring(url))['link'];\n\n  // Double link case (automatic redirect).\n  const doubleDeepLink = link\n    ? querystringDecode(extractQuerystring(link))['deep_link_id']\n    : null;\n  // iOS custom scheme links.\n  const iOSDeepLink = querystringDecode(extractQuerystring(url))[\n    'deep_link_id'\n  ];\n  const iOSDoubleDeepLink = iOSDeepLink\n    ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\n    : null;\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * A utility class to parse email action URLs such as password reset, email verification,\n * email link sign in, etc.\n *\n * @public\n */\nexport class ActionCodeURL {\n  /**\n   * The API key of the email action link.\n   */\n  readonly apiKey: string;\n  /**\n   * The action code of the email action link.\n   */\n  readonly code: string;\n  /**\n   * The continue URL of the email action link. Null if not provided.\n   */\n  readonly continueUrl: string | null;\n  /**\n   * The language code of the email action link. Null if not provided.\n   */\n  readonly languageCode: string | null;\n  /**\n   * The action performed by the email action link. It returns from one of the types from\n   * {@link ActionCodeInfo}\n   */\n  readonly operation: string;\n  /**\n   * The tenant ID of the email action link. Null if the email action is from the parent project.\n   */\n  readonly tenantId: string | null;\n\n  /**\n   * @param actionLink - The link from which to extract the URL.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @internal\n   */\n  constructor(actionLink: string) {\n    const searchParams = querystringDecode(extractQuerystring(actionLink));\n    const apiKey = searchParams[QueryField.API_KEY] ?? null;\n    const code = searchParams[QueryField.CODE] ?? null;\n    const operation = parseMode(searchParams[QueryField.MODE] ?? null);\n    // Validate API key, code and mode.\n    _assert(apiKey && code && operation, AuthErrorCode.ARGUMENT_ERROR);\n    this.apiKey = apiKey;\n    this.operation = operation;\n    this.code = code;\n    this.continueUrl = searchParams[QueryField.CONTINUE_URL] ?? null;\n    this.languageCode = searchParams[QueryField.LANGUAGE_CODE] ?? null;\n    this.tenantId = searchParams[QueryField.TENANT_ID] ?? null;\n  }\n\n  /**\n   * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\n   * otherwise returns null.\n   *\n   * @param link  - The email action link string.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @public\n   */\n  static parseLink(link: string): ActionCodeURL | null {\n    const actionLink = parseDeepLink(link);\n    try {\n      return new ActionCodeURL(actionLink);\n    } catch {\n      return null;\n    }\n  }\n}\n\n/**\n * Parses the email action link string and returns an {@link ActionCodeURL} if\n * the link is valid, otherwise returns null.\n *\n * @public\n */\nexport function parseActionCodeURL(link: string): ActionCodeURL | null {\n  return ActionCodeURL.parseLink(link);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\nimport { AuthProvider } from '../../model/public_types';\n\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthCredential } from '../credentials/email';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\n/**\n * Provider for generating {@link EmailAuthCredential}.\n *\n * @public\n */\nexport class EmailAuthProvider implements AuthProvider {\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  static readonly PROVIDER_ID: 'password' = ProviderId.PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\n   */\n  static readonly EMAIL_PASSWORD_SIGN_IN_METHOD: 'password' =\n    SignInMethod.EMAIL_PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_LINK.\n   */\n  static readonly EMAIL_LINK_SIGN_IN_METHOD: 'emailLink' =\n    SignInMethod.EMAIL_LINK;\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  readonly providerId = EmailAuthProvider.PROVIDER_ID;\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and password.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credential(email, password);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * const userCredential = await signInWithEmailAndPassword(auth, email, password);\n   * ```\n   *\n   * @param email - Email address.\n   * @param password - User account password.\n   * @returns The auth provider credential.\n   */\n  static credential(email: string, password: string): EmailAuthCredential {\n    return EmailAuthCredential._fromEmailAndPassword(email, password);\n  }\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\n   * email link operation.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * await sendSignInLinkToEmail(auth, email);\n   * // Obtain emailLink from user.\n   * const userCredential = await signInWithEmailLink(auth, email, emailLink);\n   * ```\n   *\n   * @param auth - The {@link Auth} instance used to verify the link.\n   * @param email - Email address.\n   * @param emailLink - Sign-in email link.\n   * @returns - The auth provider credential.\n   */\n  static credentialWithLink(\n    email: string,\n    emailLink: string\n  ): EmailAuthCredential {\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    _assert(actionCodeUrl, AuthErrorCode.ARGUMENT_ERROR);\n\n    return EmailAuthCredential._fromEmailAndCode(\n      email,\n      actionCodeUrl.code,\n      actionCodeUrl.tenantId\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\n\n/**\n * Map of OAuth Custom Parameters.\n *\n * @public\n */\nexport type CustomParameters = Record<string, string>;\n\n/**\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\n *\n * This class is not meant to be instantiated directly.\n *\n * @public\n */\nexport abstract class FederatedAuthProvider implements AuthProvider {\n  /** @internal */\n  defaultLanguageCode: string | null = null;\n  /** @internal */\n  private customParameters: CustomParameters = {};\n\n  /**\n   * Constructor for generic OAuth providers.\n   *\n   * @param providerId - Provider for which credentials should be generated.\n   */\n  constructor(readonly providerId: string) {}\n\n  /**\n   * Set the language gode.\n   *\n   * @param languageCode - language code\n   */\n  setDefaultLanguage(languageCode: string | null): void {\n    this.defaultLanguageCode = languageCode;\n  }\n\n  /**\n   * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\n   * operations.\n   *\n   * @remarks\n   * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\n   * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\n   *\n   * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\n   */\n  setCustomParameters(customOAuthParameters: CustomParameters): AuthProvider {\n    this.customParameters = customOAuthParameters;\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of {@link CustomParameters}.\n   */\n  getCustomParameters(): CustomParameters {\n    return this.customParameters;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, UserCredential } from '../../model/public_types';\n\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\nimport { OAuthCredential, OAuthCredentialParams } from '../credentials/oauth';\nimport { UserCredentialInternal } from '../../model/user';\nimport { FirebaseError } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { SignInWithIdpResponse } from '../../../internal';\nimport { FederatedAuthProvider } from './federated';\n\n/**\n * Defines the options for initializing an {@link OAuthCredential}.\n *\n * @remarks\n * For ID tokens with nonce claim, the raw nonce has to also be provided.\n *\n * @public\n */\nexport interface OAuthCredentialOptions {\n  /**\n   * The OAuth ID token used to initialize the {@link OAuthCredential}.\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token used to initialize the {@link OAuthCredential}.\n   */\n  accessToken?: string;\n  /**\n   * The raw nonce associated with the ID token.\n   *\n   * @remarks\n   * It is required when an ID token with a nonce field is provided. The SHA-256 hash of the\n   * raw nonce must match the nonce field in the ID token.\n   */\n  rawNonce?: string;\n}\n\n/**\n * Common code to all OAuth providers. This is separate from the\n * {@link OAuthProvider} so that child providers (like\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\n * Instead, they rely on a static `credential` method.\n */\nexport abstract class BaseOAuthProvider\n  extends FederatedAuthProvider\n  implements AuthProvider\n{\n  /** @internal */\n  private scopes: string[] = [];\n\n  /**\n   * Add an OAuth scope to the credential.\n   *\n   * @param scope - Provider OAuth scope to add.\n   */\n  addScope(scope: string): AuthProvider {\n    // If not already added, add scope to list.\n    if (!this.scopes.includes(scope)) {\n      this.scopes.push(scope);\n    }\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of OAuth scopes.\n   */\n  getScopes(): string[] {\n    return [...this.scopes];\n  }\n}\n\n/**\n * Provider for generating generic {@link OAuthCredential}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new OAuthProvider('google.com');\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a OAuth Access Token for the provider.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new OAuthProvider('google.com');\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a OAuth Access Token for the provider.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class OAuthProvider extends BaseOAuthProvider {\n  /**\n   * Creates an {@link OAuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: object | string): OAuthCredential {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    _assert(\n      'providerId' in obj && 'signInMethod' in obj,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return OAuthCredential._fromParams(obj);\n  }\n\n  /**\n   * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\n   *\n   * @remarks\n   * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\n   * the raw nonce must match the nonce field in the ID token.\n   *\n   * @example\n   * ```javascript\n   * // `googleUser` from the onsuccess Google Sign In callback.\n   * // Initialize a generate OAuth provider with a `google.com` providerId.\n   * const provider = new OAuthProvider('google.com');\n   * const credential = provider.credential({\n   *   idToken: googleUser.getAuthResponse().id_token,\n   * });\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param params - Either the options object containing the ID token, access token and raw nonce\n   * or the ID token string.\n   */\n  credential(params: OAuthCredentialOptions): OAuthCredential {\n    return this._credential({ ...params, nonce: params.rawNonce });\n  }\n\n  /** An internal credential method that accepts more permissive options */\n  private _credential(\n    params: Omit<OAuthCredentialParams, 'signInMethod' | 'providerId'>\n  ): OAuthCredential {\n    _assert(params.idToken || params.accessToken, AuthErrorCode.ARGUMENT_ERROR);\n    // For OAuthCredential, sign in method is same as providerId.\n    return OAuthCredential._fromParams({\n      ...params,\n      providerId: this.providerId,\n      signInMethod: this.providerId\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static oauthCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const {\n      oauthIdToken,\n      oauthAccessToken,\n      oauthTokenSecret,\n      pendingToken,\n      nonce,\n      providerId\n    } = tokenResponse as SignInWithIdpResponse;\n    if (\n      !oauthAccessToken &&\n      !oauthTokenSecret &&\n      !oauthIdToken &&\n      !pendingToken\n    ) {\n      return null;\n    }\n\n    if (!providerId) {\n      return null;\n    }\n\n    try {\n      return new OAuthProvider(providerId)._credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        nonce,\n        pendingToken\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('user_birthday');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * provider.addScope('user_birthday');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = FacebookAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class FacebookAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.FACEBOOK. */\n  static readonly FACEBOOK_SIGN_IN_METHOD: 'facebook.com' =\n    SignInMethod.FACEBOOK;\n  /** Always set to {@link ProviderId}.FACEBOOK. */\n  static readonly PROVIDER_ID: 'facebook.com' = ProviderId.FACEBOOK;\n\n  constructor() {\n    super(ProviderId.FACEBOOK);\n  }\n\n  /**\n   * Creates a credential for Facebook.\n   *\n   * @example\n   * ```javascript\n   * // `event` from the Facebook auth.authResponseChange callback.\n   * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param accessToken - Facebook access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: FacebookAuthProvider.PROVIDER_ID,\n      signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GoogleAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Google Access Token.\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GoogleAuthProvider();\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Google Access Token.\n * const credential = GoogleAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class GoogleAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GOOGLE. */\n  static readonly GOOGLE_SIGN_IN_METHOD: 'google.com' = SignInMethod.GOOGLE;\n  /** Always set to {@link ProviderId}.GOOGLE. */\n  static readonly PROVIDER_ID: 'google.com' = ProviderId.GOOGLE;\n\n  constructor() {\n    super(ProviderId.GOOGLE);\n    this.addScope('profile');\n  }\n\n  /**\n   * Creates a credential for Google. At least one of ID token and access token is required.\n   *\n   * @example\n   * ```javascript\n   * // \\`googleUser\\` from the onsuccess Google Sign In callback.\n   * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param idToken - Google ID token.\n   * @param accessToken - Google access token.\n   */\n  static credential(\n    idToken?: string | null,\n    accessToken?: string | null\n  ): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GoogleAuthProvider.PROVIDER_ID,\n      signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n      idToken,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { oauthIdToken, oauthAccessToken } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthIdToken && !oauthAccessToken) {\n      // This could be an oauth 1 credential or a phone credential\n      return null;\n    }\n\n    try {\n      return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\n *\n * @remarks\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\n * the {@link signInWithPopup} handler:\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GithubAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('repo');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Github Access Token.\n *   const credential = GithubAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GithubAuthProvider();\n * provider.addScope('repo');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Github Access Token.\n * const credential = GithubAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class GithubAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GITHUB. */\n  static readonly GITHUB_SIGN_IN_METHOD: 'github.com' = SignInMethod.GITHUB;\n  /** Always set to {@link ProviderId}.GITHUB. */\n  static readonly PROVIDER_ID: 'github.com' = ProviderId.GITHUB;\n\n  constructor() {\n    super(ProviderId.GITHUB);\n  }\n\n  /**\n   * Creates a credential for Github.\n   *\n   * @param accessToken - Github access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GithubAuthProvider.PROVIDER_ID,\n      signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents the SAML credentials returned by an {@link SAMLAuthProvider}.\n *\n * @public\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\n/**\n * @public\n */\nexport class SAMLAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    providerId: string,\n    private readonly pendingToken: string\n  ) {\n    super(providerId, providerId);\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      signInMethod: this.signInMethod,\n      providerId: this.providerId,\n      pendingToken: this.pendingToken\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): SAMLAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, pendingToken }: Record<string, string> =\n      obj;\n    if (\n      !providerId ||\n      !signInMethod ||\n      !pendingToken ||\n      providerId !== signInMethod\n    ) {\n      return null;\n    }\n\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  /**\n   * Helper static method to avoid exposing the constructor to end users.\n   *\n   * @internal\n   */\n  static _create(providerId: string, pendingToken: string): SAMLAuthCredential {\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    return {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true,\n      pendingToken: this.pendingToken\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Twitter LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new TwitterAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Twitter Access Token and Secret.\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n *   const secret = credential.secret;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new TwitterAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Twitter Access Token and Secret.\n * const credential = TwitterAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * const secret = credential.secret;\n * ```\n *\n * @public\n */\nexport class TwitterAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.TWITTER. */\n  static readonly TWITTER_SIGN_IN_METHOD: 'twitter.com' = SignInMethod.TWITTER;\n  /** Always set to {@link ProviderId}.TWITTER. */\n  static readonly PROVIDER_ID: 'twitter.com' = ProviderId.TWITTER;\n\n  constructor() {\n    super(ProviderId.TWITTER);\n  }\n\n  /**\n   * Creates a credential for Twitter.\n   *\n   * @param token - Twitter access token.\n   * @param secret - Twitter secret.\n   */\n  static credential(token: string, secret: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: TwitterAuthProvider.PROVIDER_ID,\n      signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n      oauthToken: token,\n      oauthTokenSecret: secret\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { oauthAccessToken, oauthTokenSecret } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthAccessToken || !oauthTokenSecret) {\n      return null;\n    }\n\n    try {\n      return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignUpRequest {\n  idToken?: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n  tenantId?: string;\n  captchaResponse?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface SignUpResponse extends IdTokenResponse {\n  displayName?: string;\n  email?: string;\n}\n\nexport async function signUp(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performSignInRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { UserImpl } from './user_impl';\nimport { AuthInternal } from '../../model/auth';\nimport { OperationType, ProviderId } from '../../model/enums';\n\ninterface UserCredentialParams {\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse?: PhoneOrOauthTokenResponse;\n  readonly operationType: OperationType;\n}\n\nexport class UserCredentialImpl\n  implements UserCredentialInternal, UserCredentialParams\n{\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\n  readonly operationType: OperationType;\n\n  constructor(params: UserCredentialParams) {\n    this.user = params.user;\n    this.providerId = params.providerId;\n    this._tokenResponse = params._tokenResponse;\n    this.operationType = params.operationType;\n  }\n\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    operationType: OperationType,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserCredentialInternal> {\n    const user = await UserImpl._fromIdTokenResponse(\n      auth,\n      idTokenResponse,\n      isAnonymous\n    );\n    const providerId = providerIdForResponse(idTokenResponse);\n    const userCred = new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: idTokenResponse,\n      operationType\n    });\n    return userCred;\n  }\n\n  static async _forOperation(\n    user: UserInternal,\n    operationType: OperationType,\n    response: PhoneOrOauthTokenResponse\n  ): Promise<UserCredentialImpl> {\n    await user._updateTokensIfNecessary(response, /* reload */ true);\n    const providerId = providerIdForResponse(response);\n    return new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: response,\n      operationType\n    });\n  }\n}\n\nfunction providerIdForResponse(\n  response: IdTokenResponse\n): ProviderId | string | null {\n  if (response.providerId) {\n    return response.providerId;\n  }\n\n  if ('phoneNumber' in response) {\n    return ProviderId.PHONE;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { UserInternal } from '../../model/user';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\n\n/**\n * Asynchronously signs in as an anonymous user.\n *\n * @remarks\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\n * new anonymous user identity will be created and returned.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport async function signInAnonymously(auth: Auth): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  await authInternal._initializationPromise;\n  if (authInternal.currentUser?.isAnonymous) {\n    // If an anonymous user is already signed in, no need to sign them in again.\n    return new UserCredentialImpl({\n      user: authInternal.currentUser as UserInternal,\n      providerId: null,\n      operationType: OperationType.SIGN_IN\n    });\n  }\n  const response = await signUp(authInternal, {\n    returnSecureToken: true\n  });\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response,\n    true\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n  return userCredential;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MultiFactorError as MultiFactorErrorPublic } from '../model/public_types';\nimport { FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../model/auth';\nimport { IdTokenResponse } from '../model/id_token';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserInternal } from '../model/user';\nimport { AuthCredential } from '../core/credentials';\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { OperationType } from '../model/enums';\n\nexport type MultiFactorErrorData = MultiFactorErrorPublic['customData'] & {\n  _serverResponse: IdTokenMfaResponse;\n};\n\nexport class MultiFactorError\n  extends FirebaseError\n  implements MultiFactorErrorPublic\n{\n  readonly customData: MultiFactorErrorData;\n\n  private constructor(\n    auth: AuthInternal,\n    error: FirebaseError,\n    readonly operationType: OperationType,\n    readonly user?: UserInternal\n  ) {\n    super(error.code, error.message);\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, MultiFactorError.prototype);\n    this.customData = {\n      appName: auth.name,\n      tenantId: auth.tenantId ?? undefined,\n      _serverResponse: error.customData!._serverResponse as IdTokenMfaResponse,\n      operationType\n    };\n  }\n\n  static _fromErrorAndOperation(\n    auth: AuthInternal,\n    error: FirebaseError,\n    operationType: OperationType,\n    user?: UserInternal\n  ): MultiFactorError {\n    return new MultiFactorError(auth, error, operationType, user);\n  }\n}\n\nexport function _processCredentialSavingMfaContextIfNecessary(\n  auth: AuthInternal,\n  operationType: OperationType,\n  credential: AuthCredential,\n  user?: UserInternal\n): Promise<IdTokenResponse> {\n  const idTokenProvider =\n    operationType === OperationType.REAUTHENTICATE\n      ? credential._getReauthenticationResolver(auth)\n      : credential._getIdTokenResponse(auth);\n\n  return idTokenProvider.catch(error => {\n    if (error.code === `auth/${AuthErrorCode.MFA_REQUIRED}`) {\n      throw MultiFactorError._fromErrorAndOperation(\n        auth,\n        error,\n        operationType,\n        user\n      );\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport { deleteLinkedAccounts } from '../../api/account_management/account';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { providerDataAsNames } from '../util/providers';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { _reloadWithoutSaving } from './reload';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType, ProviderId } from '../../model/enums';\n\n/**\n * Unlinks a provider from a user account.\n *\n * @param user - The user.\n * @param providerId - The provider to unlink.\n *\n * @public\n */\nexport async function unlink(user: User, providerId: string): Promise<User> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(true, userInternal, providerId);\n  const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\n    idToken: await userInternal.getIdToken(),\n    deleteProvider: [providerId]\n  });\n\n  const providersLeft = providerDataAsNames(providerUserInfo || []);\n\n  userInternal.providerData = userInternal.providerData.filter(pd =>\n    providersLeft.has(pd.providerId)\n  );\n  if (!providersLeft.has(ProviderId.PHONE)) {\n    userInternal.phoneNumber = null;\n  }\n\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  return userInternal;\n}\n\nexport async function _link(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialInternal> {\n  const response = await _logoutIfInvalidated(\n    user,\n    credential._linkToIdToken(user.auth, await user.getIdToken()),\n    bypassAuthState\n  );\n  return UserCredentialImpl._forOperation(user, OperationType.LINK, response);\n}\n\nexport async function _assertLinkedStatus(\n  expected: boolean,\n  user: UserInternal,\n  provider: string\n): Promise<void> {\n  await _reloadWithoutSaving(user);\n  const providerIds = providerDataAsNames(user.providerData);\n\n  const code =\n    expected === false\n      ? AuthErrorCode.PROVIDER_ALREADY_LINKED\n      : AuthErrorCode.NO_SUCH_PROVIDER;\n  _assert(providerIds.has(provider) === expected, user.auth, code);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { OperationType } from '../../model/enums';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert, _fail } from '../util/assert';\nimport { _parseToken } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserCredentialImpl } from './user_credential_impl';\n\nexport async function _reauthenticate(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialImpl> {\n  const { auth } = user;\n  const operationType = OperationType.REAUTHENTICATE;\n\n  try {\n    const response = await _logoutIfInvalidated(\n      user,\n      _processCredentialSavingMfaContextIfNecessary(\n        auth,\n        operationType,\n        credential,\n        user\n      ),\n      bypassAuthState\n    );\n    _assert(response.idToken, auth, AuthErrorCode.INTERNAL_ERROR);\n    const parsed = _parseToken(response.idToken);\n    _assert(parsed, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const { sub: localId } = parsed;\n    _assert(user.uid === localId, auth, AuthErrorCode.USER_MISMATCH);\n\n    return UserCredentialImpl._forOperation(user, operationType, response);\n  } catch (e) {\n    // Convert user deleted error into user mismatch\n    if ((e as FirebaseError)?.code === `auth/${AuthErrorCode.USER_DELETED}`) {\n      _fail(auth, AuthErrorCode.USER_MISMATCH);\n    }\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential, Auth, User } from '../../model/public_types';\n\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _assertLinkedStatus, _link } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\n\nexport async function _signInWithCredential(\n  auth: AuthInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredential> {\n  const operationType = OperationType.SIGN_IN;\n  const response = await _processCredentialSavingMfaContextIfNecessary(\n    auth,\n    operationType,\n    credential\n  );\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    auth,\n    operationType,\n    response\n  );\n\n  if (!bypassAuthState) {\n    await auth._updateCurrentUser(userCredential.user);\n  }\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param auth - The {@link Auth} instance.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function signInWithCredential(\n  auth: Auth,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _signInWithCredential(_castAuth(auth), credential);\n}\n\n/**\n * Links the user account with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function linkWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n\n  await _assertLinkedStatus(false, userInternal, credential.providerId);\n\n  return _link(userInternal, credential);\n}\n\n/**\n * Re-authenticates a user using a fresh credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error\n * or a `TOKEN_EXPIRED` error.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function reauthenticateWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _reauthenticate(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\nimport {\n  Auth,\n  NextOrObserver,\n  Persistence,\n  User,\n  CompleteFn,\n  ErrorFn,\n  Unsubscribe,\n  PasswordValidationStatus\n} from '../model/public_types';\nimport { _initializeRecaptchaConfig } from '../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { _castAuth } from '../core/auth/auth_impl';\n\nexport {\n  debugErrorMap,\n  prodErrorMap,\n  AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as AuthErrorCodes\n} from './errors';\n\n// Non-optional auth methods.\n/**\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\n * `Auth` session and applies this type of persistence for future sign-in requests, including\n * sign-in with redirect requests.\n *\n * @remarks\n * This makes it easy for a user signing in to specify whether their session should be\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\n * that are shared by other users or have sensitive data.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * setPersistence(auth, browserSessionPersistence);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param persistence - The {@link Persistence} to use.\n * @returns A `Promise` that resolves once the persistence change has completed\n *\n * @public\n */\nexport function setPersistence(\n  auth: Auth,\n  persistence: Persistence\n): Promise<void> {\n  return getModularInstance(auth).setPersistence(persistence);\n}\n\n/**\n * Loads the reCAPTCHA configuration into the `Auth` instance.\n *\n * @remarks\n * This will load the reCAPTCHA config, which indicates whether the reCAPTCHA\n * verification flow should be triggered for each auth provider, into the\n * current Auth session.\n *\n * If initializeRecaptchaConfig() is not invoked, the auth flow will always start\n * without reCAPTCHA verification. If the provider is configured to require reCAPTCHA\n * verification, the SDK will transparently load the reCAPTCHA config and restart the\n * auth flows.\n *\n * Thus, by calling this optional method, you will reduce the latency of future auth flows.\n * Loading the reCAPTCHA config early will also enhance the signal collected by reCAPTCHA.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * initializeRecaptchaConfig(auth);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function initializeRecaptchaConfig(auth: Auth): Promise<void> {\n  return _initializeRecaptchaConfig(auth);\n}\n\n/**\n * Validates the password against the password policy configured for the project or tenant.\n *\n * @remarks\n * If no tenant ID is set on the `Auth` instance, then this method will use the password\n * policy configured for the project. Otherwise, this method will use the policy configured\n * for the tenant. If a password policy has not been configured, then the default policy\n * configured for all projects will be used.\n *\n * If an auth flow fails because a submitted password does not meet the password policy\n * requirements and this method has previously been called, then this method will use the\n * most recent policy available when called again.\n *\n * @example\n * ```javascript\n * validatePassword(auth, 'some-password');\n * ```\n *\n * @param auth The {@link Auth} instance.\n * @param password The password to validate.\n *\n * @public\n */\nexport async function validatePassword(\n  auth: Auth,\n  password: string\n): Promise<PasswordValidationStatus> {\n  const authInternal = _castAuth(auth);\n  return authInternal.validatePassword(password);\n}\n\n/**\n * Adds an observer for changes to the signed-in user's ID token.\n *\n * @remarks\n * This includes sign-in, sign-out, and token refresh events.\n * This will not be triggered automatically upon ID token expiration. Use {@link User.getIdToken} to refresh the ID token.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onIdTokenChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onIdTokenChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Adds a blocking callback that runs before an auth state change\n * sets a new user.\n *\n * @param auth - The {@link Auth} instance.\n * @param callback - callback triggered before new user value is set.\n *   If this throws, it blocks the user from being set.\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\n *   callback throws, allowing you to undo any side effects.\n */\nexport function beforeAuthStateChanged(\n  auth: Auth,\n  callback: (user: User | null) => void | Promise<void>,\n  onAbort?: () => void\n): Unsubscribe {\n  return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n}\n/**\n * Adds an observer for changes to the user's sign-in state.\n *\n * @remarks\n * To keep the old behavior, see {@link onIdTokenChanged}.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onAuthStateChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onAuthStateChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Sets the current language to the default device/browser preference.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function useDeviceLanguage(auth: Auth): void {\n  getModularInstance(auth).useDeviceLanguage();\n}\n/**\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\n * {@link Auth} instance.\n *\n * @remarks\n * A new instance copy of the user provided will be made and set as currentUser.\n *\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\n * like other sign in methods.\n *\n * The operation fails with an error if the user to be updated belongs to a different Firebase\n * project.\n *\n * @param auth - The {@link Auth} instance.\n * @param user - The new {@link User}.\n *\n * @public\n */\nexport function updateCurrentUser(\n  auth: Auth,\n  user: User | null\n): Promise<void> {\n  return getModularInstance(auth).updateCurrentUser(user);\n}\n/**\n * Signs out the current user.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function signOut(auth: Auth): Promise<void> {\n  return getModularInstance(auth).signOut();\n}\n\n/**\n * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n *\n * @param auth - The {@link Auth} instance.\n * @param token - The Apple OAuth access token.\n *\n * @public\n */\nexport function revokeAccessToken(auth: Auth, token: string): Promise<void> {\n  const authInternal = _castAuth(auth);\n  return authInternal.revokeAccessToken(token);\n}\n\nexport { initializeAuth } from './auth/initialize';\nexport { connectAuthEmulator } from './auth/emulator';\n\n// credentials\nexport { AuthCredential } from './credentials';\nexport { EmailAuthCredential } from './credentials/email';\nexport { OAuthCredential } from './credentials/oauth';\nexport { PhoneAuthCredential } from './credentials/phone';\n\n// persistence\nexport { inMemoryPersistence } from './persistence/in_memory';\n\n// providers\nexport { EmailAuthProvider } from './providers/email';\nexport { FacebookAuthProvider } from './providers/facebook';\nexport { CustomParameters } from './providers/federated';\nexport { GoogleAuthProvider } from './providers/google';\nexport { GithubAuthProvider } from './providers/github';\nexport { OAuthProvider, OAuthCredentialOptions } from './providers/oauth';\nexport { SAMLAuthProvider } from './providers/saml';\nexport { TwitterAuthProvider } from './providers/twitter';\n\n// strategies\nexport { signInAnonymously } from './strategies/anonymous';\nexport {\n  signInWithCredential,\n  linkWithCredential,\n  reauthenticateWithCredential\n} from './strategies/credential';\nexport { signInWithCustomToken } from './strategies/custom_token';\nexport {\n  sendPasswordResetEmail,\n  confirmPasswordReset,\n  applyActionCode,\n  checkActionCode,\n  verifyPasswordResetCode,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from './strategies/email_and_password';\nexport {\n  sendSignInLinkToEmail,\n  isSignInWithEmailLink,\n  signInWithEmailLink\n} from './strategies/email_link';\nexport {\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  verifyBeforeUpdateEmail\n} from './strategies/email';\n\n// core\nexport { ActionCodeURL, parseActionCodeURL } from './action_code_url';\n\n// user\nexport {\n  updateProfile,\n  updateEmail,\n  updatePassword\n} from './user/account_info';\nexport { getIdToken, getIdTokenResult } from './user/id_token_result';\nexport { unlink } from './user/link_unlink';\nexport { getAdditionalUserInfo } from './user/additional_user_info';\n\n// Non-optional user methods.\nexport { reload } from './user/reload';\n/**\n * Deletes and signs out the user.\n *\n * @remarks\n * Important: this is a security-sensitive operation that requires the user to have recently\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function deleteUser(user: User): Promise<void> {\n  return getModularInstance(user).delete();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { SignInWithPhoneNumberRequest } from '../authentication/sms';\nimport { FinalizeMfaResponse } from '../authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\n\n/**\n * MFA Info as returned by the API.\n */\ninterface BaseMfaEnrollment {\n  mfaEnrollmentId: string;\n  enrolledAt: number;\n  displayName?: string;\n}\n\n/**\n * An MFA provided by SMS verification.\n */\nexport interface PhoneMfaEnrollment extends BaseMfaEnrollment {\n  phoneInfo: string;\n}\n\n/**\n * An MFA provided by TOTP (Time-based One Time Password).\n */\nexport interface TotpMfaEnrollment extends BaseMfaEnrollment {}\n\n/**\n * MfaEnrollment can be any subtype of BaseMfaEnrollment, currently only PhoneMfaEnrollment and TotpMfaEnrollment are supported.\n */\nexport type MfaEnrollment = PhoneMfaEnrollment | TotpMfaEnrollment;\n\nexport interface StartPhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneEnrollmentInfo: {\n    phoneNumber: string;\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaEnrollmentResponse {\n  phoneSessionInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: StartPhoneMfaEnrollmentRequest\n): Promise<StartPhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartPhoneMfaEnrollmentRequest,\n    StartPhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizePhoneMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: FinalizePhoneMfaEnrollmentRequest\n): Promise<FinalizePhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaEnrollmentRequest,\n    FinalizePhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface StartTotpMfaEnrollmentRequest {\n  idToken: string;\n  totpEnrollmentInfo: {};\n  tenantId?: string;\n}\n\nexport interface StartTotpMfaEnrollmentResponse {\n  totpSessionInfo: {\n    sharedSecretKey: string;\n    verificationCodeLength: number;\n    hashingAlgorithm: string;\n    periodSec: number;\n    sessionInfo: string;\n    finalizeEnrollmentTime: number;\n  };\n}\n\nexport function startEnrollTotpMfa(\n  auth: AuthInternal,\n  request: StartTotpMfaEnrollmentRequest\n): Promise<StartTotpMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartTotpMfaEnrollmentRequest,\n    StartTotpMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface TotpVerificationInfo {\n  sessionInfo: string;\n  verificationCode: string;\n}\nexport interface FinalizeTotpMfaEnrollmentRequest {\n  idToken: string;\n  totpVerificationInfo: TotpVerificationInfo;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizeTotpMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollTotpMfa(\n  auth: AuthInternal,\n  request: FinalizeTotpMfaEnrollmentRequest\n): Promise<FinalizeTotpMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizeTotpMfaEnrollmentRequest,\n    FinalizeTotpMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface WithdrawMfaRequest {\n  idToken: string;\n  mfaEnrollmentId: string;\n  tenantId?: string;\n}\n\nexport interface WithdrawMfaResponse extends FinalizeMfaResponse {}\n\nexport function withdrawMfa(\n  auth: AuthInternal,\n  request: WithdrawMfaRequest\n): Promise<WithdrawMfaResponse> {\n  return _performApiRequest<WithdrawMfaRequest, WithdrawMfaResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.WITHDRAW_MFA,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MultiFactorAssertion,\n  MultiFactorInfo,\n  MultiFactorSession,\n  MultiFactorUser,\n  User\n} from '../model/public_types';\n\nimport { withdrawMfa } from '../api/account_management/mfa';\nimport { _logoutIfInvalidated } from '../core/user/invalidation';\nimport { UserInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\n\nexport class MultiFactorUserImpl implements MultiFactorUser {\n  enrolledFactors: MultiFactorInfo[] = [];\n\n  private constructor(readonly user: UserInternal) {\n    user._onReload(userInfo => {\n      if (userInfo.mfaInfo) {\n        this.enrolledFactors = userInfo.mfaInfo.map(enrollment =>\n          MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment)\n        );\n      }\n    });\n  }\n\n  static _fromUser(user: UserInternal): MultiFactorUserImpl {\n    return new MultiFactorUserImpl(user);\n  }\n\n  async getSession(): Promise<MultiFactorSession> {\n    return MultiFactorSessionImpl._fromIdtoken(\n      await this.user.getIdToken(),\n      this.user\n    );\n  }\n\n  async enroll(\n    assertionExtern: MultiFactorAssertion,\n    displayName?: string | null\n  ): Promise<void> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    const session = (await this.getSession()) as MultiFactorSessionImpl;\n    const finalizeMfaResponse = await _logoutIfInvalidated(\n      this.user,\n      assertion._process(this.user.auth, session, displayName)\n    );\n    // New tokens will be issued after enrollment of the new second factors.\n    // They need to be updated on the user.\n    await this.user._updateTokensIfNecessary(finalizeMfaResponse);\n    // The user needs to be reloaded to get the new multi-factor information\n    // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n    // will be updated.\n    return this.user.reload();\n  }\n\n  async unenroll(infoOrUid: MultiFactorInfo | string): Promise<void> {\n    const mfaEnrollmentId =\n      typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n    const idToken = await this.user.getIdToken();\n    try {\n      const idTokenResponse = await _logoutIfInvalidated(\n        this.user,\n        withdrawMfa(this.user.auth, {\n          idToken,\n          mfaEnrollmentId\n        })\n      );\n      // Remove the second factor from the user's list.\n      this.enrolledFactors = this.enrolledFactors.filter(\n        ({ uid }) => uid !== mfaEnrollmentId\n      );\n      // Depending on whether the backend decided to revoke the user's session,\n      // the tokenResponse may be empty. If the tokens were not updated (and they\n      // are now invalid), reloading the user will discover this and invalidate\n      // the user's state accordingly.\n      await this.user._updateTokensIfNecessary(idTokenResponse);\n      await this.user.reload();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nconst multiFactorUserCache = new WeakMap<User, MultiFactorUser>();\n\n/**\n * The {@link MultiFactorUser} corresponding to the user.\n *\n * @remarks\n * This is used to access all multi-factor properties and operations related to the user.\n *\n * @param user - The user.\n *\n * @public\n */\nexport function multiFactor(user: User): MultiFactorUser {\n  const userModular = getModularInstance(user);\n  if (!multiFactorUserCache.has(userModular)) {\n    multiFactorUserCache.set(\n      userModular,\n      MultiFactorUserImpl._fromUser(userModular as UserInternal)\n    );\n  }\n  return multiFactorUserCache.get(userModular)!;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Persistence } from '../../model/public_types';\n\nexport const enum PersistenceType {\n  SESSION = 'SESSION',\n  LOCAL = 'LOCAL',\n  NONE = 'NONE'\n}\n\nexport type PersistedBlob = Record<string, unknown>;\n\nexport interface Instantiator<T> {\n  (blob: PersistedBlob): T;\n}\n\nexport type PersistenceValue = PersistedBlob | string;\n\nexport const STORAGE_AVAILABLE_KEY = '__sak';\n\nexport interface StorageEventListener {\n  (value: PersistenceValue | null): void;\n}\n\nexport interface PersistenceInternal extends Persistence {\n  type: PersistenceType;\n  _isAvailable(): Promise<boolean>;\n  _set(key: string, value: PersistenceValue): Promise<void>;\n  _get<T extends PersistenceValue>(key: string): Promise<T | null>;\n  _remove(key: string): Promise<void>;\n  _addListener(key: string, listener: StorageEventListener): void;\n  _removeListener(key: string, listener: StorageEventListener): void;\n  // Should this persistence allow migration up the chosen hierarchy?\n  _shouldAllowMigration?: boolean;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PersistenceValue,\n  STORAGE_AVAILABLE_KEY,\n  PersistenceType\n} from '../../core/persistence';\n\n// There are two different browser persistence types: local and session.\n// Both have the same implementation but use a different underlying storage\n// object.\n\nexport abstract class BrowserPersistenceClass {\n  protected constructor(\n    protected readonly storageRetriever: () => Storage,\n    readonly type: PersistenceType\n  ) {}\n\n  _isAvailable(): Promise<boolean> {\n    try {\n      if (!this.storage) {\n        return Promise.resolve(false);\n      }\n      this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\n      this.storage.removeItem(STORAGE_AVAILABLE_KEY);\n      return Promise.resolve(true);\n    } catch {\n      return Promise.resolve(false);\n    }\n  }\n\n  _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage.setItem(key, JSON.stringify(value));\n    return Promise.resolve();\n  }\n\n  _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const json = this.storage.getItem(key);\n    return Promise.resolve(json ? JSON.parse(json) : null);\n  }\n\n  _remove(key: string): Promise<void> {\n    this.storage.removeItem(key);\n    return Promise.resolve();\n  }\n\n  protected get storage(): Storage {\n    return this.storageRetriever();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport { getUA } from '@firebase/util';\nimport {\n  _isSafari,\n  _isIOS,\n  _isIframe,\n  _isMobileBrowser,\n  _isIE10\n} from '../../core/util/browser';\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nfunction _iframeCannotSyncWebStorage(): boolean {\n  const ua = getUA();\n  return _isSafari(ua) || _isIOS(ua);\n}\n\n// The polling period in case events are not supported\nexport const _POLLING_INTERVAL_MS = 1000;\n\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\nclass BrowserLocalPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'LOCAL' = 'LOCAL';\n\n  constructor() {\n    super(() => window.localStorage, PersistenceType.LOCAL);\n  }\n\n  private readonly boundEventHandler = (\n    event: StorageEvent,\n    poll?: boolean\n  ): void => this.onStorageEvent(event, poll);\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, string | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n\n  // Safari or iOS browser and embedded in an iframe.\n  private readonly safariLocalStorageNotSynced =\n    _iframeCannotSyncWebStorage() && _isIframe();\n  // Whether to use polling instead of depending on window events\n  private readonly fallbackToPolling = _isMobileBrowser();\n  readonly _shouldAllowMigration = true;\n\n  private forAllChangedKeys(\n    cb: (key: string, oldValue: string | null, newValue: string | null) => void\n  ): void {\n    // Check all keys with listeners on them.\n    for (const key of Object.keys(this.listeners)) {\n      // Get value from localStorage.\n      const newValue = this.storage.getItem(key);\n      const oldValue = this.localCache[key];\n      // If local map value does not match, trigger listener with storage event.\n      // Differentiate this simulated event from the real storage event.\n      if (newValue !== oldValue) {\n        cb(key, oldValue, newValue);\n      }\n    }\n  }\n\n  private onStorageEvent(event: StorageEvent, poll = false): void {\n    // Key would be null in some situations, like when localStorage is cleared\n    if (!event.key) {\n      this.forAllChangedKeys(\n        (key: string, _oldValue: string | null, newValue: string | null) => {\n          this.notifyListeners(key, newValue);\n        }\n      );\n      return;\n    }\n\n    const key = event.key;\n\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    if (poll) {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.detachListener();\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopPolling();\n    }\n\n    // Safari embedded iframe. Storage event will trigger with the delta\n    // changes but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced) {\n      // Get current iframe page value.\n      const storedValue = this.storage.getItem(key);\n      // Value not synchronized, synchronize manually.\n      if (event.newValue !== storedValue) {\n        if (event.newValue !== null) {\n          // Value changed from current value.\n          this.storage.setItem(key, event.newValue);\n        } else {\n          // Current value deleted.\n          this.storage.removeItem(key);\n        }\n      } else if (this.localCache[key] === event.newValue && !poll) {\n        // Already detected and processed, do not trigger listeners again.\n        return;\n      }\n    }\n\n    const triggerListeners = (): void => {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      const storedValue = this.storage.getItem(key);\n      if (!poll && this.localCache[key] === storedValue) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      this.notifyListeners(key, storedValue);\n    };\n\n    const storedValue = this.storage.getItem(key);\n    if (\n      _isIE10() &&\n      storedValue !== event.newValue &&\n      event.newValue !== event.oldValue\n    ) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures\n      // this recovers from that situation.\n      setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  }\n\n  private notifyListeners(key: string, value: string | null): void {\n    this.localCache[key] = value;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(value ? JSON.parse(value) : value);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(() => {\n      this.forAllChangedKeys(\n        (key: string, oldValue: string | null, newValue: string | null) => {\n          this.onStorageEvent(\n            new StorageEvent('storage', {\n              key,\n              oldValue,\n              newValue\n            }),\n            /* poll */ true\n          );\n        }\n      );\n    }, _POLLING_INTERVAL_MS);\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  private attachListener(): void {\n    window.addEventListener('storage', this.boundEventHandler);\n  }\n\n  private detachListener(): void {\n    window.removeEventListener('storage', this.boundEventHandler);\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      // Whether browser can detect storage event when it had already been pushed to the background.\n      // This may happen in some mobile browsers. A localStorage change in the foreground window\n      // will not be detected in the background window via the storage event.\n      // This was detected in iOS 7.x mobile browsers\n      if (this.fallbackToPolling) {\n        this.startPolling();\n      } else {\n        this.attachListener();\n      }\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      this.localCache[key] = this.storage.getItem(key);\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.detachListener();\n      this.stopPolling();\n    }\n  }\n\n  // Update local cache on base operations:\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    await super._set(key, value);\n    this.localCache[key] = JSON.stringify(value);\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = await super._get<T>(key);\n    this.localCache[key] = JSON.stringify(value);\n    return value;\n  }\n\n  async _remove(key: string): Promise<void> {\n    await super._remove(key);\n    delete this.localCache[key];\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `localStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserLocalPersistence: Persistence = BrowserLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nclass BrowserSessionPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'SESSION' = 'SESSION';\n\n  constructor() {\n    super(() => window.sessionStorage, PersistenceType.SESSION);\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of `SESSION` using `sessionStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserSessionPersistence: Persistence = BrowserSessionPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** TODO: remove this once tslib has a polyfill for Promise.allSettled */\ninterface PromiseFulfilledResult<T> {\n  fulfilled: true;\n  value: T;\n}\n\ninterface PromiseRejectedResult {\n  fulfilled: false;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason: any;\n}\n\nexport type PromiseSettledResult<T> =\n  | PromiseFulfilledResult<T>\n  | PromiseRejectedResult;\n\n/**\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\n *\n * @param promises - Array of promises to wait on.\n */\nexport function _allSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<Array<PromiseSettledResult<T>>> {\n  return Promise.all(\n    promises.map(async promise => {\n      try {\n        const value = await promise;\n        return {\n          fulfilled: true,\n          value\n        } as PromiseFulfilledResult<T>;\n      } catch (reason) {\n        return {\n          fulfilled: false,\n          reason\n        } as PromiseRejectedResult;\n      }\n    })\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ReceiverHandler,\n  _EventType,\n  _ReceiverResponse,\n  SenderMessageEvent,\n  _Status,\n  _SenderRequest\n} from './index';\nimport { _allSettled } from './promise';\n\n/**\n * Interface class for receiving messages.\n *\n */\nexport class Receiver {\n  private static readonly receivers: Receiver[] = [];\n  private readonly boundEventHandler: EventListener;\n\n  private readonly handlersMap: {\n    // Typescript doesn't have existential types :(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [eventType: string]: Set<ReceiverHandler<any, any>>;\n  } = {};\n\n  constructor(private readonly eventTarget: EventTarget) {\n    this.boundEventHandler = this.handleEvent.bind(this);\n  }\n\n  /**\n   * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\n   *\n   * @param eventTarget - An event target (such as window or self) through which the underlying\n   * messages will be received.\n   */\n  static _getInstance(eventTarget: EventTarget): Receiver {\n    // The results are stored in an array since objects can't be keys for other\n    // objects. In addition, setting a unique property on an event target as a\n    // hash map key may not be allowed due to CORS restrictions.\n    const existingInstance = this.receivers.find(receiver =>\n      receiver.isListeningto(eventTarget)\n    );\n    if (existingInstance) {\n      return existingInstance;\n    }\n    const newInstance = new Receiver(eventTarget);\n    this.receivers.push(newInstance);\n    return newInstance;\n  }\n\n  private isListeningto(eventTarget: EventTarget): boolean {\n    return this.eventTarget === eventTarget;\n  }\n\n  /**\n   * Fans out a MessageEvent to the appropriate listeners.\n   *\n   * @remarks\n   * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\n   * finished processing.\n   *\n   * @param event - The MessageEvent.\n   *\n   */\n  private async handleEvent<\n    T extends _ReceiverResponse,\n    S extends _SenderRequest\n  >(event: Event): Promise<void> {\n    const messageEvent = event as MessageEvent<SenderMessageEvent<S>>;\n    const { eventId, eventType, data } = messageEvent.data;\n\n    const handlers: Set<ReceiverHandler<T, S>> | undefined =\n      this.handlersMap[eventType];\n    if (!handlers?.size) {\n      return;\n    }\n\n    messageEvent.ports[0].postMessage({\n      status: _Status.ACK,\n      eventId,\n      eventType\n    });\n\n    const promises = Array.from(handlers).map(async handler =>\n      handler(messageEvent.origin, data)\n    );\n    const response = await _allSettled(promises);\n    messageEvent.ports[0].postMessage({\n      status: _Status.DONE,\n      eventId,\n      eventType,\n      response\n    });\n  }\n\n  /**\n   * Subscribe an event handler for a particular event.\n   *\n   * @param eventType - Event name to subscribe to.\n   * @param eventHandler - The event handler which should receive the events.\n   *\n   */\n  _subscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler: ReceiverHandler<T, S>\n  ): void {\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.addEventListener('message', this.boundEventHandler);\n    }\n\n    if (!this.handlersMap[eventType]) {\n      this.handlersMap[eventType] = new Set();\n    }\n\n    this.handlersMap[eventType].add(eventHandler);\n  }\n\n  /**\n   * Unsubscribe an event handler from a particular event.\n   *\n   * @param eventType - Event name to unsubscribe from.\n   * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\n   *\n   */\n  _unsubscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler?: ReceiverHandler<T, S>\n  ): void {\n    if (this.handlersMap[eventType] && eventHandler) {\n      this.handlersMap[eventType].delete(eventHandler);\n    }\n    if (!eventHandler || this.handlersMap[eventType].size === 0) {\n      delete this.handlersMap[eventType];\n    }\n\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.removeEventListener('message', this.boundEventHandler);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _generateEventId(prefix = '', digits = 10): string {\n  let random = '';\n  for (let i = 0; i < digits; i++) {\n    random += Math.floor(Math.random() * 10);\n  }\n  return prefix + random;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _generateEventId } from '../../core/util/event_id';\nimport {\n  _SenderRequest,\n  _EventType,\n  ReceiverMessageEvent,\n  _MessageError,\n  SenderMessageEvent,\n  _Status,\n  _ReceiverMessageResponse,\n  _ReceiverResponse,\n  _TimeoutDuration\n} from './index';\n\ninterface MessageHandler {\n  messageChannel: MessageChannel;\n  onMessage: EventListenerOrEventListenerObject;\n}\n\n/**\n * Interface for sending messages and waiting for a completion response.\n *\n */\nexport class Sender {\n  private readonly handlers = new Set<MessageHandler>();\n\n  constructor(private readonly target: ServiceWorker) {}\n\n  /**\n   * Unsubscribe the handler and remove it from our tracking Set.\n   *\n   * @param handler - The handler to unsubscribe.\n   */\n  private removeMessageHandler(handler: MessageHandler): void {\n    if (handler.messageChannel) {\n      handler.messageChannel.port1.removeEventListener(\n        'message',\n        handler.onMessage\n      );\n      handler.messageChannel.port1.close();\n    }\n    this.handlers.delete(handler);\n  }\n\n  /**\n   * Send a message to the Receiver located at {@link target}.\n   *\n   * @remarks\n   * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\n   * receiver has had a chance to fully process the event.\n   *\n   * @param eventType - Type of event to send.\n   * @param data - The payload of the event.\n   * @param timeout - Timeout for waiting on an ACK from the receiver.\n   *\n   * @returns An array of settled promises from all the handlers that were listening on the receiver.\n   */\n  async _send<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    data: S,\n    timeout = _TimeoutDuration.ACK\n  ): Promise<_ReceiverMessageResponse<T>> {\n    const messageChannel =\n      typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n    if (!messageChannel) {\n      throw new Error(_MessageError.CONNECTION_UNAVAILABLE);\n    }\n    // Node timers and browser timers return fundamentally different types.\n    // We don't actually care what the value is but TS won't accept unknown and\n    // we can't cast properly in both environments.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let completionTimer: any;\n    let handler: MessageHandler;\n    return new Promise<_ReceiverMessageResponse<T>>((resolve, reject) => {\n      const eventId = _generateEventId('', 20);\n      messageChannel.port1.start();\n      const ackTimer = setTimeout(() => {\n        reject(new Error(_MessageError.UNSUPPORTED_EVENT));\n      }, timeout);\n      handler = {\n        messageChannel,\n        onMessage(event: Event): void {\n          const messageEvent = event as MessageEvent<ReceiverMessageEvent<T>>;\n          if (messageEvent.data.eventId !== eventId) {\n            return;\n          }\n          switch (messageEvent.data.status) {\n            case _Status.ACK:\n              // The receiver should ACK first.\n              clearTimeout(ackTimer);\n              completionTimer = setTimeout(() => {\n                reject(new Error(_MessageError.TIMEOUT));\n              }, _TimeoutDuration.COMPLETION);\n              break;\n            case _Status.DONE:\n              // Once the receiver's handlers are finished we will get the results.\n              clearTimeout(completionTimer);\n              resolve(messageEvent.data.response);\n              break;\n            default:\n              clearTimeout(ackTimer);\n              clearTimeout(completionTimer);\n              reject(new Error(_MessageError.INVALID_RESPONSE));\n              break;\n          }\n        }\n      };\n      this.handlers.add(handler);\n      messageChannel.port1.addEventListener('message', handler.onMessage);\n      this.target.postMessage(\n        {\n          eventType,\n          eventId,\n          data\n        } as SenderMessageEvent<S>,\n        [messageChannel.port2]\n      );\n    }).finally(() => {\n      if (handler) {\n        this.removeMessageHandler(handler);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Recaptcha, GreCAPTCHATopLevel } from './recaptcha/recaptcha';\n\n/**\n * A specialized window type that melds the normal window type plus the\n * various bits we need. The three different blocks that are &'d together\n * cant be defined in the same block together.\n */\nexport type AuthWindow = {\n  // Standard window types\n  [T in keyof Window]: Window[T];\n} & {\n  // Any known / named properties we want to add\n  grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  ___jsl?: Record<string, any>;\n  gapi?: typeof gapi;\n} & {\n  // A final catch-all for callbacks (which will have random names) that\n  // we will stick on the window.\n  [callback: string]: (...args: unknown[]) => void;\n};\n\n/**\n * Lazy accessor for window, since the compat layer won't tree shake this out,\n * we need to make sure not to mess with window unless we have to\n */\nexport function _window(): AuthWindow {\n  return window as unknown as AuthWindow;\n}\n\nexport function _setWindowLocation(url: string): void {\n  _window().location.href = url;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _window } from '../auth_window';\n\nexport function _isWorker(): boolean {\n  return (\n    typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\n    typeof _window()['importScripts'] === 'function'\n  );\n}\n\nexport async function _getActiveServiceWorker(): Promise<ServiceWorker | null> {\n  if (!navigator?.serviceWorker) {\n    return null;\n  }\n  try {\n    const registration = await navigator.serviceWorker.ready;\n    return registration.active;\n  } catch {\n    return null;\n  }\n}\n\nexport function _getServiceWorkerController(): ServiceWorker | null {\n  return navigator?.serviceWorker?.controller || null;\n}\n\nexport function _getWorkerGlobalScope(): ServiceWorker | null {\n  return _isWorker() ? (self as unknown as ServiceWorker) : null;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\nimport {\n  PersistedBlob,\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener,\n  STORAGE_AVAILABLE_KEY\n} from '../../core/persistence/';\nimport {\n  _EventType,\n  _PingResponse,\n  KeyChangedResponse,\n  KeyChangedRequest,\n  PingRequest,\n  _TimeoutDuration\n} from '../messagechannel/index';\nimport { Receiver } from '../messagechannel/receiver';\nimport { Sender } from '../messagechannel/sender';\nimport {\n  _isWorker,\n  _getActiveServiceWorker,\n  _getServiceWorkerController,\n  _getWorkerGlobalScope\n} from '../util/worker';\n\nexport const DB_NAME = 'firebaseLocalStorageDb';\nconst DB_VERSION = 1;\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\nconst DB_DATA_KEYPATH = 'fbase_key';\n\ninterface DBObject {\n  [DB_DATA_KEYPATH]: string;\n  value: PersistedBlob;\n}\n\n/**\n * Promise wrapper for IDBRequest\n *\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\n *\n */\nclass DBPromise<T> {\n  constructor(private readonly request: IDBRequest) {}\n\n  toPromise(): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.request.addEventListener('success', () => {\n        resolve(this.request.result);\n      });\n      this.request.addEventListener('error', () => {\n        reject(this.request.error);\n      });\n    });\n  }\n}\n\nfunction getObjectStore(db: IDBDatabase, isReadWrite: boolean): IDBObjectStore {\n  return db\n    .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\n    .objectStore(DB_OBJECTSTORE_NAME);\n}\n\nexport async function _clearDatabase(db: IDBDatabase): Promise<void> {\n  const objectStore = getObjectStore(db, true);\n  return new DBPromise<void>(objectStore.clear()).toPromise();\n}\n\nexport function _deleteDatabase(): Promise<void> {\n  const request = indexedDB.deleteDatabase(DB_NAME);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport function _openDatabase(): Promise<IDBDatabase> {\n  const request = indexedDB.open(DB_NAME, DB_VERSION);\n  return new Promise((resolve, reject) => {\n    request.addEventListener('error', () => {\n      reject(request.error);\n    });\n\n    request.addEventListener('upgradeneeded', () => {\n      const db = request.result;\n\n      try {\n        db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    request.addEventListener('success', async () => {\n      const db: IDBDatabase = request.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n\n      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\n        // Need to close the database or else you get a `blocked` event\n        db.close();\n        await _deleteDatabase();\n        resolve(await _openDatabase());\n      } else {\n        resolve(db);\n      }\n    });\n  });\n}\n\nexport async function _putObject(\n  db: IDBDatabase,\n  key: string,\n  value: PersistenceValue | string\n): Promise<void> {\n  const request = getObjectStore(db, true).put({\n    [DB_DATA_KEYPATH]: key,\n    value\n  });\n  return new DBPromise<void>(request).toPromise();\n}\n\nasync function getObject(\n  db: IDBDatabase,\n  key: string\n): Promise<PersistedBlob | null> {\n  const request = getObjectStore(db, false).get(key);\n  const data = await new DBPromise<DBObject | undefined>(request).toPromise();\n  return data === undefined ? null : data.value;\n}\n\nexport function _deleteObject(db: IDBDatabase, key: string): Promise<void> {\n  const request = getObjectStore(db, true).delete(key);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport const _POLLING_INTERVAL_MS = 800;\nexport const _TRANSACTION_RETRY_COUNT = 3;\n\nclass IndexedDBLocalPersistence implements InternalPersistence {\n  static type: 'LOCAL' = 'LOCAL';\n\n  type = PersistenceType.LOCAL;\n  db?: IDBDatabase;\n  readonly _shouldAllowMigration = true;\n\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, PersistenceValue | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n  private pendingWrites = 0;\n\n  private receiver: Receiver | null = null;\n  private sender: Sender | null = null;\n  private serviceWorkerReceiverAvailable = false;\n  private activeServiceWorker: ServiceWorker | null = null;\n  // Visible for testing only\n  readonly _workerInitializationPromise: Promise<void>;\n\n  constructor() {\n    // Fire & forget the service worker registration as it may never resolve\n    this._workerInitializationPromise =\n      this.initializeServiceWorkerMessaging().then(\n        () => {},\n        () => {}\n      );\n  }\n\n  async _openDb(): Promise<IDBDatabase> {\n    if (this.db) {\n      return this.db;\n    }\n    this.db = await _openDatabase();\n    return this.db;\n  }\n\n  async _withRetries<T>(op: (db: IDBDatabase) => Promise<T>): Promise<T> {\n    let numAttempts = 0;\n\n    while (true) {\n      try {\n        const db = await this._openDb();\n        return await op(db);\n      } catch (e) {\n        if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\n          throw e;\n        }\n        if (this.db) {\n          this.db.close();\n          this.db = undefined;\n        }\n        // TODO: consider adding exponential backoff\n      }\n    }\n  }\n\n  /**\n   * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\n   * postMessage interface to send these events to the worker ourselves.\n   */\n  private async initializeServiceWorkerMessaging(): Promise<void> {\n    return _isWorker() ? this.initializeReceiver() : this.initializeSender();\n  }\n\n  /**\n   * As the worker we should listen to events from the main window.\n   */\n  private async initializeReceiver(): Promise<void> {\n    this.receiver = Receiver._getInstance(_getWorkerGlobalScope()!);\n    // Refresh from persistence if we receive a KeyChanged message.\n    this.receiver._subscribe(\n      _EventType.KEY_CHANGED,\n      async (_origin: string, data: KeyChangedRequest) => {\n        const keys = await this._poll();\n        return {\n          keyProcessed: keys.includes(data.key)\n        };\n      }\n    );\n    // Let the sender know that we are listening so they give us more timeout.\n    this.receiver._subscribe(\n      _EventType.PING,\n      async (_origin: string, _data: PingRequest) => {\n        return [_EventType.KEY_CHANGED];\n      }\n    );\n  }\n\n  /**\n   * As the main window, we should let the worker know when keys change (set and remove).\n   *\n   * @remarks\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\n   * may not resolve.\n   */\n  private async initializeSender(): Promise<void> {\n    // Check to see if there's an active service worker.\n    this.activeServiceWorker = await _getActiveServiceWorker();\n    if (!this.activeServiceWorker) {\n      return;\n    }\n    this.sender = new Sender(this.activeServiceWorker);\n    // Ping the service worker to check what events they can handle.\n    const results = await this.sender._send<_PingResponse, PingRequest>(\n      _EventType.PING,\n      {},\n      _TimeoutDuration.LONG_ACK\n    );\n    if (!results) {\n      return;\n    }\n    if (\n      results[0]?.fulfilled &&\n      results[0]?.value.includes(_EventType.KEY_CHANGED)\n    ) {\n      this.serviceWorkerReceiverAvailable = true;\n    }\n  }\n\n  /**\n   * Let the worker know about a changed key, the exact key doesn't technically matter since the\n   * worker will just trigger a full sync anyway.\n   *\n   * @remarks\n   * For now, we only support one service worker per page.\n   *\n   * @param key - Storage key which changed.\n   */\n  private async notifyServiceWorker(key: string): Promise<void> {\n    if (\n      !this.sender ||\n      !this.activeServiceWorker ||\n      _getServiceWorkerController() !== this.activeServiceWorker\n    ) {\n      return;\n    }\n    try {\n      await this.sender._send<KeyChangedResponse, KeyChangedRequest>(\n        _EventType.KEY_CHANGED,\n        { key },\n        // Use long timeout if receiver has previously responded to a ping from us.\n        this.serviceWorkerReceiverAvailable\n          ? _TimeoutDuration.LONG_ACK\n          : _TimeoutDuration.ACK\n      );\n    } catch {\n      // This is a best effort approach. Ignore errors.\n    }\n  }\n\n  async _isAvailable(): Promise<boolean> {\n    try {\n      if (!indexedDB) {\n        return false;\n      }\n      const db = await _openDatabase();\n      await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\n      await _deleteObject(db, STORAGE_AVAILABLE_KEY);\n      return true;\n    } catch {}\n    return false;\n  }\n\n  private async _withPendingWrite(write: () => Promise<void>): Promise<void> {\n    this.pendingWrites++;\n    try {\n      await write();\n    } finally {\n      this.pendingWrites--;\n    }\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _putObject(db, key, value));\n      this.localCache[key] = value;\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const obj = (await this._withRetries((db: IDBDatabase) =>\n      getObject(db, key)\n    )) as T;\n    this.localCache[key] = obj;\n    return obj;\n  }\n\n  async _remove(key: string): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _deleteObject(db, key));\n      delete this.localCache[key];\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  private async _poll(): Promise<string[]> {\n    // TODO: check if we need to fallback if getAll is not supported\n    const result = await this._withRetries((db: IDBDatabase) => {\n      const getAllRequest = getObjectStore(db, false).getAll();\n      return new DBPromise<DBObject[] | null>(getAllRequest).toPromise();\n    });\n\n    if (!result) {\n      return [];\n    }\n\n    // If we have pending writes in progress abort, we'll get picked up on the next poll\n    if (this.pendingWrites !== 0) {\n      return [];\n    }\n\n    const keys = [];\n    const keysInResult = new Set();\n    if (result.length !== 0) {\n      for (const { fbase_key: key, value } of result) {\n        keysInResult.add(key);\n        if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\n          this.notifyListeners(key, value as PersistenceValue);\n          keys.push(key);\n        }\n      }\n    }\n\n    for (const localKey of Object.keys(this.localCache)) {\n      if (this.localCache[localKey] && !keysInResult.has(localKey)) {\n        // Deleted\n        this.notifyListeners(localKey, null);\n        keys.push(localKey);\n      }\n    }\n    return keys;\n  }\n\n  private notifyListeners(\n    key: string,\n    newValue: PersistenceValue | null\n  ): void {\n    this.localCache[key] = newValue;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(newValue);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(\n      async () => this._poll(),\n      _POLLING_INTERVAL_MS\n    );\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      this.startPolling();\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      void this._get(key); // This can happen in the background async and we can return immediately.\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.stopPolling();\n    }\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `indexedDB`\n * for the underlying storage.\n *\n * @public\n */\nexport const indexedDBLocalPersistence: Persistence = IndexedDBLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from '../account_management/mfa';\nimport { SignInWithIdpResponse } from './idp';\nimport {\n  SignInWithPhoneNumberRequest,\n  SignInWithPhoneNumberResponse\n} from './sms';\n\nexport interface FinalizeMfaResponse {\n  idToken: string;\n  refreshToken: string;\n}\n\n/**\n * @internal\n */\nexport interface IdTokenMfaResponse extends IdTokenResponse {\n  mfaPendingCredential?: string;\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface StartPhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  mfaEnrollmentId: string;\n  phoneSignInInfo: {\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaSignInResponse {\n  phoneResponseInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startSignInPhoneMfa(\n  auth: Auth,\n  request: StartPhoneMfaSignInRequest\n): Promise<StartPhoneMfaSignInResponse> {\n  return _performApiRequest<\n    StartPhoneMfaSignInRequest,\n    StartPhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  tenantId?: string;\n}\n\n// TOTP MFA Sign in only has a finalize phase. Phone MFA has a start phase to initiate sending an\n// SMS and a finalize phase to complete sign in. With TOTP, the user already has the OTP in the\n// TOTP/Authenticator app.\nexport interface FinalizeTotpMfaSignInRequest {\n  mfaPendingCredential: string;\n  totpVerificationInfo: { verificationCode: string };\n  tenantId?: string;\n  mfaEnrollmentId: string;\n}\n\nexport interface FinalizePhoneMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport interface FinalizeTotpMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport function finalizeSignInPhoneMfa(\n  auth: Auth,\n  request: FinalizePhoneMfaSignInRequest\n): Promise<FinalizePhoneMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaSignInRequest,\n    FinalizePhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport function finalizeSignInTotpMfa(\n  auth: Auth,\n  request: FinalizeTotpMfaSignInRequest\n): Promise<FinalizeTotpMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizeTotpMfaSignInRequest,\n    FinalizeTotpMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport type PhoneOrOauthTokenResponse =\n  | SignInWithPhoneNumberResponse\n  | SignInWithIdpResponse\n  | IdTokenResponse;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as jsHelpers from '../load_js';\nimport { Recaptcha, isV2 } from './recaptcha';\nimport { MockReCaptcha } from './recaptcha_mock';\n\n// ReCaptcha will load using the same callback, so the callback function needs\n// to be kept around\nexport const _JSLOAD_CALLBACK = jsHelpers._generateCallbackName('rcb');\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\nconst RECAPTCHA_BASE = 'https://www.google.com/recaptcha/api.js?';\n\n/**\n * We need to mark this interface as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport interface ReCaptchaLoader {\n  load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\n  clearedOneInstance(): void;\n}\n\n/**\n * Loader for the GReCaptcha library. There should only ever be one of this.\n */\nexport class ReCaptchaLoaderImpl implements ReCaptchaLoader {\n  private hostLanguage = '';\n  private counter = 0;\n  /**\n   * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\n   * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\n   * `window.grecaptcha.render()` will not. Another load will add it.\n   */\n  private readonly librarySeparatelyLoaded = !!_window().grecaptcha?.render;\n\n  load(auth: AuthInternal, hl = ''): Promise<Recaptcha> {\n    _assert(isHostLanguageValid(hl), auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    if (this.shouldResolveImmediately(hl) && isV2(_window().grecaptcha)) {\n      return Promise.resolve(_window().grecaptcha! as Recaptcha);\n    }\n    return new Promise<Recaptcha>((resolve, reject) => {\n      const networkTimeout = _window().setTimeout(() => {\n        reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n      }, NETWORK_TIMEOUT_DELAY.get());\n\n      _window()[_JSLOAD_CALLBACK] = () => {\n        _window().clearTimeout(networkTimeout);\n        delete _window()[_JSLOAD_CALLBACK];\n\n        const recaptcha = _window().grecaptcha as Recaptcha;\n\n        if (!recaptcha || !isV2(recaptcha)) {\n          reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n          return;\n        }\n\n        // Wrap the greptcha render function so that we know if the developer has\n        // called it separately\n        const render = recaptcha.render;\n        recaptcha.render = (container, params) => {\n          const widgetId = render(container, params);\n          this.counter++;\n          return widgetId;\n        };\n\n        this.hostLanguage = hl;\n        resolve(recaptcha);\n      };\n\n      const url = `${RECAPTCHA_BASE}?${querystring({\n        onload: _JSLOAD_CALLBACK,\n        render: 'explicit',\n        hl\n      })}`;\n\n      jsHelpers._loadJS(url).catch(() => {\n        clearTimeout(networkTimeout);\n        reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n      });\n    });\n  }\n\n  clearedOneInstance(): void {\n    this.counter--;\n  }\n\n  private shouldResolveImmediately(hl: string): boolean {\n    // We can resolve immediately if:\n    //   • grecaptcha is already defined AND (\n    //     1. the requested language codes are the same OR\n    //     2. there exists already a ReCaptcha on the page\n    //     3. the library was already loaded by the app\n    // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\n    // that are already in the page\n    return (\n      !!_window().grecaptcha?.render &&\n      (hl === this.hostLanguage ||\n        this.counter > 0 ||\n        this.librarySeparatelyLoaded)\n    );\n  }\n}\n\nfunction isHostLanguageValid(hl: string): boolean {\n  return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n}\n\nexport class MockReCaptchaLoaderImpl implements ReCaptchaLoader {\n  async load(auth: AuthInternal): Promise<Recaptcha> {\n    return new MockReCaptcha(auth);\n  }\n\n  clearedOneInstance(): void {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, RecaptchaParameters } from '../../model/public_types';\nimport { getRecaptchaParams } from '../../api/authentication/recaptcha';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { _isHttpOrHttps } from '../../core/util/location';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport { _isWorker } from '../util/worker';\nimport { Recaptcha } from './recaptcha';\nimport {\n  MockReCaptchaLoaderImpl,\n  ReCaptchaLoader,\n  ReCaptchaLoaderImpl\n} from './recaptcha_loader';\n\nexport const RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\n\nconst DEFAULT_PARAMS: RecaptchaParameters = {\n  theme: 'light',\n  type: 'image'\n};\n\ntype TokenCallback = (token: string) => void;\n\n/**\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\n *\n * @remarks\n * `RecaptchaVerifier` does not work in a Node.js environment.\n *\n * @public\n */\nexport class RecaptchaVerifier implements ApplicationVerifierInternal {\n  /**\n   * The application verifier type.\n   *\n   * @remarks\n   * For a reCAPTCHA verifier, this is 'recaptcha'.\n   */\n  readonly type = RECAPTCHA_VERIFIER_TYPE;\n  private destroyed = false;\n  private widgetId: number | null = null;\n  private readonly container: HTMLElement;\n  private readonly isInvisible: boolean;\n  private readonly tokenChangeListeners = new Set<TokenCallback>();\n  private renderPromise: Promise<number> | null = null;\n  private readonly auth: AuthInternal;\n\n  /** @internal */\n  readonly _recaptchaLoader: ReCaptchaLoader;\n  private recaptcha: Recaptcha | null = null;\n\n  /**\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   *\n   * @param containerOrId - The reCAPTCHA container parameter.\n   *\n   * @remarks\n   * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\n   * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\n   * an element ID. The corresponding element must also must be in the DOM at the time of\n   * initialization.\n   *\n   * @param parameters - The optional reCAPTCHA parameters.\n   *\n   * @remarks\n   * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\n   * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\n   * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\n   * 'invisible'.\n   */\n  constructor(\n    authExtern: Auth,\n    containerOrId: HTMLElement | string,\n    private readonly parameters: RecaptchaParameters = {\n      ...DEFAULT_PARAMS\n    }\n  ) {\n    this.auth = _castAuth(authExtern);\n    this.isInvisible = this.parameters.size === 'invisible';\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    this.container = container;\n    this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n\n    this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\n      ? new MockReCaptchaLoaderImpl()\n      : new ReCaptchaLoaderImpl();\n\n    this.validateStartingState();\n    // TODO: Figure out if sdk version is needed\n  }\n\n  /**\n   * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\n   *\n   * @returns A Promise for the reCAPTCHA token.\n   */\n  async verify(): Promise<string> {\n    this.assertNotDestroyed();\n    const id = await this.render();\n    const recaptcha = this.getAssertedRecaptcha();\n\n    const response = recaptcha.getResponse(id);\n    if (response) {\n      return response;\n    }\n\n    return new Promise<string>(resolve => {\n      const tokenChange = (token: string): void => {\n        if (!token) {\n          return; // Ignore token expirations.\n        }\n        this.tokenChangeListeners.delete(tokenChange);\n        resolve(token);\n      };\n\n      this.tokenChangeListeners.add(tokenChange);\n      if (this.isInvisible) {\n        recaptcha.execute(id);\n      }\n    });\n  }\n\n  /**\n   * Renders the reCAPTCHA widget on the page.\n   *\n   * @returns A Promise that resolves with the reCAPTCHA widget ID.\n   */\n  render(): Promise<number> {\n    try {\n      this.assertNotDestroyed();\n    } catch (e) {\n      // This method returns a promise. Since it's not async (we want to return the\n      // _same_ promise if rendering is still occurring), the API surface should\n      // reject with the error rather than just throw\n      return Promise.reject(e);\n    }\n\n    if (this.renderPromise) {\n      return this.renderPromise;\n    }\n\n    this.renderPromise = this.makeRenderPromise().catch(e => {\n      this.renderPromise = null;\n      throw e;\n    });\n\n    return this.renderPromise;\n  }\n\n  /** @internal */\n  _reset(): void {\n    this.assertNotDestroyed();\n    if (this.widgetId !== null) {\n      this.getAssertedRecaptcha().reset(this.widgetId);\n    }\n  }\n\n  /**\n   * Clears the reCAPTCHA widget from the page and destroys the instance.\n   */\n  clear(): void {\n    this.assertNotDestroyed();\n    this.destroyed = true;\n    this._recaptchaLoader.clearedOneInstance();\n    if (!this.isInvisible) {\n      this.container.childNodes.forEach(node => {\n        this.container.removeChild(node);\n      });\n    }\n  }\n\n  private validateStartingState(): void {\n    _assert(!this.parameters.sitekey, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n    _assert(\n      this.isInvisible || !this.container.hasChildNodes(),\n      this.auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n  }\n\n  private makeTokenCallback(\n    existing: TokenCallback | string | undefined\n  ): TokenCallback {\n    return token => {\n      this.tokenChangeListeners.forEach(listener => listener(token));\n      if (typeof existing === 'function') {\n        existing(token);\n      } else if (typeof existing === 'string') {\n        const globalFunc = _window()[existing];\n        if (typeof globalFunc === 'function') {\n          globalFunc(token);\n        }\n      }\n    };\n  }\n\n  private assertNotDestroyed(): void {\n    _assert(!this.destroyed, this.auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  private async makeRenderPromise(): Promise<number> {\n    await this.init();\n    if (!this.widgetId) {\n      let container = this.container;\n      if (!this.isInvisible) {\n        const guaranteedEmpty = document.createElement('div');\n        container.appendChild(guaranteedEmpty);\n        container = guaranteedEmpty;\n      }\n\n      this.widgetId = this.getAssertedRecaptcha().render(\n        container,\n        this.parameters\n      );\n    }\n\n    return this.widgetId;\n  }\n\n  private async init(): Promise<void> {\n    _assert(\n      _isHttpOrHttps() && !_isWorker(),\n      this.auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n\n    await domReady();\n    this.recaptcha = await this._recaptchaLoader.load(\n      this.auth,\n      this.auth.languageCode || undefined\n    );\n\n    const siteKey = await getRecaptchaParams(this.auth);\n    _assert(siteKey, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.parameters.sitekey = siteKey;\n  }\n\n  private getAssertedRecaptcha(): Recaptcha {\n    _assert(this.recaptcha, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.recaptcha;\n  }\n}\n\nfunction domReady(): Promise<void> {\n  let resolver: (() => void) | null = null;\n  return new Promise<void>(resolve => {\n    if (document.readyState === 'complete') {\n      resolve();\n      return;\n    }\n\n    // Document not ready, wait for load before resolving.\n    // Save resolver, so we can remove listener in case it was externally\n    // cancelled.\n    resolver = () => resolve();\n    window.addEventListener('load', resolver);\n  }).catch(e => {\n    if (resolver) {\n      window.removeEventListener('load', resolver);\n    }\n\n    throw e;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApplicationVerifier,\n  Auth,\n  ConfirmationResult,\n  PhoneInfoOptions,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { startEnrollPhoneMfa } from '../../api/account_management/mfa';\nimport { startSignInPhoneMfa } from '../../api/authentication/mfa';\nimport { sendPhoneVerificationCode } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assertLinkedStatus, _link } from '../../core/user/link_unlink';\nimport { _assert } from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  linkWithCredential,\n  reauthenticateWithCredential,\n  signInWithCredential\n} from '../../core/strategies/credential';\nimport {\n  MultiFactorSessionImpl,\n  MultiFactorSessionType\n} from '../../mfa/mfa_session';\nimport { UserInternal } from '../../model/user';\nimport { RECAPTCHA_VERIFIER_TYPE } from '../recaptcha/recaptcha_verifier';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\n\ninterface OnConfirmationCallback {\n  (credential: PhoneAuthCredential): Promise<UserCredential>;\n}\n\nclass ConfirmationResultImpl implements ConfirmationResult {\n  constructor(\n    readonly verificationId: string,\n    private readonly onConfirmation: OnConfirmationCallback\n  ) {}\n\n  confirm(verificationCode: string): Promise<UserCredential> {\n    const authCredential = PhoneAuthCredential._fromVerification(\n      this.verificationId,\n      verificationCode\n    );\n    return this.onConfirmation(authCredential);\n  }\n}\n\n/**\n * Asynchronously signs in using a phone number.\n *\n * @remarks\n * This method sends a code via SMS to the given\n * phone number, and returns a {@link ConfirmationResult}. After the user\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\n * with the code to sign the user in.\n *\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\n * This function can work on other platforms that do not support the\n * {@link RecaptchaVerifier} (like React Native), but you need to use a\n * third-party {@link ApplicationVerifier} implementation.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n * // Obtain a verificationCode from the user.\n * const credential = await confirmationResult.confirm(verificationCode);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const authInternal = _castAuth(auth);\n  const verificationId = await _verifyPhoneNumber(\n    authInternal,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    signInWithCredential(authInternal, cred)\n  );\n}\n\n/**\n * Links the user account with the given phone number.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function linkWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(false, userInternal, ProviderId.PHONE);\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    linkWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Re-authenticates a user using a fresh phone credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\n *\n * This method does not work in a Node.js environment.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function reauthenticateWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    reauthenticateWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\n *\n */\nexport async function _verifyPhoneNumber(\n  auth: AuthInternal,\n  options: PhoneInfoOptions | string,\n  verifier: ApplicationVerifierInternal\n): Promise<string> {\n  const recaptchaToken = await verifier.verify();\n\n  try {\n    _assert(\n      typeof recaptchaToken === 'string',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      verifier.type === RECAPTCHA_VERIFIER_TYPE,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n\n    let phoneInfoOptions: PhoneInfoOptions;\n\n    if (typeof options === 'string') {\n      phoneInfoOptions = {\n        phoneNumber: options\n      };\n    } else {\n      phoneInfoOptions = options;\n    }\n\n    if ('session' in phoneInfoOptions) {\n      const session = phoneInfoOptions.session as MultiFactorSessionImpl;\n\n      if ('phoneNumber' in phoneInfoOptions) {\n        _assert(\n          session.type === MultiFactorSessionType.ENROLL,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const response = await startEnrollPhoneMfa(auth, {\n          idToken: session.credential,\n          phoneEnrollmentInfo: {\n            phoneNumber: phoneInfoOptions.phoneNumber,\n            recaptchaToken\n          }\n        });\n        return response.phoneSessionInfo.sessionInfo;\n      } else {\n        _assert(\n          session.type === MultiFactorSessionType.SIGN_IN,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const mfaEnrollmentId =\n          phoneInfoOptions.multiFactorHint?.uid ||\n          phoneInfoOptions.multiFactorUid;\n        _assert(mfaEnrollmentId, auth, AuthErrorCode.MISSING_MFA_INFO);\n        const response = await startSignInPhoneMfa(auth, {\n          mfaPendingCredential: session.credential,\n          mfaEnrollmentId,\n          phoneSignInInfo: {\n            recaptchaToken\n          }\n        });\n        return response.phoneResponseInfo.sessionInfo;\n      }\n    } else {\n      const { sessionInfo } = await sendPhoneVerificationCode(auth, {\n        phoneNumber: phoneInfoOptions.phoneNumber,\n        recaptchaToken\n      });\n      return sessionInfo;\n    }\n  } finally {\n    verifier._reset();\n  }\n}\n\n/**\n * Updates the user's phone number.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * await updatePhoneNumber(user, phoneCredential);\n * ```\n *\n * @param user - The user.\n * @param credential - A credential authenticating the new phone number.\n *\n * @public\n */\nexport async function updatePhoneNumber(\n  user: User,\n  credential: PhoneAuthCredential\n): Promise<void> {\n  await _link(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  PhoneInfoOptions,\n  ApplicationVerifier,\n  UserCredential\n} from '../../model/public_types';\n\nimport { SignInWithPhoneNumberResponse } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal as ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal as AuthInternal } from '../../model/auth';\nimport { UserCredentialInternal as UserCredentialInternal } from '../../model/user';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { _verifyPhoneNumber } from '../strategies/phone';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthCredential } from '../../core';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link PhoneAuthCredential}.\n *\n * @remarks\n * `PhoneAuthProvider` does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * const userCredential = await signInWithCredential(auth, phoneCredential);\n * ```\n *\n * @public\n */\nexport class PhoneAuthProvider {\n  /** Always set to {@link ProviderId}.PHONE. */\n  static readonly PROVIDER_ID: 'phone' = ProviderId.PHONE;\n  /** Always set to {@link SignInMethod}.PHONE. */\n  static readonly PHONE_SIGN_IN_METHOD: 'phone' = SignInMethod.PHONE;\n\n  /** Always set to {@link ProviderId}.PHONE. */\n  readonly providerId = PhoneAuthProvider.PROVIDER_ID;\n  private readonly auth: AuthInternal;\n\n  /**\n   * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\n   *\n   */\n  constructor(auth: Auth) {\n    this.auth = _castAuth(auth);\n  }\n\n  /**\n   *\n   * Starts a phone number authentication flow by sending a verification code to the given phone\n   * number.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\n   * E.164 format (e.g. +16505550101).\n   * @param applicationVerifier - For abuse prevention, this method also requires a\n   * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\n   * {@link RecaptchaVerifier}.\n   *\n   * @returns A Promise for a verification ID that can be passed to\n   * {@link PhoneAuthProvider.credential} to identify this flow..\n   */\n  verifyPhoneNumber(\n    phoneOptions: PhoneInfoOptions | string,\n    applicationVerifier: ApplicationVerifier\n  ): Promise<string> {\n    return _verifyPhoneNumber(\n      this.auth,\n      phoneOptions,\n      getModularInstance(applicationVerifier as ApplicationVerifierInternal)\n    );\n  }\n\n  /**\n   * Creates a phone auth credential, given the verification ID from\n   * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\n   * mobile device.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = await confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\n   * @param verificationCode - The verification code sent to the user's mobile device.\n   *\n   * @returns The auth provider credential.\n   */\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return PhoneAuthCredential._fromVerification(\n      verificationId,\n      verificationCode\n    );\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential}.\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    const credential = userCredential as UserCredentialInternal;\n    return PhoneAuthProvider.credentialFromTaggedObject(credential);\n  }\n\n  /**\n   * Returns an {@link AuthCredential} when passed an error.\n   *\n   * @remarks\n   *\n   * This method works for errors like\n   * `auth/account-exists-with-different-credentials`. This is useful for\n   * recovering when attempting to set a user's phone number but the number\n   * in question is already tied to another account. For example, the following\n   * code tries to update the current user's phone number, and if that\n   * fails, links the user with the account associated with that number:\n   *\n   * ```js\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(number, verifier);\n   * try {\n   *   const code = ''; // Prompt the user for the verification code\n   *   await updatePhoneNumber(\n   *       auth.currentUser,\n   *       PhoneAuthProvider.credential(verificationId, code));\n   * } catch (e) {\n   *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {\n   *     const cred = PhoneAuthProvider.credentialFromError(e);\n   *     await linkWithCredential(auth.currentUser, cred);\n   *   }\n   * }\n   *\n   * // At this point, auth.currentUser.phoneNumber === number.\n   * ```\n   *\n   * @param error - The error to generate a credential from.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return PhoneAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): AuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { phoneNumber, temporaryProof } =\n      tokenResponse as SignInWithPhoneNumberResponse;\n    if (phoneNumber && temporaryProof) {\n      return PhoneAuthCredential._fromTokenResponse(\n        phoneNumber,\n        temporaryProof\n      );\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopupRedirectResolver } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { _getInstance } from './instantiator';\n\n/**\n * Chooses a popup/redirect resolver to use. This prefers the override (which\n * is directly passed in), and falls back to the property set on the auth\n * object. If neither are available, this function errors w/ an argument error.\n */\nexport function _withDefaultResolver(\n  auth: AuthInternal,\n  resolverOverride: PopupRedirectResolver | undefined\n): PopupRedirectResolverInternal {\n  if (resolverOverride) {\n    return _getInstance(resolverOverride);\n  }\n\n  _assert(auth._popupRedirectResolver, auth, AuthErrorCode.ARGUMENT_ERROR);\n\n  return auth._popupRedirectResolver;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _link as _linkUser } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { _assert } from '../util/assert';\nimport { _signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { ProviderId } from '../../model/enums';\n\nexport interface IdpTaskParams {\n  auth: AuthInternal;\n  requestUri: string;\n  sessionId?: string;\n  tenantId?: string;\n  postBody?: string;\n  pendingToken?: string;\n  user?: UserInternal;\n  bypassAuthState?: boolean;\n}\n\nexport type IdpTask = (\n  params: IdpTaskParams\n) => Promise<UserCredentialInternal>;\n\nclass IdpCredential extends AuthCredential {\n  constructor(readonly params: IdpTaskParams) {\n    super(ProviderId.CUSTOM, ProviderId.CUSTOM);\n  }\n\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest(idToken));\n  }\n\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  private _buildIdpRequest(idToken?: string): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: this.params.requestUri,\n      sessionId: this.params.sessionId,\n      postBody: this.params.postBody,\n      tenantId: this.params.tenantId,\n      pendingToken: this.params.pendingToken,\n      returnSecureToken: true,\n      returnIdpCredential: true\n    };\n\n    if (idToken) {\n      request.idToken = idToken;\n    }\n\n    return request;\n  }\n}\n\nexport function _signIn(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  return _signInWithCredential(\n    params.auth,\n    new IdpCredential(params),\n    params.bypassAuthState\n  ) as Promise<UserCredentialInternal>;\n}\n\nexport function _reauth(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _reauthenticate(\n    user,\n    new IdpCredential(params),\n    params.bypassAuthState\n  );\n}\n\nexport async function _link(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _linkUser(user, new IdpCredential(params), params.bypassAuthState);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { debugAssert, _fail } from '../util/assert';\nimport {\n  _link,\n  _reauth,\n  _signIn,\n  IdpTask,\n  IdpTaskParams\n} from '../strategies/idp';\nimport { AuthInternal } from '../../model/auth';\n\ninterface PendingPromise {\n  resolve: (cred: UserCredentialInternal | null) => void;\n  reject: (error: Error) => void;\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n */\nexport abstract class AbstractPopupRedirectOperation\n  implements AuthEventConsumer\n{\n  private pendingPromise: PendingPromise | null = null;\n  private eventManager: EventManager | null = null;\n  readonly filter: AuthEventType[];\n\n  abstract eventId: string | null;\n\n  constructor(\n    protected readonly auth: AuthInternal,\n    filter: AuthEventType | AuthEventType[],\n    protected readonly resolver: PopupRedirectResolverInternal,\n    protected user?: UserInternal,\n    protected readonly bypassAuthState = false\n  ) {\n    this.filter = Array.isArray(filter) ? filter : [filter];\n  }\n\n  abstract onExecution(): Promise<void>;\n\n  execute(): Promise<UserCredentialInternal | null> {\n    return new Promise<UserCredentialInternal | null>(\n      async (resolve, reject) => {\n        this.pendingPromise = { resolve, reject };\n\n        try {\n          this.eventManager = await this.resolver._initialize(this.auth);\n          await this.onExecution();\n          this.eventManager.registerConsumer(this);\n        } catch (e) {\n          this.reject(e as Error);\n        }\n      }\n    );\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\n    if (error) {\n      this.reject(error);\n      return;\n    }\n\n    const params: IdpTaskParams = {\n      auth: this.auth,\n      requestUri: urlResponse!,\n      sessionId: sessionId!,\n      tenantId: tenantId || undefined,\n      postBody: postBody || undefined,\n      user: this.user,\n      bypassAuthState: this.bypassAuthState\n    };\n\n    try {\n      this.resolve(await this.getIdpTask(type)(params));\n    } catch (e) {\n      this.reject(e as Error);\n    }\n  }\n\n  onError(error: FirebaseError): void {\n    this.reject(error);\n  }\n\n  private getIdpTask(type: AuthEventType): IdpTask {\n    switch (type) {\n      case AuthEventType.SIGN_IN_VIA_POPUP:\n      case AuthEventType.SIGN_IN_VIA_REDIRECT:\n        return _signIn;\n      case AuthEventType.LINK_VIA_POPUP:\n      case AuthEventType.LINK_VIA_REDIRECT:\n        return _link;\n      case AuthEventType.REAUTH_VIA_POPUP:\n      case AuthEventType.REAUTH_VIA_REDIRECT:\n        return _reauth;\n      default:\n        _fail(this.auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  protected resolve(cred: UserCredentialInternal | null): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.resolve(cred);\n    this.unregisterAndCleanUp();\n  }\n\n  protected reject(error: Error): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.reject(error);\n    this.unregisterAndCleanUp();\n  }\n\n  private unregisterAndCleanUp(): void {\n    if (this.eventManager) {\n      this.eventManager.unregisterConsumer(this);\n    }\n\n    this.pendingPromise = null;\n    this.cleanUp();\n  }\n\n  abstract cleanUp(): void;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _assert,\n  debugAssert,\n  _createError,\n  _assertInstanceOf\n} from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport { AuthPopup } from '../util/popup';\nimport { AbstractPopupRedirectOperation } from '../../core/strategies/abstract_popup_redirect_operation';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\n\n/*\n * The event timeout is the same on mobile and desktop, no need for Delay. Set this to 8s since\n * blocking functions can take upto 7s to complete sign in, as documented in:\n * https://cloud.google.com/identity-platform/docs/blocking-functions#understanding_blocking_functions\n * https://firebase.google.com/docs/auth/extend-with-blocking-functions#understanding_blocking_functions\n */\nexport const enum _Timeout {\n  AUTH_EVENT = 8000\n}\nexport const _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\n\n/**\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n *\n * @remarks\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\n * unsuccessful, returns an error object containing additional information about the error.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function signInWithPopup(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  const action = new PopupOperation(\n    authInternal,\n    AuthEventType.SIGN_IN_VIA_POPUP,\n    provider,\n    resolverInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\n * OAuth flow.\n *\n * @remarks\n * If the reauthentication is successful, the returned result will contain the user and the\n * provider's credential.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n * // Reauthenticate using a popup.\n * await reauthenticateWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function reauthenticateWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.REAUTH_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\n *\n * @remarks\n * If the linking is successful, the returned result will contain the user and the provider's credential.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a popup.\n * const provider = new FacebookAuthProvider();\n * await linkWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function linkWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.LINK_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n *\n */\nclass PopupOperation extends AbstractPopupRedirectOperation {\n  // Only one popup is ever shown at once. The lifecycle of the current popup\n  // can be managed / cancelled by the constructor.\n  private static currentPopupAction: PopupOperation | null = null;\n  private authWindow: AuthPopup | null = null;\n  private pollId: number | null = null;\n\n  constructor(\n    auth: AuthInternal,\n    filter: AuthEventType,\n    private readonly provider: AuthProvider,\n    resolver: PopupRedirectResolverInternal,\n    user?: UserInternal\n  ) {\n    super(auth, filter, resolver, user);\n    if (PopupOperation.currentPopupAction) {\n      PopupOperation.currentPopupAction.cancel();\n    }\n\n    PopupOperation.currentPopupAction = this;\n  }\n\n  async executeNotNull(): Promise<UserCredential> {\n    const result = await this.execute();\n    _assert(result, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return result;\n  }\n\n  async onExecution(): Promise<void> {\n    debugAssert(\n      this.filter.length === 1,\n      'Popup operations only handle one event'\n    );\n    const eventId = _generateEventId();\n    this.authWindow = await this.resolver._openPopup(\n      this.auth,\n      this.provider,\n      this.filter[0], // There's always one, see constructor\n      eventId\n    );\n    this.authWindow.associatedEvent = eventId;\n\n    // Check for web storage support and origin validation _after_ the popup is\n    // loaded. These operations are slow (~1 second or so) Rather than\n    // waiting on them before opening the window, optimistically open the popup\n    // and check for storage support at the same time. If storage support is\n    // not available, this will cause the whole thing to reject properly. It\n    // will also close the popup, but since the promise has already rejected,\n    // the popup closed by user poll will reject into the void.\n    this.resolver._originValidation(this.auth).catch(e => {\n      this.reject(e);\n    });\n\n    this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\n      if (!isSupported) {\n        this.reject(\n          _createError(this.auth, AuthErrorCode.WEB_STORAGE_UNSUPPORTED)\n        );\n      }\n    });\n\n    // Handle user closure. Notice this does *not* use await\n    this.pollUserCancellation();\n  }\n\n  get eventId(): string | null {\n    return this.authWindow?.associatedEvent || null;\n  }\n\n  cancel(): void {\n    this.reject(_createError(this.auth, AuthErrorCode.EXPIRED_POPUP_REQUEST));\n  }\n\n  cleanUp(): void {\n    if (this.authWindow) {\n      this.authWindow.close();\n    }\n\n    if (this.pollId) {\n      window.clearTimeout(this.pollId);\n    }\n\n    this.authWindow = null;\n    this.pollId = null;\n    PopupOperation.currentPopupAction = null;\n  }\n\n  private pollUserCancellation(): void {\n    const poll = (): void => {\n      if (this.authWindow?.window?.closed) {\n        // Make sure that there is sufficient time for whatever action to\n        // complete. The window could have closed but the sign in network\n        // call could still be in flight. This is specifically true for\n        // Firefox or if the opener is in an iframe, in which case the oauth\n        // helper closes the popup.\n        this.pollId = window.setTimeout(() => {\n          this.pollId = null;\n          this.reject(\n            _createError(this.auth, AuthErrorCode.POPUP_CLOSED_BY_USER)\n          );\n        }, _Timeout.AUTH_EVENT);\n        return;\n      }\n\n      this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\n    };\n\n    poll();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserCredentialInternal } from '../../model/user';\nimport { PersistenceInternal } from '../persistence';\nimport { _persistenceKeyName } from '../persistence/persistence_user_manager';\nimport { _getInstance } from '../util/instantiator';\nimport { AbstractPopupRedirectOperation } from './abstract_popup_redirect_operation';\n\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\n\n// We only get one redirect outcome for any one auth, so just store it\n// in here.\nconst redirectOutcomeMap: Map<\n  string,\n  () => Promise<UserCredentialInternal | null>\n> = new Map();\n\nexport class RedirectAction extends AbstractPopupRedirectOperation {\n  eventId = null;\n\n  constructor(\n    auth: AuthInternal,\n    resolver: PopupRedirectResolverInternal,\n    bypassAuthState = false\n  ) {\n    super(\n      auth,\n      [\n        AuthEventType.SIGN_IN_VIA_REDIRECT,\n        AuthEventType.LINK_VIA_REDIRECT,\n        AuthEventType.REAUTH_VIA_REDIRECT,\n        AuthEventType.UNKNOWN\n      ],\n      resolver,\n      undefined,\n      bypassAuthState\n    );\n  }\n\n  /**\n   * Override the execute function; if we already have a redirect result, then\n   * just return it.\n   */\n  async execute(): Promise<UserCredentialInternal | null> {\n    let readyOutcome = redirectOutcomeMap.get(this.auth._key());\n    if (!readyOutcome) {\n      try {\n        const hasPendingRedirect = await _getAndClearPendingRedirectStatus(\n          this.resolver,\n          this.auth\n        );\n        const result = hasPendingRedirect ? await super.execute() : null;\n        readyOutcome = () => Promise.resolve(result);\n      } catch (e) {\n        readyOutcome = () => Promise.reject(e);\n      }\n\n      redirectOutcomeMap.set(this.auth._key(), readyOutcome);\n    }\n\n    // If we're not bypassing auth state, the ready outcome should be set to\n    // null.\n    if (!this.bypassAuthState) {\n      redirectOutcomeMap.set(this.auth._key(), () => Promise.resolve(null));\n    }\n\n    return readyOutcome();\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    if (event.type === AuthEventType.SIGN_IN_VIA_REDIRECT) {\n      return super.onAuthEvent(event);\n    } else if (event.type === AuthEventType.UNKNOWN) {\n      // This is a sentinel value indicating there's no pending redirect\n      this.resolve(null);\n      return;\n    }\n\n    if (event.eventId) {\n      const user = await this.auth._redirectUserForId(event.eventId);\n      if (user) {\n        this.user = user;\n        return super.onAuthEvent(event);\n      } else {\n        this.resolve(null);\n      }\n    }\n  }\n\n  async onExecution(): Promise<void> {}\n\n  cleanUp(): void {}\n}\n\nexport async function _getAndClearPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<boolean> {\n  const key = pendingRedirectKey(auth);\n  const persistence = resolverPersistence(resolver);\n  if (!(await persistence._isAvailable())) {\n    return false;\n  }\n  const hasPendingRedirect = (await persistence._get(key)) === 'true';\n  await persistence._remove(key);\n  return hasPendingRedirect;\n}\n\nexport async function _setPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<void> {\n  return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\n}\n\nexport function _clearRedirectOutcomes(): void {\n  redirectOutcomeMap.clear();\n}\n\nexport function _overrideRedirectResult(\n  auth: AuthInternal,\n  result: () => Promise<UserCredentialInternal | null>\n): void {\n  redirectOutcomeMap.set(auth._key(), result);\n}\n\nfunction resolverPersistence(\n  resolver: PopupRedirectResolverInternal\n): PersistenceInternal {\n  return _getInstance(resolver._redirectPersistence);\n}\n\nfunction pendingRedirectKey(auth: AuthInternal): string {\n  return _persistenceKeyName(\n    PENDING_REDIRECT_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { _assertLinkedStatus } from '../../core/user/link_unlink';\nimport { _assertInstanceOf } from '../../core/util/assert';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport {\n  RedirectAction,\n  _setPendingRedirectStatus\n} from '../../core/strategies/redirect';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Authenticates a Firebase client using a full-page redirect flow.\n *\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link signInWithRedirect}.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _signInWithRedirect(auth, provider, resolver) as Promise<never>;\n}\n\nexport async function _signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await authInternal._initializationPromise;\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  await _setPendingRedirectStatus(resolverInternal, authInternal);\n\n  return resolverInternal._openRedirect(\n    authInternal,\n    provider,\n    AuthEventType.SIGN_IN_VIA_REDIRECT\n  );\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link reauthenticateWithRedirect}.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * // Reauthenticate using a redirect.\n * await reauthenticateWithRedirect(result.user, provider);\n * // This will again trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _reauthenticateWithRedirect(\n    user,\n    provider,\n    resolver\n  ) as Promise<never>;\n}\nexport async function _reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await userInternal.auth._initializationPromise;\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.REAUTH_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link linkWithRedirect}.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a redirect.\n * const provider = new FacebookAuthProvider();\n * await linkWithRedirect(result.user, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _linkWithRedirect(user, provider, resolver) as Promise<never>;\n}\nexport async function _linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await userInternal.auth._initializationPromise;\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _assertLinkedStatus(false, userInternal, provider.providerId);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.LINK_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\n *\n * @remarks\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\n * error. If no redirect operation was called, returns `null`.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function getRedirectResult(\n  auth: Auth,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential | null> {\n  await _castAuth(auth)._initializationPromise;\n  return _getRedirectResult(auth, resolver, false);\n}\n\nexport async function _getRedirectResult(\n  auth: Auth,\n  resolverExtern?: PopupRedirectResolver,\n  bypassAuthState = false\n): Promise<UserCredential | null> {\n  const authInternal = _castAuth(auth);\n  const resolver = _withDefaultResolver(authInternal, resolverExtern);\n  const action = new RedirectAction(authInternal, resolver, bypassAuthState);\n  const result = await action.execute();\n\n  if (result && !bypassAuthState) {\n    delete result.user._redirectEventId;\n    await authInternal._persistUserIfCurrent(result.user as UserInternal);\n    await authInternal._setRedirectUser(null, resolverExtern);\n  }\n\n  return result;\n}\n\nasync function prepareUserForRedirect(user: UserInternal): Promise<string> {\n  const eventId = _generateEventId(`${user.uid}:::`);\n  user._redirectEventId = eventId;\n  await user.auth._setRedirectUser(user);\n  await user.auth._persistUserIfCurrent(user);\n  return eventId;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager\n} from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { AuthInternal } from '../../model/auth';\nimport { _createError } from '../util/assert';\n\n// The amount of time to store the UIDs of seen events; this is\n// set to 10 min by default\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\n\nexport class AuthEventManager implements EventManager {\n  private readonly cachedEventUids: Set<string> = new Set();\n  private readonly consumers: Set<AuthEventConsumer> = new Set();\n  protected queuedRedirectEvent: AuthEvent | null = null;\n  protected hasHandledPotentialRedirect = false;\n  private lastProcessedEventTime = Date.now();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  registerConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.add(authEventConsumer);\n\n    if (\n      this.queuedRedirectEvent &&\n      this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)\n    ) {\n      this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\n      this.saveEventToCache(this.queuedRedirectEvent);\n      this.queuedRedirectEvent = null;\n    }\n  }\n\n  unregisterConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.delete(authEventConsumer);\n  }\n\n  onEvent(event: AuthEvent): boolean {\n    // Check if the event has already been handled\n    if (this.hasEventBeenHandled(event)) {\n      return false;\n    }\n\n    let handled = false;\n    this.consumers.forEach(consumer => {\n      if (this.isEventForConsumer(event, consumer)) {\n        handled = true;\n        this.sendToConsumer(event, consumer);\n        this.saveEventToCache(event);\n      }\n    });\n\n    if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\n      // If we've already seen a redirect before, or this is a popup event,\n      // bail now\n      return handled;\n    }\n\n    this.hasHandledPotentialRedirect = true;\n\n    // If the redirect wasn't handled, hang on to it\n    if (!handled) {\n      this.queuedRedirectEvent = event;\n      handled = true;\n    }\n\n    return handled;\n  }\n\n  private sendToConsumer(event: AuthEvent, consumer: AuthEventConsumer): void {\n    if (event.error && !isNullRedirectEvent(event)) {\n      const code =\n        (event.error.code?.split('auth/')[1] as AuthErrorCode) ||\n        AuthErrorCode.INTERNAL_ERROR;\n      consumer.onError(_createError(this.auth, code));\n    } else {\n      consumer.onAuthEvent(event);\n    }\n  }\n\n  private isEventForConsumer(\n    event: AuthEvent,\n    consumer: AuthEventConsumer\n  ): boolean {\n    const eventIdMatches =\n      consumer.eventId === null ||\n      (!!event.eventId && event.eventId === consumer.eventId);\n    return consumer.filter.includes(event.type) && eventIdMatches;\n  }\n\n  private hasEventBeenHandled(event: AuthEvent): boolean {\n    if (\n      Date.now() - this.lastProcessedEventTime >=\n      EVENT_DUPLICATION_CACHE_DURATION_MS\n    ) {\n      this.cachedEventUids.clear();\n    }\n\n    return this.cachedEventUids.has(eventUid(event));\n  }\n\n  private saveEventToCache(event: AuthEvent): void {\n    this.cachedEventUids.add(eventUid(event));\n    this.lastProcessedEventTime = Date.now();\n  }\n}\n\nfunction eventUid(e: AuthEvent): string {\n  return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\n}\n\nfunction isNullRedirectEvent({ type, error }: AuthEvent): boolean {\n  return (\n    type === AuthEventType.UNKNOWN &&\n    error?.code === `auth/${AuthErrorCode.NO_AUTH_EVENT}`\n  );\n}\n\nfunction isRedirectEvent(event: AuthEvent): boolean {\n  switch (event.type) {\n    case AuthEventType.SIGN_IN_VIA_REDIRECT:\n    case AuthEventType.LINK_VIA_REDIRECT:\n    case AuthEventType.REAUTH_VIA_REDIRECT:\n      return true;\n    case AuthEventType.UNKNOWN:\n      return isNullRedirectEvent(event);\n    default:\n      return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _performApiRequest, Endpoint, HttpMethod } from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface GetProjectConfigRequest {\n  androidPackageName?: string;\n  iosBundleId?: string;\n}\n\nexport interface GetProjectConfigResponse {\n  authorizedDomains: string[];\n}\n\nexport async function _getProjectConfig(\n  auth: Auth,\n  request: GetProjectConfigRequest = {}\n): Promise<GetProjectConfigResponse> {\n  return _performApiRequest<GetProjectConfigRequest, GetProjectConfigResponse>(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PROJECT_CONFIG,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProjectConfig } from '../../api/project_config/get_project_config';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from './assert';\nimport { _getCurrentUrl } from './location';\n\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nconst HTTP_REGEX = /^https?/;\n\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  // Skip origin validation if we are in an emulated environment\n  if (auth.config.emulator) {\n    return;\n  }\n\n  const { authorizedDomains } = await _getProjectConfig(auth);\n\n  for (const domain of authorizedDomains) {\n    try {\n      if (matchDomain(domain)) {\n        return;\n      }\n    } catch {\n      // Do nothing if there's a URL error; just continue searching\n    }\n  }\n\n  // In the old SDK, this error also provides helpful messages.\n  _fail(auth, AuthErrorCode.INVALID_ORIGIN);\n}\n\nfunction matchDomain(expected: string): boolean {\n  const currentUrl = _getCurrentUrl();\n  const { protocol, hostname } = new URL(currentUrl);\n  if (expected.startsWith('chrome-extension://')) {\n    const ceUrl = new URL(expected);\n\n    if (ceUrl.hostname === '' && hostname === '') {\n      // For some reason we're not parsing chrome URLs properly\n      return (\n        protocol === 'chrome-extension:' &&\n        expected.replace('chrome-extension://', '') ===\n          currentUrl.replace('chrome-extension://', '')\n      );\n    }\n\n    return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\n  }\n\n  if (!HTTP_REGEX.test(protocol)) {\n    return false;\n  }\n\n  if (IP_ADDRESS_REGEX.test(expected)) {\n    // The domain has to be exactly equal to the pattern, as an IP domain will\n    // only contain the IP, no extra character.\n    return hostname === expected;\n  }\n\n  // Dots in pattern should be escaped.\n  const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\n  // Non ip address domains.\n  // domain.com = *.domain.com OR domain.com\n  const re = new RegExp(\n    '^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$',\n    'i'\n  );\n  return re.test(hostname);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as js from '../load_js';\n\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\n\n/**\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\n * it will stop working after a retrial. This is a hack to fix this issue.\n */\nfunction resetUnloadedGapiModules(): void {\n  // Clear last failed gapi.load state to force next gapi.load to first\n  // load the failed gapi.iframes module.\n  // Get gapix.beacon context.\n  const beacon = _window().___jsl;\n  // Get current hint.\n  if (beacon?.H) {\n    // Get gapi hint.\n    for (const hint of Object.keys(beacon.H)) {\n      // Requested modules.\n      beacon.H[hint].r = beacon.H[hint].r || [];\n      // Loaded modules.\n      beacon.H[hint].L = beacon.H[hint].L || [];\n      // Set requested modules to a copy of the loaded modules.\n      beacon.H[hint].r = [...beacon.H[hint].L];\n      // Clear pending callbacks.\n      if (beacon.CP) {\n        for (let i = 0; i < beacon.CP.length; i++) {\n          // Remove all failed pending callbacks.\n          beacon.CP[i] = null;\n        }\n      }\n    }\n  }\n}\n\nfunction loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  return new Promise<gapi.iframes.Context>((resolve, reject) => {\n    // Function to run when gapi.load is ready.\n    function loadGapiIframe(): void {\n      // The developer may have tried to previously run gapi.load and failed.\n      // Run this to fix that.\n      resetUnloadedGapiModules();\n      gapi.load('gapi.iframes', {\n        callback: () => {\n          resolve(gapi.iframes.getContext());\n        },\n        ontimeout: () => {\n          // The above reset may be sufficient, but having this reset after\n          // failure ensures that if the developer calls gapi.load after the\n          // connection is re-established and before another attempt to embed\n          // the iframe, it would work and would not be broken because of our\n          // failed attempt.\n          // Timeout when gapi.iframes.Iframe not loaded.\n          resetUnloadedGapiModules();\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        },\n        timeout: NETWORK_TIMEOUT.get()\n      });\n    }\n\n    if (_window().gapi?.iframes?.Iframe) {\n      // If gapi.iframes.Iframe available, resolve.\n      resolve(gapi.iframes.getContext());\n    } else if (!!_window().gapi?.load) {\n      // Gapi loader ready, load gapi.iframes.\n      loadGapiIframe();\n    } else {\n      // Create a new iframe callback when this is called so as not to overwrite\n      // any previous defined callback. This happens if this method is called\n      // multiple times in parallel and could result in the later callback\n      // overwriting the previous one. This would end up with a iframe\n      // timeout.\n      const cbName = js._generateCallbackName('iframefcb');\n      // GApi loader not available, dynamically load platform.js.\n      _window()[cbName] = () => {\n        // GApi loader should be ready.\n        if (!!gapi.load) {\n          loadGapiIframe();\n        } else {\n          // Gapi loader failed, throw error.\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        }\n      };\n      // Load GApi loader.\n      return js\n        ._loadJS(`https://apis.google.com/js/api.js?onload=${cbName}`)\n        .catch(e => reject(e));\n    }\n  }).catch(error => {\n    // Reset cached promise to allow for retrial.\n    cachedGApiLoader = null;\n    throw error;\n  });\n}\n\nlet cachedGApiLoader: Promise<gapi.iframes.Context> | null = null;\nexport function _loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\n  return cachedGApiLoader;\n}\n\nexport function _resetLoader(): void {\n  cachedGApiLoader = null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { querystring } from '@firebase/util';\nimport { DefaultConfig } from '../../../internal';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _emulatorUrl } from '../../core/util/emulator';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as gapiLoader from './gapi';\n\nconst PING_TIMEOUT = new Delay(5000, 15000);\nconst IFRAME_PATH = '__/auth/iframe';\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\n\nconst IFRAME_ATTRIBUTES = {\n  style: {\n    position: 'absolute',\n    top: '-100px',\n    width: '1px',\n    height: '1px'\n  },\n  'aria-hidden': 'true',\n  tabindex: '-1'\n};\n\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\nconst EID_FROM_APIHOST = new Map([\n  [DefaultConfig.API_HOST, 'p'], // production\n  ['staging-identitytoolkit.sandbox.googleapis.com', 's'], // staging\n  ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\n]);\n\nfunction getIframeUrl(auth: AuthInternal): string {\n  const config = auth.config;\n  _assert(config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  const url = config.emulator\n    ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\n    : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\n\n  const params: Record<string, string> = {\n    apiKey: config.apiKey,\n    appName: auth.name,\n    v: SDK_VERSION\n  };\n  const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\n  if (eid) {\n    params.eid = eid;\n  }\n  const frameworks = auth._getFrameworks();\n  if (frameworks.length) {\n    params.fw = frameworks.join(',');\n  }\n  return `${url}?${querystring(params).slice(1)}`;\n}\n\nexport async function _openIframe(\n  auth: AuthInternal\n): Promise<gapi.iframes.Iframe> {\n  const context = await gapiLoader._loadGapi(auth);\n  const gapi = _window().gapi;\n  _assert(gapi, auth, AuthErrorCode.INTERNAL_ERROR);\n  return context.open(\n    {\n      where: document.body,\n      url: getIframeUrl(auth),\n      messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\n      attributes: IFRAME_ATTRIBUTES,\n      dontclear: true\n    },\n    (iframe: gapi.iframes.Iframe) =>\n      new Promise(async (resolve, reject) => {\n        await iframe.restyle({\n          // Prevent iframe from closing on mouse out.\n          setHideOnLeave: false\n        });\n\n        const networkError = _createError(\n          auth,\n          AuthErrorCode.NETWORK_REQUEST_FAILED\n        );\n        // Confirm iframe is correctly loaded.\n        // To fallback on failure, set a timeout.\n        const networkErrorTimer = _window().setTimeout(() => {\n          reject(networkError);\n        }, PING_TIMEOUT.get());\n        // Clear timer and resolve pending iframe ready promise.\n        function clearTimerAndResolve(): void {\n          _window().clearTimeout(networkErrorTimer);\n          resolve(iframe);\n        }\n        // This returns an IThenable. However the reject part does not call\n        // when the iframe is not loaded.\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\n          reject(networkError);\n        });\n      })\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport {\n  _isChromeIOS,\n  _isFirefox,\n  _isIOSStandalone\n} from '../../core/util/browser';\nimport { AuthInternal } from '../../model/auth';\n\nconst BASE_POPUP_OPTIONS = {\n  location: 'yes',\n  resizable: 'yes',\n  statusbar: 'yes',\n  toolbar: 'no'\n};\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = 600;\nconst TARGET_BLANK = '_blank';\n\nconst FIREFOX_EMPTY_URL = 'http://localhost';\n\nexport class AuthPopup {\n  associatedEvent: string | null = null;\n\n  constructor(readonly window: Window | null) {}\n\n  close(): void {\n    if (this.window) {\n      try {\n        this.window.close();\n      } catch (e) {}\n    }\n  }\n}\n\nexport function _open(\n  auth: AuthInternal,\n  url?: string,\n  name?: string,\n  width = DEFAULT_WIDTH,\n  height = DEFAULT_HEIGHT\n): AuthPopup {\n  const top = Math.max((window.screen.availHeight - height) / 2, 0).toString();\n  const left = Math.max((window.screen.availWidth - width) / 2, 0).toString();\n  let target = '';\n\n  const options: { [key: string]: string } = {\n    ...BASE_POPUP_OPTIONS,\n    width: width.toString(),\n    height: height.toString(),\n    top,\n    left\n  };\n\n  // Chrome iOS 7 and 8 is returning an undefined popup win when target is\n  // specified, even though the popup is not necessarily blocked.\n  const ua = getUA().toLowerCase();\n\n  if (name) {\n    target = _isChromeIOS(ua) ? TARGET_BLANK : name;\n  }\n\n  if (_isFirefox(ua)) {\n    // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\n    url = url || FIREFOX_EMPTY_URL;\n    // Firefox disables by default scrolling on popup windows, which can create\n    // issues when the user has many Google accounts, for instance.\n    options.scrollbars = 'yes';\n  }\n\n  const optionsString = Object.entries(options).reduce(\n    (accum, [key, value]) => `${accum}${key}=${value},`,\n    ''\n  );\n\n  if (_isIOSStandalone(ua) && target !== '_self') {\n    openAsNewWindowIOS(url || '', target);\n    return new AuthPopup(null);\n  }\n\n  // about:blank getting sanitized causing browsers like IE/Edge to display\n  // brief error message before redirecting to handler.\n  const newWin = window.open(url || '', target, optionsString);\n  _assert(newWin, auth, AuthErrorCode.POPUP_BLOCKED);\n\n  // Flaky on IE edge, encapsulate with a try and catch.\n  try {\n    newWin.focus();\n  } catch (e) {}\n\n  return new AuthPopup(newWin);\n}\n\nfunction openAsNewWindowIOS(url: string, target: string): void {\n  const el = document.createElement('a');\n  el.href = url;\n  el.target = target;\n  const click = document.createEvent('MouseEvent');\n  click.initMouseEvent(\n    'click',\n    true,\n    true,\n    window,\n    1,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    1,\n    null\n  );\n  el.dispatchEvent(click);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { AuthProvider } from '../../model/public_types';\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { isEmpty, querystring } from '@firebase/util';\nimport { _emulatorUrl } from './emulator';\nimport { FederatedAuthProvider } from '../providers/federated';\nimport { BaseOAuthProvider } from '../providers/oauth';\n\n/**\n * URL for Authentication widget which will initiate the OAuth handshake\n *\n * @internal\n */\nconst WIDGET_PATH = '__/auth/handler';\n\n/**\n * URL for emulated environment\n *\n * @internal\n */\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\n\n/**\n * Fragment name for the App Check token that gets passed to the widget\n *\n * @internal\n */\nconst FIREBASE_APP_CHECK_FRAGMENT_ID = encodeURIComponent('fac');\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype WidgetParams = {\n  apiKey: ApiKey;\n  appName: AppName;\n  authType: AuthEventType;\n  redirectUrl?: string;\n  v: string;\n  providerId?: string;\n  scopes?: string;\n  customParameters?: string;\n  eventId?: string;\n  tid?: string;\n} & { [key: string]: string | undefined };\n\nexport async function _getRedirectUrl(\n  auth: AuthInternal,\n  provider: AuthProvider,\n  authType: AuthEventType,\n  redirectUrl?: string,\n  eventId?: string,\n  additionalParams?: Record<string, string>\n): Promise<string> {\n  _assert(auth.config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  _assert(auth.config.apiKey, auth, AuthErrorCode.INVALID_API_KEY);\n\n  const params: WidgetParams = {\n    apiKey: auth.config.apiKey,\n    appName: auth.name,\n    authType,\n    redirectUrl,\n    v: SDK_VERSION,\n    eventId\n  };\n\n  if (provider instanceof FederatedAuthProvider) {\n    provider.setDefaultLanguage(auth.languageCode);\n    params.providerId = provider.providerId || '';\n    if (!isEmpty(provider.getCustomParameters())) {\n      params.customParameters = JSON.stringify(provider.getCustomParameters());\n    }\n\n    // TODO set additionalParams from the provider as well?\n    for (const [key, value] of Object.entries(additionalParams || {})) {\n      params[key] = value;\n    }\n  }\n\n  if (provider instanceof BaseOAuthProvider) {\n    const scopes = provider.getScopes().filter(scope => scope !== '');\n    if (scopes.length > 0) {\n      params.scopes = scopes.join(',');\n    }\n  }\n\n  if (auth.tenantId) {\n    params.tid = auth.tenantId;\n  }\n\n  // TODO: maybe set eid as endipointId\n  // TODO: maybe set fw as Frameworks.join(\",\")\n\n  const paramsDict = params as Record<string, string | number>;\n  for (const key of Object.keys(paramsDict)) {\n    if (paramsDict[key] === undefined) {\n      delete paramsDict[key];\n    }\n  }\n\n  // Sets the App Check token to pass to the widget\n  const appCheckToken = await auth._getAppCheckToken();\n  const appCheckTokenFragment = appCheckToken\n    ? `#${FIREBASE_APP_CHECK_FRAGMENT_ID}=${encodeURIComponent(appCheckToken)}`\n    : '';\n\n  // Start at index 1 to skip the leading '&' in the query string\n  return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(\n    1\n  )}${appCheckTokenFragment}`;\n}\n\nfunction getHandlerBase({ config }: AuthInternal): string {\n  if (!config.emulator) {\n    return `https://${config.authDomain}/${WIDGET_PATH}`;\n  }\n\n  return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../model/public_types';\n\nimport { AuthEventManager } from '../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../core/errors';\nimport { _assert, debugAssert, _fail } from '../core/util/assert';\nimport { _generateEventId } from '../core/util/event_id';\nimport { _getCurrentUrl } from '../core/util/location';\nimport { _validateOrigin } from '../core/util/validate_origin';\nimport { AuthInternal } from '../model/auth';\nimport {\n  AuthEventType,\n  EventManager,\n  GapiAuthEvent,\n  GapiOutcome,\n  PopupRedirectResolverInternal\n} from '../model/popup_redirect';\nimport { _setWindowLocation } from './auth_window';\nimport { _openIframe } from './iframe/iframe';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { _open, AuthPopup } from './util/popup';\nimport { _getRedirectResult } from './strategies/redirect';\nimport { _getRedirectUrl } from '../core/util/handler';\nimport { _isIOS, _isMobileBrowser, _isSafari } from '../core/util/browser';\nimport { _overrideRedirectResult } from '../core/strategies/redirect';\n\n/**\n * The special web storage event\n *\n */\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\n\ninterface WebStorageSupportMessage extends gapi.iframes.Message {\n  [index: number]: Record<string, boolean>;\n}\n\ninterface ManagerOrPromise {\n  manager?: EventManager;\n  promise?: Promise<EventManager>;\n}\n\nclass BrowserPopupRedirectResolver implements PopupRedirectResolverInternal {\n  private readonly eventManagers: Record<string, ManagerOrPromise> = {};\n  private readonly iframes: Record<string, gapi.iframes.Iframe> = {};\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  readonly _redirectPersistence = browserSessionPersistence;\n\n  // Wrapping in async even though we don't await anywhere in order\n  // to make sure errors are raised as promise rejections\n  async _openPopup(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<AuthPopup> {\n    debugAssert(\n      this.eventManagers[auth._key()]?.manager,\n      '_initialize() not called before _openPopup()'\n    );\n\n    const url = await _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    return _open(auth, url, _generateEventId());\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<never> {\n    await this._originValidation(auth);\n    const url = await _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    _setWindowLocation(url);\n    return new Promise(() => {});\n  }\n\n  _initialize(auth: AuthInternal): Promise<EventManager> {\n    const key = auth._key();\n    if (this.eventManagers[key]) {\n      const { manager, promise } = this.eventManagers[key];\n      if (manager) {\n        return Promise.resolve(manager);\n      } else {\n        debugAssert(promise, 'If manager is not set, promise should be');\n        return promise;\n      }\n    }\n\n    const promise = this.initAndGetManager(auth);\n    this.eventManagers[key] = { promise };\n\n    // If the promise is rejected, the key should be removed so that the\n    // operation can be retried later.\n    promise.catch(() => {\n      delete this.eventManagers[key];\n    });\n\n    return promise;\n  }\n\n  private async initAndGetManager(auth: AuthInternal): Promise<EventManager> {\n    const iframe = await _openIframe(auth);\n    const manager = new AuthEventManager(auth);\n    iframe.register<GapiAuthEvent>(\n      'authEvent',\n      (iframeEvent: GapiAuthEvent | null) => {\n        _assert(iframeEvent?.authEvent, auth, AuthErrorCode.INVALID_AUTH_EVENT);\n        // TODO: Consider splitting redirect and popup events earlier on\n\n        const handled = manager.onEvent(iframeEvent.authEvent);\n        return { status: handled ? GapiOutcome.ACK : GapiOutcome.ERROR };\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n\n    this.eventManagers[auth._key()] = { manager };\n    this.iframes[auth._key()] = iframe;\n    return manager;\n  }\n\n  _isIframeWebStorageSupported(\n    auth: AuthInternal,\n    cb: (supported: boolean) => unknown\n  ): void {\n    const iframe = this.iframes[auth._key()];\n    iframe.send<gapi.iframes.Message, WebStorageSupportMessage>(\n      WEB_STORAGE_SUPPORT_KEY,\n      { type: WEB_STORAGE_SUPPORT_KEY },\n      result => {\n        const isSupported = result?.[0]?.[WEB_STORAGE_SUPPORT_KEY];\n        if (isSupported !== undefined) {\n          cb(!!isSupported);\n        }\n\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  get _shouldInitProactively(): boolean {\n    // Mobile browsers and Safari need to optimistically initialize\n    return _isMobileBrowser() || _isSafari() || _isIOS();\n  }\n\n  _completeRedirectFn = _getRedirectResult;\n\n  _overrideRedirectResult = _overrideRedirectResult;\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for browser\n * based applications.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @public\n */\nexport const browserPopupRedirectResolver: PopupRedirectResolver =\n  BrowserPopupRedirectResolver;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FactorId, MultiFactorAssertion } from '../model/public_types';\nimport { debugFail } from '../core/util/assert';\nimport { MultiFactorSessionImpl, MultiFactorSessionType } from './mfa_session';\nimport { FinalizeMfaResponse } from '../api/authentication/mfa';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorAssertionImpl implements MultiFactorAssertion {\n  protected constructor(readonly factorId: FactorId) {}\n\n  _process(\n    auth: AuthInternal,\n    session: MultiFactorSessionImpl,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    switch (session.type) {\n      case MultiFactorSessionType.ENROLL:\n        return this._finalizeEnroll(auth, session.credential, displayName);\n      case MultiFactorSessionType.SIGN_IN:\n        return this._finalizeSignIn(auth, session.credential);\n      default:\n        return debugFail('unexpected MultiFactorSessionType');\n    }\n  }\n\n  abstract _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse>;\n  abstract _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FactorId,\n  PhoneMultiFactorAssertion\n} from '../../../model/public_types';\n\nimport { MultiFactorAssertionImpl } from '../../../mfa/mfa_assertion';\nimport { AuthInternal } from '../../../model/auth';\nimport { finalizeEnrollPhoneMfa } from '../../../api/account_management/mfa';\nimport { PhoneAuthCredential } from '../../../core/credentials/phone';\nimport {\n  finalizeSignInPhoneMfa,\n  FinalizeMfaResponse\n} from '../../../api/authentication/mfa';\n\n/**\n * {@inheritdoc PhoneMultiFactorAssertion}\n *\n * @public\n */\nexport class PhoneMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements PhoneMultiFactorAssertion\n{\n  private constructor(private readonly credential: PhoneAuthCredential) {\n    super(FactorId.PHONE);\n  }\n\n  /** @internal */\n  static _fromCredential(\n    credential: PhoneAuthCredential\n  ): PhoneMultiFactorAssertionImpl {\n    return new PhoneMultiFactorAssertionImpl(credential);\n  }\n\n  /** @internal */\n  _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeEnrollPhoneMfa(auth, {\n      idToken,\n      displayName,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeSignInPhoneMfa(auth, {\n      mfaPendingCredential,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\n *\n * @public\n */\nexport class PhoneMultiFactorGenerator {\n  private constructor() {}\n\n  /**\n   * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\n   *\n   * @remarks\n   * This method does not work in a Node.js environment.\n   *\n   * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\n   * @returns A {@link PhoneMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}\n   */\n  static assertion(credential: PhoneAuthCredential): PhoneMultiFactorAssertion {\n    return PhoneMultiFactorAssertionImpl._fromCredential(credential);\n  }\n\n  /**\n   * The identifier of the phone second factor: `phone`.\n   */\n  static FACTOR_ID = 'phone';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  TotpMultiFactorAssertion,\n  MultiFactorSession,\n  FactorId\n} from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  finalizeEnrollTotpMfa,\n  startEnrollTotpMfa,\n  StartTotpMfaEnrollmentResponse,\n  TotpVerificationInfo\n} from '../../api/account_management/mfa';\nimport {\n  FinalizeMfaResponse,\n  finalizeSignInTotpMfa\n} from '../../api/authentication/mfa';\nimport { MultiFactorAssertionImpl } from '../../mfa/mfa_assertion';\nimport { MultiFactorSessionImpl } from '../mfa_session';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * @public\n */\nexport class TotpMultiFactorGenerator {\n  /**\n   * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of\n   * the TOTP (time-based one-time password) second factor.\n   * This assertion is used to complete enrollment in TOTP second factor.\n   *\n   * @param secret A {@link TotpSecret} containing the shared secret key and other TOTP parameters.\n   * @param oneTimePassword One-time password from TOTP App.\n   * @returns A {@link TotpMultiFactorAssertion} which can be used with\n   * {@link MultiFactorUser.enroll}.\n   */\n  static assertionForEnrollment(\n    secret: TotpSecret,\n    oneTimePassword: string\n  ): TotpMultiFactorAssertion {\n    return TotpMultiFactorAssertionImpl._fromSecret(secret, oneTimePassword);\n  }\n\n  /**\n   * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of the TOTP second factor.\n   * This assertion is used to complete signIn with TOTP as the second factor.\n   *\n   * @param enrollmentId identifies the enrolled TOTP second factor.\n   * @param oneTimePassword One-time password from TOTP App.\n   * @returns A {@link TotpMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}.\n   */\n  static assertionForSignIn(\n    enrollmentId: string,\n    oneTimePassword: string\n  ): TotpMultiFactorAssertion {\n    return TotpMultiFactorAssertionImpl._fromEnrollmentId(\n      enrollmentId,\n      oneTimePassword\n    );\n  }\n\n  /**\n   * Returns a promise to {@link TotpSecret} which contains the TOTP shared secret key and other parameters.\n   * Creates a TOTP secret as part of enrolling a TOTP second factor.\n   * Used for generating a QR code URL or inputting into a TOTP app.\n   * This method uses the auth instance corresponding to the user in the multiFactorSession.\n   *\n   * @param session The {@link MultiFactorSession} that the user is part of.\n   * @returns A promise to {@link TotpSecret}.\n   */\n  static async generateSecret(\n    session: MultiFactorSession\n  ): Promise<TotpSecret> {\n    const mfaSession = session as MultiFactorSessionImpl;\n    _assert(\n      typeof mfaSession.user?.auth !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const response = await startEnrollTotpMfa(mfaSession.user.auth, {\n      idToken: mfaSession.credential,\n      totpEnrollmentInfo: {}\n    });\n    return TotpSecret._fromStartTotpMfaEnrollmentResponse(\n      response,\n      mfaSession.user.auth\n    );\n  }\n\n  /**\n   * The identifier of the TOTP second factor: `totp`.\n   */\n  static FACTOR_ID: 'totp' = FactorId.TOTP;\n}\n\nexport class TotpMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements TotpMultiFactorAssertion\n{\n  constructor(\n    readonly otp: string,\n    readonly enrollmentId?: string,\n    readonly secret?: TotpSecret\n  ) {\n    super(FactorId.TOTP);\n  }\n\n  /** @internal */\n  static _fromSecret(\n    secret: TotpSecret,\n    otp: string\n  ): TotpMultiFactorAssertionImpl {\n    return new TotpMultiFactorAssertionImpl(otp, undefined, secret);\n  }\n\n  /** @internal */\n  static _fromEnrollmentId(\n    enrollmentId: string,\n    otp: string\n  ): TotpMultiFactorAssertionImpl {\n    return new TotpMultiFactorAssertionImpl(otp, enrollmentId);\n  }\n\n  /** @internal */\n  async _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    _assert(\n      typeof this.secret !== 'undefined',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return finalizeEnrollTotpMfa(auth, {\n      idToken,\n      displayName,\n      totpVerificationInfo: this.secret._makeTotpVerificationInfo(this.otp)\n    });\n  }\n\n  /** @internal */\n  async _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    _assert(\n      this.enrollmentId !== undefined && this.otp !== undefined,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    const totpVerificationInfo = { verificationCode: this.otp };\n    return finalizeSignInTotpMfa(auth, {\n      mfaPendingCredential,\n      mfaEnrollmentId: this.enrollmentId,\n      totpVerificationInfo\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * Stores the shared secret key and other parameters to generate time-based OTPs.\n * Implements methods to retrieve the shared secret key and generate a QR code URL.\n * @public\n */\nexport class TotpSecret {\n  /**\n   * Shared secret key/seed used for enrolling in TOTP MFA and generating OTPs.\n   */\n  readonly secretKey: string;\n  /**\n   * Hashing algorithm used.\n   */\n  readonly hashingAlgorithm: string;\n  /**\n   * Length of the one-time passwords to be generated.\n   */\n  readonly codeLength: number;\n  /**\n   * The interval (in seconds) when the OTP codes should change.\n   */\n  readonly codeIntervalSeconds: number;\n  /**\n   * The timestamp (UTC string) by which TOTP enrollment should be completed.\n   */\n  // This can be used by callers to show a countdown of when to enter OTP code by.\n  readonly enrollmentCompletionDeadline: string;\n\n  // The public members are declared outside the constructor so the docs can be generated.\n  private constructor(\n    secretKey: string,\n    hashingAlgorithm: string,\n    codeLength: number,\n    codeIntervalSeconds: number,\n    enrollmentCompletionDeadline: string,\n    private readonly sessionInfo: string,\n    private readonly auth: AuthInternal\n  ) {\n    this.secretKey = secretKey;\n    this.hashingAlgorithm = hashingAlgorithm;\n    this.codeLength = codeLength;\n    this.codeIntervalSeconds = codeIntervalSeconds;\n    this.enrollmentCompletionDeadline = enrollmentCompletionDeadline;\n  }\n\n  /** @internal */\n  static _fromStartTotpMfaEnrollmentResponse(\n    response: StartTotpMfaEnrollmentResponse,\n    auth: AuthInternal\n  ): TotpSecret {\n    return new TotpSecret(\n      response.totpSessionInfo.sharedSecretKey,\n      response.totpSessionInfo.hashingAlgorithm,\n      response.totpSessionInfo.verificationCodeLength,\n      response.totpSessionInfo.periodSec,\n      new Date(response.totpSessionInfo.finalizeEnrollmentTime).toUTCString(),\n      response.totpSessionInfo.sessionInfo,\n      auth\n    );\n  }\n\n  /** @internal */\n  _makeTotpVerificationInfo(otp: string): TotpVerificationInfo {\n    return { sessionInfo: this.sessionInfo, verificationCode: otp };\n  }\n\n  /**\n   * Returns a QR code URL as described in\n   * https://github.com/google/google-authenticator/wiki/Key-Uri-Format\n   * This can be displayed to the user as a QR code to be scanned into a TOTP app like Google Authenticator.\n   * If the optional parameters are unspecified, an accountName of <userEmail> and issuer of <firebaseAppName> are used.\n   *\n   * @param accountName the name of the account/app along with a user identifier.\n   * @param issuer issuer of the TOTP (likely the app name).\n   * @returns A QR code URL string.\n   */\n  generateQrCodeUrl(accountName?: string, issuer?: string): string {\n    let useDefaults = false;\n    if (_isEmptyString(accountName) || _isEmptyString(issuer)) {\n      useDefaults = true;\n    }\n    if (useDefaults) {\n      if (_isEmptyString(accountName)) {\n        accountName = this.auth.currentUser?.email || 'unknownuser';\n      }\n      if (_isEmptyString(issuer)) {\n        issuer = this.auth.name;\n      }\n    }\n    return `otpauth://totp/${issuer}:${accountName}?secret=${this.secretKey}&issuer=${issuer}&algorithm=${this.hashingAlgorithm}&digits=${this.codeLength}`;\n  }\n}\n\n/** @internal */\nfunction _isEmptyString(input?: string): boolean {\n  return typeof input === 'undefined' || input?.length === 0;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Unsubscribe } from '@firebase/util';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\n\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\ninterface TokenListener {\n  (tok: string | null): unknown;\n}\n\nexport class AuthInterop implements FirebaseAuthInternal {\n  private readonly internalListeners: Map<TokenListener, Unsubscribe> =\n    new Map();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  getUid(): string | null {\n    this.assertAuthConfigured();\n    return this.auth.currentUser?.uid || null;\n  }\n\n  async getToken(\n    forceRefresh?: boolean\n  ): Promise<{ accessToken: string } | null> {\n    this.assertAuthConfigured();\n    await this.auth._initializationPromise;\n    if (!this.auth.currentUser) {\n      return null;\n    }\n\n    const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\n    return { accessToken };\n  }\n\n  addAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    if (this.internalListeners.has(listener)) {\n      return;\n    }\n\n    const unsubscribe = this.auth.onIdTokenChanged(user => {\n      listener(\n        (user as UserInternal | null)?.stsTokenManager.accessToken || null\n      );\n    });\n    this.internalListeners.set(listener, unsubscribe);\n    this.updateProactiveRefresh();\n  }\n\n  removeAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    const unsubscribe = this.internalListeners.get(listener);\n    if (!unsubscribe) {\n      return;\n    }\n\n    this.internalListeners.delete(listener);\n    unsubscribe();\n    this.updateProactiveRefresh();\n  }\n\n  private assertAuthConfigured(): void {\n    _assert(\n      this.auth._initializationPromise,\n      AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    );\n  }\n\n  private updateProactiveRefresh(): void {\n    if (this.internalListeners.size > 0) {\n      this.auth._startProactiveRefresh();\n    } else {\n      this.auth._stopProactiveRefresh();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\n\nimport {\n  initializeAuth,\n  beforeAuthStateChanged,\n  onIdTokenChanged,\n  connectAuthEmulator\n} from '..';\nimport { registerAuth } from '../core/auth/register';\nimport { ClientPlatform } from '../core/util/version';\nimport { browserLocalPersistence } from './persistence/local_storage';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { indexedDBLocalPersistence } from './persistence/indexed_db';\nimport { browserPopupRedirectResolver } from './popup_redirect';\nimport { Auth, User } from '../model/public_types';\nimport { getDefaultEmulatorHost, getExperimentalSetting } from '@firebase/util';\n\nconst DEFAULT_ID_TOKEN_MAX_AGE = 5 * 60;\nconst authIdTokenMaxAge =\n  getExperimentalSetting('authIdTokenMaxAge') || DEFAULT_ID_TOKEN_MAX_AGE;\n\nlet lastPostedIdToken: string | undefined | null = null;\n\nconst mintCookieFactory = (url: string) => async (user: User | null) => {\n  const idTokenResult = user && (await user.getIdTokenResult());\n  const idTokenAge =\n    idTokenResult &&\n    (new Date().getTime() - Date.parse(idTokenResult.issuedAtTime)) / 1_000;\n  if (idTokenAge && idTokenAge > authIdTokenMaxAge) {\n    return;\n  }\n  // Specifically trip null => undefined when logged out, to delete any existing cookie\n  const idToken = idTokenResult?.token;\n  if (lastPostedIdToken === idToken) {\n    return;\n  }\n  lastPostedIdToken = idToken;\n  await fetch(url, {\n    method: idToken ? 'POST' : 'DELETE',\n    headers: idToken\n      ? {\n          'Authorization': `Bearer ${idToken}`\n        }\n      : {}\n  });\n};\n\n/**\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\n *\n * @param app - The Firebase App.\n *\n * @public\n */\nexport function getAuth(app: FirebaseApp = getApp()): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n\n  const auth = initializeAuth(app, {\n    popupRedirectResolver: browserPopupRedirectResolver,\n    persistence: [\n      indexedDBLocalPersistence,\n      browserLocalPersistence,\n      browserSessionPersistence\n    ]\n  });\n\n  const authTokenSyncUrl = getExperimentalSetting('authTokenSyncURL');\n  if (authTokenSyncUrl) {\n    const mintCookie = mintCookieFactory(authTokenSyncUrl);\n    beforeAuthStateChanged(auth, mintCookie, () =>\n      mintCookie(auth.currentUser)\n    );\n    onIdTokenChanged(auth, user => mintCookie(user));\n  }\n\n  const authEmulatorHost = getDefaultEmulatorHost('auth');\n  if (authEmulatorHost) {\n    connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n  }\n\n  return auth;\n}\n\nregisterAuth(ClientPlatform.BROWSER);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\n\nimport { name, version } from '../../../package.json';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _getClientVersion, ClientPlatform } from '../util/version';\nimport { _castAuth, AuthImpl, DefaultConfig } from './auth_impl';\nimport { AuthInterop } from './firebase_internal';\nimport { ConfigInternal } from '../../model/auth';\nimport { Dependencies } from '../../model/public_types';\nimport { _initializeAuthInstance } from './initialize';\n\nexport const enum _ComponentName {\n  AUTH = 'auth',\n  AUTH_INTERNAL = 'auth-internal'\n}\n\nfunction getVersionForPlatform(\n  clientPlatform: ClientPlatform\n): string | undefined {\n  switch (clientPlatform) {\n    case ClientPlatform.NODE:\n      return 'node';\n    case ClientPlatform.REACT_NATIVE:\n      return 'rn';\n    case ClientPlatform.WORKER:\n      return 'webworker';\n    case ClientPlatform.CORDOVA:\n      return 'cordova';\n    default:\n      return undefined;\n  }\n}\n\n/** @internal */\nexport function registerAuth(clientPlatform: ClientPlatform): void {\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH,\n      (container, { options: deps }: { options?: Dependencies }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const heartbeatServiceProvider =\n          container.getProvider<'heartbeat'>('heartbeat');\n        const appCheckServiceProvider =\n          container.getProvider<'app-check-internal'>('app-check-internal');\n        const { apiKey, authDomain } = app.options;\n\n        _assert(\n          apiKey && !apiKey.includes(':'),\n          AuthErrorCode.INVALID_API_KEY,\n          { appName: app.name }\n        );\n\n        const config: ConfigInternal = {\n          apiKey,\n          authDomain,\n          clientPlatform,\n          apiHost: DefaultConfig.API_HOST,\n          tokenApiHost: DefaultConfig.TOKEN_API_HOST,\n          apiScheme: DefaultConfig.API_SCHEME,\n          sdkClientVersion: _getClientVersion(clientPlatform)\n        };\n\n        const authInstance = new AuthImpl(\n          app,\n          heartbeatServiceProvider,\n          appCheckServiceProvider,\n          config\n        );\n        _initializeAuthInstance(authInstance, deps);\n\n        return authInstance;\n      },\n      ComponentType.PUBLIC\n    )\n      /**\n       * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\n       * For why we do this, See go/firebase-next-auth-init\n       */\n      .setInstantiationMode(InstantiationMode.EXPLICIT)\n      /**\n       * Because all firebase products that depend on auth depend on auth-internal directly,\n       * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\n       */\n      .setInstanceCreatedCallback(\n        (container, _instanceIdentifier, _instance) => {\n          const authInternalProvider = container.getProvider(\n            _ComponentName.AUTH_INTERNAL\n          );\n          authInternalProvider.initialize();\n        }\n      )\n  );\n\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH_INTERNAL,\n      container => {\n        const auth = _castAuth(\n          container.getProvider(_ComponentName.AUTH).getImmediate()!\n        );\n        return (auth => new AuthInterop(auth))(auth);\n      },\n      ComponentType.PRIVATE\n    ).setInstantiationMode(InstantiationMode.EXPLICIT)\n  );\n\n  registerVersion(name, version, getVersionForPlatform(clientPlatform));\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `IteratedDataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: IteratedDataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n * Represents a child snapshot of a `Reference` that is being iterated over. The key will never be undefined.\n */\nexport interface IteratedDataSnapshot extends DataSnapshot {\n  key: string; // key of the location of this snapshot.\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import arrayMap from './_arrayMap.js';\nimport copyArray from './_copyArray.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\nimport stringToPath from './_stringToPath.js';\nimport toKey from './_toKey.js';\nimport toString from './toString.js';\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nexport default toPath;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = React.createContext<FormikContextType<any>>(\n  undefined as any\n);\nFormikContext.displayName = 'FormikContext';\n\nexport const FormikProvider = FormikContext.Provider;\nexport const FormikConsumer = FormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  const formik = React.useContext<FormikContextType<Values>>(FormikContext);\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return formik;\n}\n","import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n\n  // check if path is not in the end\n  if (p !== path.length && !obj) {\n    return def;\n  }\n\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport invariant from 'tiny-warning';\nimport { FieldConfig } from './Field';\nimport { FormikProvider } from './FormikContext';\nimport {\n  FieldHelperProps,\n  FieldInputProps,\n  FieldMetaProps,\n  FormikConfig,\n  FormikErrors,\n  FormikHandlers,\n  FormikHelpers,\n  FormikProps,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n} from './types';\nimport {\n  getActiveElement,\n  getIn,\n  isEmptyChildren,\n  isFunction,\n  isObject,\n  isPromise,\n  isString,\n  setIn,\n  setNestedObjectValues,\n} from './utils';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [, setIteration] = React.useState(0);\n  const stateRef = React.useRef<FormikState<Values>>({\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const state = stateRef.current;\n\n  const dispatch = React.useCallback((action: FormikMessage<Values>) => {\n    const prev = stateRef.current;\n\n    stateRef.current = formikReducer(prev, action);\n\n    // force rerender\n    if (prev !== stateRef.current) setIteration(x => x + 1);\n  }, []);\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const validationSchema = props.validationSchema;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff if something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value) as string)\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  React.useEffect(() => {\n    if (\n      validateOnMount &&\n      isMounted.current === true &&\n      isEqual(initialValues.current, props.initialValues)\n    ) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      const dispatchFn = () => {\n        dispatch({\n          type: 'RESET_FORM',\n          payload: {\n            isSubmitting: !!nextState && !!nextState.isSubmitting,\n            errors,\n            touched,\n            status,\n            values,\n            isValidating: !!nextState && !!nextState.isValidating,\n            submitCount:\n              !!nextState &&\n              !!nextState.submitCount &&\n              typeof nextState.submitCount === 'number'\n                ? nextState.submitCount\n                : 0,\n          },\n        });\n      };\n\n      if (props.onReset) {\n        const maybePromisedOnReset = (props.onReset as any)(\n          state.values,\n          imperativeMethods\n        );\n\n        if (isPromise(maybePromisedOnReset)) {\n          (maybePromisedOnReset as Promise<any>).then(dispatchFn);\n        } else {\n          dispatchFn();\n        }\n      } else {\n        dispatchFn();\n      }\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched, props.onReset]\n  );\n\n  React.useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n        if (validateOnMount) {\n          validateFormWithHighPriority(initialValues.current);\n        }\n      }\n    }\n  }, [\n    enableReinitialize,\n    props.initialValues,\n    resetForm,\n    validateOnMount,\n    validateFormWithHighPriority,\n  ]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (\n      fieldRegistry.current[name] &&\n      isFunction(fieldRegistry.current[name].validate)\n    ) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else if (props.validationSchema) {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runValidationSchema(state.values, name)\n        .then((x: any) => x)\n        .then((error: any) => {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: { field: name, value: getIn(error, name) },\n          });\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n        });\n    }\n\n    return Promise.resolve();\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: React.SetStateAction<Values>, shouldValidate?: boolean) => {\n      const resolvedValues = isFunction(values) ? values(state.values) : values;\n\n      dispatch({ type: 'SET_VALUES', payload: resolvedValues });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(resolvedValues)\n        : Promise.resolve();\n    }\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as any).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target\n          ? (eventOrTextValue as React.ChangeEvent<any>).target\n          : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : options && multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = useEventCallback<FormikHandlers['handleChange']>(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    }\n  );\n\n  const setFieldTouched = useEventCallback(\n    (field: string, touched: boolean = true, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = useEventCallback<FormikHandlers['handleBlur']>(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    }\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        // In case an error was thrown and passed to the resolved Promise,\n        // `combinedErrors` can be an instance of an Error. We need to check\n        // that and abort the submit.\n        // If we don't do that, calling `Object.keys(new Error())` yields an\n        // empty array, which causes the validation to pass and the form\n        // to be submitted.\n\n        const isInstanceOfError = combinedErrors instanceof Error;\n        const isActuallyValid =\n          !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          // Proceed with submit...\n          //\n          // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n          // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n          // This would be fine in simple cases, but make it impossible to disable submit\n          // buttons where people use callbacks or promises as side effects (which is basically\n          // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n          //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n          // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n          // cleanup of isSubmitting on behalf of the consumer.\n          let promiseOrUndefined;\n          try {\n            promiseOrUndefined = executeSubmit();\n            // Bail if it's sync, consumer is responsible for cleaning up\n            // via setSubmitting(false)\n            if (promiseOrUndefined === undefined) {\n              return;\n            }\n          } catch (error) {\n            throw error;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(result => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n              return result;\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                // This is a legit error rejected by the onSubmit fn\n                // so we don't want to break the promise chain\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before updating state\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          // throw combinedErrors;\n          if (isInstanceOfError) {\n            throw combinedErrors;\n          }\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm().catch(reason => {\n        console.warn(\n          `Warning: An unhandled error was caught from submitForm()`,\n          reason\n        );\n      });\n    }\n  );\n\n  const imperativeMethods: FormikHelpers<Values> = {\n    resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n    submitForm,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  });\n\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldHelpers = React.useCallback(\n    (name: string): FieldHelperProps<any> => {\n      return {\n        setValue: (value: any, shouldValidate?: boolean) =>\n          setFieldValue(name, value, shouldValidate),\n        setTouched: (value: boolean, shouldValidate?: boolean) =>\n          setFieldTouched(name, value, shouldValidate),\n        setError: (value: any) => setFieldError(name, value),\n      };\n    },\n    [setFieldValue, setFieldTouched, setFieldError]\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions: string | FieldConfig<any>): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject\n        ? (nameOrOptions as FieldConfig<any>).name\n        : nameOrOptions;\n      const valueState = getIn(state.values, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n        } = nameOrOptions as FieldConfig<any>;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n      }\n      return field;\n    },\n    [handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render, innerRef } = props;\n\n  // This allows folks to pass a ref to <Formik />\n  React.useImperativeHandle(innerRef, () => formikbag);\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context?: any\n): Promise<Partial<T>> {\n  const normalizedValues: FormikValues = prepareDataForValidation(values);\n\n  return schema[sync ? 'validateSync' : 'validate'](normalizedValues, {\n    abortEarly: false,\n    context: context || normalizedValues,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = Array.isArray(values) ? [] : {};\n  for (let k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function merge(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n/** Return multi select values based on an array of options */\nfunction getSelectedValues(options: any[]) {\n  return Array.from(options)\n    .filter(el => el.selected)\n    .map(el => el.value);\n}\n\n/** Return the next value for a checkbox */\nfunction getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  }\n\n  // If the currentValue was not a boolean we want to return an array\n  let currentArrayOfValues = [];\n  let isValueInArray = false;\n  let index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  }\n\n  // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  }\n\n  // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  }\n\n  // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n  return currentArrayOfValues\n    .slice(0, index)\n    .concat(currentArrayOfValues.slice(index + 1));\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldValidator,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren, isObject } from './utils';\nimport invariant from 'tiny-warning';\n\nexport interface FieldProps<V = any, FormValues = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<FormValues>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport interface FieldConfig<V = any> {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n  | string\n  | React.ComponentType<FieldProps<V>>\n  | React.ComponentType\n  | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n  | React.ComponentType<FieldProps<V>['field']>\n  | string\n  | React.ComponentType\n  | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   * @deprecated\n   */\n  render?: (props: FieldProps<V>) => React.ReactNode;\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<V>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: FieldValidator;\n\n  /**\n   * Used for 'select' and related input types.\n   */\n  multiple?: boolean;\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = { className?: string; } & GenericFieldHTMLAttributes &\n  FieldConfig<T> &\n  T & {\n    name: string,\n  };\n\nexport type FieldHookConfig<T> = GenericFieldHTMLAttributes & FieldConfig<T>;\n\nexport function useField<Val = any>(\n  propsOrFieldName: string | FieldHookConfig<Val>\n): [FieldInputProps<Val>, FieldMetaProps<Val>, FieldHelperProps<Val>] {\n  const formik = useFormikContext();\n  const {\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    registerField,\n    unregisterField,\n  } = formik;\n\n  const isAnObject = isObject(propsOrFieldName);\n\n  // Normalize propsOrFieldName to FieldHookConfig<Val>\n  const props: FieldHookConfig<Val> = isAnObject\n    ? (propsOrFieldName as FieldHookConfig<Val>)\n    : { name: propsOrFieldName as string };\n\n  const { name: fieldName, validate: validateFn } = props;\n\n  React.useEffect(() => {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn,\n      });\n    }\n    return () => {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (__DEV__) {\n    invariant(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n\n  invariant(\n    fieldName,\n    'Invalid field name. Either pass `useField` a string or an object containing a `name` key.'\n  );\n\n  const fieldHelpers = React.useMemo(() => getFieldHelpers(fieldName), [\n    getFieldHelpers,\n    fieldName,\n  ]);\n\n  return [getFieldProps(props), getFieldMeta(fieldName), fieldHelpers];\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  className,\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n\n    ...formik\n  } = useFormikContext();\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !render,\n        `<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\"${name}\" render={({field, form}) => ...} /> with <Field name=\"${name}\">{({field, form, meta}) => ...}</Field>`\n      );\n\n      invariant(\n        !(is && children && isFunction(children)),\n        'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n      );\n\n      invariant(\n        !(component && children && isFunction(children)),\n        'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n      );\n\n      invariant(\n        !(render && children && !isEmptyChildren(children)),\n        'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  // Register field and field-level validation with parent <Formik>\n  const { registerField, unregisterField } = formik;\n  React.useEffect(() => {\n    registerField(name, {\n      validate: validate,\n    });\n    return () => {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  const field = formik.getFieldProps({ name, ...props });\n  const meta = formik.getFieldMeta(name);\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    return render({ ...legacyBag, meta });\n  }\n\n  if (isFunction(children)) {\n    return children({ ...legacyBag, meta });\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest, className },\n        children\n      );\n    }\n    // We don't pass `meta` for backwards compat\n    return React.createElement(\n      component,\n      { field, form: formik, ...props, className },\n      children\n    );\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest, className },\n      children\n    );\n  }\n\n  return React.createElement(asElement, { ...field, ...props, className }, children);\n}\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props: FormikFormProps, ref) => {\n    // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n    // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n    const { action, ...rest } = props;\n    const _action = action ?? '#';\n    const { handleReset, handleSubmit } = useFormikContext();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        ref={ref}\n        onReset={handleReset}\n        action={_action}\n        {...rest}\n      />\n    );\n  }\n);\n\nForm.displayName = 'Form';\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContextType } from './types';\nimport { FormikConsumer } from './FormikContext';\nimport invariant from 'tiny-warning';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.FC<OuterProps> = props => (\n    <FormikConsumer>\n      {formik => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    </FormikConsumer>\n  );\n\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.FC<OuterProps> & {\n    WrappedComponent: typeof Comp;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  );\n}\n","import cloneDeep from 'lodash/cloneDeep';\nimport * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikProps,\n  FormikState,\n  SharedRenderProps,\n} from './types';\nimport {\n  getIn,\n  isEmptyArray,\n  isEmptyChildren,\n  isFunction,\n  isObject,\n  setIn,\n} from './utils';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers<T extends any[] = any[]> {\n  /** Imperatively add a value to the end of an array */\n  push<X = T[number]>(obj: X): void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush<X = T[number]>(obj: X): () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert<X = T[number]>(index: number, value: X): void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert<X = T[number]>(index: number, value: X): () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace<X = T[number]>(index: number, value: X): void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace<X = T[number]>(index: number, value: X): () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift<X = T[number]>(value: X): number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift<X = T[number]>(value: X): () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<X = T[number]>(index: number): X | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<X = T[number]>(): X | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = <T,>(array: T[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = <T,>(\n  arrayLike: ArrayLike<T>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = <T,>(\n  arrayLike: ArrayLike<T>,\n  index: number,\n  value: T\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = <T,>(\n  arrayLike: ArrayLike<T>,\n  index: number,\n  value: T\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nconst createAlterationHandler = (\n  alteration: boolean | Function,\n  defaultFunction: Function\n) => {\n  const fn = typeof alteration === 'function' ? alteration : defaultFunction;\n\n  return (data: any | any[]) => {\n    if (Array.isArray(data) || isObject(data)) {\n      const clone = copyArrayLike(data);\n      return fn(clone);\n    }\n\n    // This can be assumed to be a primitive, which\n    // is a case for top level validation errors\n    return data;\n  };\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  componentDidUpdate(\n    prevProps: FieldArrayConfig & { formik: FormikContextType<Values> }\n  ) {\n    if (\n      this.props.validateOnChange &&\n      this.props.formik.validateOnChange &&\n      !isEqual(\n        getIn(prevProps.formik.values, prevProps.name),\n        getIn(this.props.formik.values, this.props.name)\n      )\n    ) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n\n      formik: { setFormikState },\n    } = this.props;\n\n    setFormikState((prevState: FormikState<any>) => {\n      let updateErrors = createAlterationHandler(alterErrors, fn);\n      let updateTouched = createAlterationHandler(alterTouched, fn);\n\n      // values fn should be executed before updateErrors and updateTouched,\n      // otherwise it causes an error with unshift.\n      let values = setIn(\n        prevState.values,\n        name,\n        fn(getIn(prevState.values, name))\n      );\n\n      let fieldError = alterErrors\n        ? updateErrors(getIn(prevState.errors, name))\n        : undefined;\n      let fieldTouched = alterTouched\n        ? updateTouched(getIn(prevState.touched, name))\n        : undefined;\n\n      if (isEmptyArray(fieldError)) {\n        fieldError = undefined;\n      }\n      if (isEmptyArray(fieldTouched)) {\n        fieldTouched = undefined;\n      }\n\n      return {\n        ...prevState,\n        values,\n        errors: alterErrors\n          ? setIn(prevState.errors, name, fieldError)\n          : prevState.errors,\n        touched: alterTouched\n          ? setIn(prevState.touched, name, fieldTouched)\n          : prevState.touched,\n      };\n    });\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n\n        length = arr.length;\n\n        return arr;\n      },\n      (array: any[]) => {\n        return array ? [null, ...array] : [null];\n      },\n      (array: any[]) => {\n        return array ? [null, ...array] : [null];\n      }\n    );\n\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        // if the array only includes undefined values we have to return an empty array\n        return isFunction(copy.every)\n          ? copy.every(v => v === undefined)\n            ? []\n            : copy\n          : copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array.slice();\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  id?: string;\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContextType<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContextType<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render)\n          ? render(error)\n          : null\n        : children\n        ? isFunction(children)\n          ? children(error)\n          : null\n        : component\n        ? React.createElement(component, rest as any, error)\n        : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContextType<any> }\n>(ErrorMessageImpl);\n","import * as React from 'react';\n\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContextType,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport invariant from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\nimport { FieldConfig } from './Field';\nimport { connect } from './connect';\n\ntype $FixMe = any;\n\nexport interface FastFieldProps<V = any> {\n  field: FieldInputProps<V>;\n  meta: FieldMetaProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport type FastFieldConfig<T> = FieldConfig & {\n  /** Override FastField's default shouldComponentUpdate */\n  shouldUpdate?: (\n    nextProps: T & GenericFieldHTMLAttributes,\n    props: {}\n  ) => boolean;\n};\n\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\n  FastFieldConfig<T> &\n  T;\n\ntype FastFieldInnerProps<Values = {}, Props = {}> = FastFieldAttributes<\n  Props\n> & { formik: FormikContextType<Values> };\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\n  FastFieldInnerProps<Values, Props>,\n  {}\n> {\n  constructor(props: FastFieldInnerProps<Values, Props>) {\n    super(props);\n    const { render, children, component, as: is, name } = props;\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n  }\n\n  shouldComponentUpdate(props: FastFieldInnerProps<Values, Props>) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate,\n    });\n  }\n\n  componentDidUpdate(prevProps: FastFieldAttributes<Props>) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      as: is,\n      children,\n      component,\n      shouldUpdate,\n      formik,\n      ...props\n    } = this.props as FastFieldInnerProps<Values, Props>;\n\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = formik.getFieldProps({ name, ...props });\n    const meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name),\n    };\n\n    const bag = { field, meta, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        const { innerRef, ...rest } = props;\n        return React.createElement(\n          component,\n          { ref: innerRef, ...field, ...(rest as $FixMe) },\n          children\n        );\n      }\n      // We don't pass `meta` for backwards compat\n      return React.createElement(\n        component as React.ComponentClass<$FixMe>,\n        { field, form: formik, ...props },\n        children\n      );\n    }\n\n    // default to input here so we can check for both `as` and `children` above\n    const asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        asElement,\n        { ref: innerRef, ...field, ...(rest as $FixMe) },\n        children\n      );\n    }\n\n    return React.createElement(\n      asElement as React.ComponentClass,\n      { ...field, ...props },\n      children\n    );\n  }\n}\n\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>\n */\n'use strict'\n\nfunction Cache(maxSize) {\n  this._maxSize = maxSize\n  this.clear()\n}\nCache.prototype.clear = function () {\n  this._size = 0\n  this._values = Object.create(null)\n}\nCache.prototype.get = function (key) {\n  return this._values[key]\n}\nCache.prototype.set = function (key, value) {\n  this._size >= this._maxSize && this.clear()\n  if (!(key in this._values)) this._size++\n\n  return (this._values[key] = value)\n}\n\nvar SPLIT_REGEX = /[^.^\\]^[]+|(?=\\[\\]|\\.\\.)/g,\n  DIGIT_REGEX = /^\\d+$/,\n  LEAD_DIGIT_REGEX = /^\\d/,\n  SPEC_CHAR_REGEX = /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g,\n  CLEAN_QUOTES_REGEX = /^\\s*(['\"]?)(.*?)(\\1)\\s*$/,\n  MAX_CACHE_SIZE = 512\n\nvar pathCache = new Cache(MAX_CACHE_SIZE),\n  setCache = new Cache(MAX_CACHE_SIZE),\n  getCache = new Cache(MAX_CACHE_SIZE)\n\nvar config\n\nmodule.exports = {\n  Cache: Cache,\n\n  split: split,\n\n  normalizePath: normalizePath,\n\n  setter: function (path) {\n    var parts = normalizePath(path)\n\n    return (\n      setCache.get(path) ||\n      setCache.set(path, function setter(obj, value) {\n        var index = 0\n        var len = parts.length\n        var data = obj\n\n        while (index < len - 1) {\n          var part = parts[index]\n          if (\n            part === '__proto__' ||\n            part === 'constructor' ||\n            part === 'prototype'\n          ) {\n            return obj\n          }\n\n          data = data[parts[index++]]\n        }\n        data[parts[index]] = value\n      })\n    )\n  },\n\n  getter: function (path, safe) {\n    var parts = normalizePath(path)\n    return (\n      getCache.get(path) ||\n      getCache.set(path, function getter(data) {\n        var index = 0,\n          len = parts.length\n        while (index < len) {\n          if (data != null || !safe) data = data[parts[index++]]\n          else return\n        }\n        return data\n      })\n    )\n  },\n\n  join: function (segments) {\n    return segments.reduce(function (path, part) {\n      return (\n        path +\n        (isQuoted(part) || DIGIT_REGEX.test(part)\n          ? '[' + part + ']'\n          : (path ? '.' : '') + part)\n      )\n    }, '')\n  },\n\n  forEach: function (path, cb, thisArg) {\n    forEach(Array.isArray(path) ? path : split(path), cb, thisArg)\n  },\n}\n\nfunction normalizePath(path) {\n  return (\n    pathCache.get(path) ||\n    pathCache.set(\n      path,\n      split(path).map(function (part) {\n        return part.replace(CLEAN_QUOTES_REGEX, '$2')\n      })\n    )\n  )\n}\n\nfunction split(path) {\n  return path.match(SPLIT_REGEX) || ['']\n}\n\nfunction forEach(parts, iter, thisArg) {\n  var len = parts.length,\n    part,\n    idx,\n    isArray,\n    isBracket\n\n  for (idx = 0; idx < len; idx++) {\n    part = parts[idx]\n\n    if (part) {\n      if (shouldBeQuoted(part)) {\n        part = '\"' + part + '\"'\n      }\n\n      isBracket = isQuoted(part)\n      isArray = !isBracket && /^\\d+$/.test(part)\n\n      iter.call(thisArg, part, isBracket, isArray, idx, parts)\n    }\n  }\n}\n\nfunction isQuoted(str) {\n  return (\n    typeof str === 'string' && str && [\"'\", '\"'].indexOf(str.charAt(0)) !== -1\n  )\n}\n\nfunction hasLeadingNumber(part) {\n  return part.match(LEAD_DIGIT_REGEX) && !part.match(DIGIT_REGEX)\n}\n\nfunction hasSpecialChars(part) {\n  return SPEC_CHAR_REGEX.test(part)\n}\n\nfunction shouldBeQuoted(part) {\n  return !isQuoted(part) && (hasLeadingNumber(part) || hasSpecialChars(part))\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nvar hasElementType = typeof Element !== 'undefined';\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n    // end fast-deep-equal\n\n    // start react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element && b instanceof Element)\n      return a === b;\n\n    // custom handling for React\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n    // end react-fast-compare\n\n    // fast-deep-equal index.js 2.0.1\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nconst words = (str) => str.match(reWords) || []\n\nconst upperFirst = (str) => str[0].toUpperCase() + str.slice(1)\n\nconst join = (str, d) => words(str).join(d).toLowerCase()\n\nconst camelCase = (str) =>\n  words(str).reduce(\n    (acc, next) =>\n      `${acc}${\n        !acc\n          ? next.toLowerCase()\n          : next[0].toUpperCase() + next.slice(1).toLowerCase()\n      }`,\n    '',\n  )\n\nconst pascalCase = (str) => upperFirst(camelCase(str))\n\nconst snakeCase = (str) => join(str, '_')\n\nconst kebabCase = (str) => join(str, '-')\n\nconst sentenceCase = (str) => upperFirst(join(str, ' '))\n\nconst titleCase = (str) => words(str).map(upperFirst).join(' ')\n\nmodule.exports = {\n  words,\n  upperFirst,\n  camelCase,\n  pascalCase,\n  snakeCase,\n  kebabCase,\n  sentenceCase,\n  titleCase,\n}\n","\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\nmodule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nmodule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n","import { getter, forEach, split, normalizePath, join } from 'property-expr';\nimport { camelCase, snakeCase } from 'tiny-case';\nimport toposort from 'toposort';\n\nconst toString = Object.prototype.toString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = typeof Symbol !== 'undefined' ? Symbol.prototype.toString : () => '';\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nfunction printNumber(val) {\n  if (val != +val) return 'NaN';\n  const isNegativeZero = val === 0 && 1 / val < 0;\n  return isNegativeZero ? '-0' : '' + val;\n}\nfunction printSimpleValue(val, quoteStrings = false) {\n  if (val == null || val === true || val === false) return '' + val;\n  const typeOf = typeof val;\n  if (typeOf === 'number') return printNumber(val);\n  if (typeOf === 'string') return quoteStrings ? `\"${val}\"` : val;\n  if (typeOf === 'function') return '[Function ' + (val.name || 'anonymous') + ']';\n  if (typeOf === 'symbol') return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n  const tag = toString.call(val).slice(8, -1);\n  if (tag === 'Date') return isNaN(val.getTime()) ? '' + val : val.toISOString(val);\n  if (tag === 'Error' || val instanceof Error) return '[' + errorToString.call(val) + ']';\n  if (tag === 'RegExp') return regExpToString.call(val);\n  return null;\n}\nfunction printValue(value, quoteStrings) {\n  let result = printSimpleValue(value, quoteStrings);\n  if (result !== null) return result;\n  return JSON.stringify(value, function (key, value) {\n    let result = printSimpleValue(this[key], quoteStrings);\n    if (result !== null) return result;\n    return value;\n  }, 2);\n}\n\nfunction toArray(value) {\n  return value == null ? [] : [].concat(value);\n}\n\nlet _Symbol$toStringTag;\nlet strReg = /\\$\\{\\s*(\\w+)\\s*\\}/g;\n_Symbol$toStringTag = Symbol.toStringTag;\nclass ValidationError extends Error {\n  static formatError(message, params) {\n    const path = params.label || params.path || 'this';\n    if (path !== params.path) params = Object.assign({}, params, {\n      path\n    });\n    if (typeof message === 'string') return message.replace(strReg, (_, key) => printValue(params[key]));\n    if (typeof message === 'function') return message(params);\n    return message;\n  }\n  static isError(err) {\n    return err && err.name === 'ValidationError';\n  }\n  constructor(errorOrErrors, value, field, type, disableStack) {\n    super();\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.errors = void 0;\n    this.params = void 0;\n    this.inner = void 0;\n    this[_Symbol$toStringTag] = 'Error';\n    this.name = 'ValidationError';\n    this.value = value;\n    this.path = field;\n    this.type = type;\n    this.errors = [];\n    this.inner = [];\n    toArray(errorOrErrors).forEach(err => {\n      if (ValidationError.isError(err)) {\n        this.errors.push(...err.errors);\n        const innerErrors = err.inner.length ? err.inner : [err];\n        this.inner.push(...innerErrors);\n      } else {\n        this.errors.push(err);\n      }\n    });\n    this.message = this.errors.length > 1 ? `${this.errors.length} errors occurred` : this.errors[0];\n    if (!disableStack && Error.captureStackTrace) Error.captureStackTrace(this, ValidationError);\n  }\n}\n\nlet mixed = {\n  default: '${path} is invalid',\n  required: '${path} is a required field',\n  defined: '${path} must be defined',\n  notNull: '${path} cannot be null',\n  oneOf: '${path} must be one of the following values: ${values}',\n  notOneOf: '${path} must not be one of the following values: ${values}',\n  notType: ({\n    path,\n    type,\n    value,\n    originalValue\n  }) => {\n    const castMsg = originalValue != null && originalValue !== value ? ` (cast from the value \\`${printValue(originalValue, true)}\\`).` : '.';\n    return type !== 'mixed' ? `${path} must be a \\`${type}\\` type, ` + `but the final value was: \\`${printValue(value, true)}\\`` + castMsg : `${path} must match the configured type. ` + `The validated value was: \\`${printValue(value, true)}\\`` + castMsg;\n  }\n};\nlet string = {\n  length: '${path} must be exactly ${length} characters',\n  min: '${path} must be at least ${min} characters',\n  max: '${path} must be at most ${max} characters',\n  matches: '${path} must match the following: \"${regex}\"',\n  email: '${path} must be a valid email',\n  url: '${path} must be a valid URL',\n  uuid: '${path} must be a valid UUID',\n  trim: '${path} must be a trimmed string',\n  lowercase: '${path} must be a lowercase string',\n  uppercase: '${path} must be a upper case string'\n};\nlet number = {\n  min: '${path} must be greater than or equal to ${min}',\n  max: '${path} must be less than or equal to ${max}',\n  lessThan: '${path} must be less than ${less}',\n  moreThan: '${path} must be greater than ${more}',\n  positive: '${path} must be a positive number',\n  negative: '${path} must be a negative number',\n  integer: '${path} must be an integer'\n};\nlet date = {\n  min: '${path} field must be later than ${min}',\n  max: '${path} field must be at earlier than ${max}'\n};\nlet boolean = {\n  isValue: '${path} field must be ${value}'\n};\nlet object = {\n  noUnknown: '${path} field has unspecified keys: ${unknown}'\n};\nlet array = {\n  min: '${path} field must have at least ${min} items',\n  max: '${path} field must have less than or equal to ${max} items',\n  length: '${path} must have ${length} items'\n};\nlet tuple = {\n  notType: params => {\n    const {\n      path,\n      value,\n      spec\n    } = params;\n    const typeLen = spec.types.length;\n    if (Array.isArray(value)) {\n      if (value.length < typeLen) return `${path} tuple value has too few items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n      if (value.length > typeLen) return `${path} tuple value has too many items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n    }\n    return ValidationError.formatError(mixed.notType, params);\n  }\n};\nvar locale = Object.assign(Object.create(null), {\n  mixed,\n  string,\n  number,\n  date,\n  object,\n  array,\n  boolean,\n  tuple\n});\n\nconst isSchema = obj => obj && obj.__isYupSchema__;\n\nclass Condition {\n  static fromOptions(refs, config) {\n    if (!config.then && !config.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    let {\n      is,\n      then,\n      otherwise\n    } = config;\n    let check = typeof is === 'function' ? is : (...values) => values.every(value => value === is);\n    return new Condition(refs, (values, schema) => {\n      var _branch;\n      let branch = check(...values) ? then : otherwise;\n      return (_branch = branch == null ? void 0 : branch(schema)) != null ? _branch : schema;\n    });\n  }\n  constructor(refs, builder) {\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n    this.fn = builder;\n  }\n  resolve(base, options) {\n    let values = this.refs.map(ref =>\n    // TODO: ? operator here?\n    ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context));\n    let schema = this.fn(values, base, options);\n    if (schema === undefined ||\n    // @ts-ignore this can be base\n    schema === base) {\n      return base;\n    }\n    if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n    return schema.resolve(options);\n  }\n}\n\nconst prefixes = {\n  context: '$',\n  value: '.'\n};\nfunction create$9(key, options) {\n  return new Reference(key, options);\n}\nclass Reference {\n  constructor(key, options = {}) {\n    this.key = void 0;\n    this.isContext = void 0;\n    this.isValue = void 0;\n    this.isSibling = void 0;\n    this.path = void 0;\n    this.getter = void 0;\n    this.map = void 0;\n    if (typeof key !== 'string') throw new TypeError('ref must be a string, got: ' + key);\n    this.key = key.trim();\n    if (key === '') throw new TypeError('ref must be a non-empty string');\n    this.isContext = this.key[0] === prefixes.context;\n    this.isValue = this.key[0] === prefixes.value;\n    this.isSibling = !this.isContext && !this.isValue;\n    let prefix = this.isContext ? prefixes.context : this.isValue ? prefixes.value : '';\n    this.path = this.key.slice(prefix.length);\n    this.getter = this.path && getter(this.path, true);\n    this.map = options.map;\n  }\n  getValue(value, parent, context) {\n    let result = this.isContext ? context : this.isValue ? value : parent;\n    if (this.getter) result = this.getter(result || {});\n    if (this.map) result = this.map(result);\n    return result;\n  }\n\n  /**\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @param {Object=} options.context\n   * @param {Object=} options.parent\n   */\n  cast(value, options) {\n    return this.getValue(value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n  }\n  resolve() {\n    return this;\n  }\n  describe() {\n    return {\n      type: 'ref',\n      key: this.key\n    };\n  }\n  toString() {\n    return `Ref(${this.key})`;\n  }\n  static isRef(value) {\n    return value && value.__isYupRef;\n  }\n}\n\n// @ts-ignore\nReference.prototype.__isYupRef = true;\n\nconst isAbsent = value => value == null;\n\nfunction createValidation(config) {\n  function validate({\n    value,\n    path = '',\n    options,\n    originalValue,\n    schema\n  }, panic, next) {\n    const {\n      name,\n      test,\n      params,\n      message,\n      skipAbsent\n    } = config;\n    let {\n      parent,\n      context,\n      abortEarly = schema.spec.abortEarly,\n      disableStackTrace = schema.spec.disableStackTrace\n    } = options;\n    function resolve(item) {\n      return Reference.isRef(item) ? item.getValue(value, parent, context) : item;\n    }\n    function createError(overrides = {}) {\n      var _overrides$disableSta;\n      const nextParams = Object.assign({\n        value,\n        originalValue,\n        label: schema.spec.label,\n        path: overrides.path || path,\n        spec: schema.spec\n      }, params, overrides.params);\n      for (const key of Object.keys(nextParams)) nextParams[key] = resolve(nextParams[key]);\n      const error = new ValidationError(ValidationError.formatError(overrides.message || message, nextParams), value, nextParams.path, overrides.type || name, (_overrides$disableSta = overrides.disableStackTrace) != null ? _overrides$disableSta : disableStackTrace);\n      error.params = nextParams;\n      return error;\n    }\n    const invalid = abortEarly ? panic : next;\n    let ctx = {\n      path,\n      parent,\n      type: name,\n      from: options.from,\n      createError,\n      resolve,\n      options,\n      originalValue,\n      schema\n    };\n    const handleResult = validOrError => {\n      if (ValidationError.isError(validOrError)) invalid(validOrError);else if (!validOrError) invalid(createError());else next(null);\n    };\n    const handleError = err => {\n      if (ValidationError.isError(err)) invalid(err);else panic(err);\n    };\n    const shouldSkip = skipAbsent && isAbsent(value);\n    if (shouldSkip) {\n      return handleResult(true);\n    }\n    let result;\n    try {\n      var _result;\n      result = test.call(ctx, value, ctx);\n      if (typeof ((_result = result) == null ? void 0 : _result.then) === 'function') {\n        if (options.sync) {\n          throw new Error(`Validation test of type: \"${ctx.type}\" returned a Promise during a synchronous validate. ` + `This test will finish after the validate call has returned`);\n        }\n        return Promise.resolve(result).then(handleResult, handleError);\n      }\n    } catch (err) {\n      handleError(err);\n      return;\n    }\n    handleResult(result);\n  }\n  validate.OPTIONS = config;\n  return validate;\n}\n\nfunction getIn(schema, path, value, context = value) {\n  let parent, lastPart, lastPartDebug;\n\n  // root path: ''\n  if (!path) return {\n    parent,\n    parentPath: path,\n    schema\n  };\n  forEach(path, (_part, isBracket, isArray) => {\n    let part = isBracket ? _part.slice(1, _part.length - 1) : _part;\n    schema = schema.resolve({\n      context,\n      parent,\n      value\n    });\n    let isTuple = schema.type === 'tuple';\n    let idx = isArray ? parseInt(part, 10) : 0;\n    if (schema.innerType || isTuple) {\n      if (isTuple && !isArray) throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part \"${lastPartDebug}\" must contain an index to the tuple element, e.g. \"${lastPartDebug}[0]\"`);\n      if (value && idx >= value.length) {\n        throw new Error(`Yup.reach cannot resolve an array item at index: ${_part}, in the path: ${path}. ` + `because there is no value at that index. `);\n      }\n      parent = value;\n      value = value && value[idx];\n      schema = isTuple ? schema.spec.types[idx] : schema.innerType;\n    }\n\n    // sometimes the array index part of a path doesn't exist: \"nested.arr.child\"\n    // in these cases the current part is the next schema and should be processed\n    // in this iteration. For cases where the index signature is included this\n    // check will fail and we'll handle the `child` part on the next iteration like normal\n    if (!isArray) {\n      if (!schema.fields || !schema.fields[part]) throw new Error(`The schema does not contain the path: ${path}. ` + `(failed at: ${lastPartDebug} which is a type: \"${schema.type}\")`);\n      parent = value;\n      value = value && value[part];\n      schema = schema.fields[part];\n    }\n    lastPart = part;\n    lastPartDebug = isBracket ? '[' + _part + ']' : '.' + _part;\n  });\n  return {\n    schema,\n    parent,\n    parentPath: lastPart\n  };\n}\nfunction reach(obj, path, value, context) {\n  return getIn(obj, path, value, context).schema;\n}\n\nclass ReferenceSet extends Set {\n  describe() {\n    const description = [];\n    for (const item of this.values()) {\n      description.push(Reference.isRef(item) ? item.describe() : item);\n    }\n    return description;\n  }\n  resolveAll(resolve) {\n    let result = [];\n    for (const item of this.values()) {\n      result.push(resolve(item));\n    }\n    return result;\n  }\n  clone() {\n    return new ReferenceSet(this.values());\n  }\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.forEach(value => next.add(value));\n    removeItems.forEach(value => next.delete(value));\n    return next;\n  }\n}\n\n// tweaked from https://github.com/Kelin2025/nanoclone/blob/0abeb7635bda9b68ef2277093f76dbe3bf3948e1/src/index.js\nfunction clone(src, seen = new Map()) {\n  if (isSchema(src) || !src || typeof src !== 'object') return src;\n  if (seen.has(src)) return seen.get(src);\n  let copy;\n  if (src instanceof Date) {\n    // Date\n    copy = new Date(src.getTime());\n    seen.set(src, copy);\n  } else if (src instanceof RegExp) {\n    // RegExp\n    copy = new RegExp(src);\n    seen.set(src, copy);\n  } else if (Array.isArray(src)) {\n    // Array\n    copy = new Array(src.length);\n    seen.set(src, copy);\n    for (let i = 0; i < src.length; i++) copy[i] = clone(src[i], seen);\n  } else if (src instanceof Map) {\n    // Map\n    copy = new Map();\n    seen.set(src, copy);\n    for (const [k, v] of src.entries()) copy.set(k, clone(v, seen));\n  } else if (src instanceof Set) {\n    // Set\n    copy = new Set();\n    seen.set(src, copy);\n    for (const v of src) copy.add(clone(v, seen));\n  } else if (src instanceof Object) {\n    // Object\n    copy = {};\n    seen.set(src, copy);\n    for (const [k, v] of Object.entries(src)) copy[k] = clone(v, seen);\n  } else {\n    throw Error(`Unable to clone ${src}`);\n  }\n  return copy;\n}\n\n// If `CustomSchemaMeta` isn't extended with any keys, we'll fall back to a\n// loose Record definition allowing free form usage.\nclass Schema {\n  constructor(options) {\n    this.type = void 0;\n    this.deps = [];\n    this.tests = void 0;\n    this.transforms = void 0;\n    this.conditions = [];\n    this._mutate = void 0;\n    this.internalTests = {};\n    this._whitelist = new ReferenceSet();\n    this._blacklist = new ReferenceSet();\n    this.exclusiveTests = Object.create(null);\n    this._typeCheck = void 0;\n    this.spec = void 0;\n    this.tests = [];\n    this.transforms = [];\n    this.withMutation(() => {\n      this.typeError(mixed.notType);\n    });\n    this.type = options.type;\n    this._typeCheck = options.check;\n    this.spec = Object.assign({\n      strip: false,\n      strict: false,\n      abortEarly: true,\n      recursive: true,\n      disableStackTrace: false,\n      nullable: false,\n      optional: true,\n      coerce: true\n    }, options == null ? void 0 : options.spec);\n    this.withMutation(s => {\n      s.nonNullable();\n    });\n  }\n\n  // TODO: remove\n  get _type() {\n    return this.type;\n  }\n  clone(spec) {\n    if (this._mutate) {\n      if (spec) Object.assign(this.spec, spec);\n      return this;\n    }\n\n    // if the nested value is a schema we can skip cloning, since\n    // they are already immutable\n    const next = Object.create(Object.getPrototypeOf(this));\n\n    // @ts-expect-error this is readonly\n    next.type = this.type;\n    next._typeCheck = this._typeCheck;\n    next._whitelist = this._whitelist.clone();\n    next._blacklist = this._blacklist.clone();\n    next.internalTests = Object.assign({}, this.internalTests);\n    next.exclusiveTests = Object.assign({}, this.exclusiveTests);\n\n    // @ts-expect-error this is readonly\n    next.deps = [...this.deps];\n    next.conditions = [...this.conditions];\n    next.tests = [...this.tests];\n    next.transforms = [...this.transforms];\n    next.spec = clone(Object.assign({}, this.spec, spec));\n    return next;\n  }\n  label(label) {\n    let next = this.clone();\n    next.spec.label = label;\n    return next;\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n  withMutation(fn) {\n    let before = this._mutate;\n    this._mutate = true;\n    let result = fn(this);\n    this._mutate = before;\n    return result;\n  }\n  concat(schema) {\n    if (!schema || schema === this) return this;\n    if (schema.type !== this.type && this.type !== 'mixed') throw new TypeError(`You cannot \\`concat()\\` schema's of different types: ${this.type} and ${schema.type}`);\n    let base = this;\n    let combined = schema.clone();\n    const mergedSpec = Object.assign({}, base.spec, combined.spec);\n    combined.spec = mergedSpec;\n    combined.internalTests = Object.assign({}, base.internalTests, combined.internalTests);\n\n    // manually merge the blacklist/whitelist (the other `schema` takes\n    // precedence in case of conflicts)\n    combined._whitelist = base._whitelist.merge(schema._whitelist, schema._blacklist);\n    combined._blacklist = base._blacklist.merge(schema._blacklist, schema._whitelist);\n\n    // start with the current tests\n    combined.tests = base.tests;\n    combined.exclusiveTests = base.exclusiveTests;\n\n    // manually add the new tests to ensure\n    // the deduping logic is consistent\n    combined.withMutation(next => {\n      schema.tests.forEach(fn => {\n        next.test(fn.OPTIONS);\n      });\n    });\n    combined.transforms = [...base.transforms, ...combined.transforms];\n    return combined;\n  }\n  isType(v) {\n    if (v == null) {\n      if (this.spec.nullable && v === null) return true;\n      if (this.spec.optional && v === undefined) return true;\n      return false;\n    }\n    return this._typeCheck(v);\n  }\n  resolve(options) {\n    let schema = this;\n    if (schema.conditions.length) {\n      let conditions = schema.conditions;\n      schema = schema.clone();\n      schema.conditions = [];\n      schema = conditions.reduce((prevSchema, condition) => condition.resolve(prevSchema, options), schema);\n      schema = schema.resolve(options);\n    }\n    return schema;\n  }\n  resolveOptions(options) {\n    var _options$strict, _options$abortEarly, _options$recursive, _options$disableStack;\n    return Object.assign({}, options, {\n      from: options.from || [],\n      strict: (_options$strict = options.strict) != null ? _options$strict : this.spec.strict,\n      abortEarly: (_options$abortEarly = options.abortEarly) != null ? _options$abortEarly : this.spec.abortEarly,\n      recursive: (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive,\n      disableStackTrace: (_options$disableStack = options.disableStackTrace) != null ? _options$disableStack : this.spec.disableStackTrace\n    });\n  }\n\n  /**\n   * Run the configured transform pipeline over an input value.\n   */\n\n  cast(value, options = {}) {\n    let resolvedSchema = this.resolve(Object.assign({\n      value\n    }, options));\n    let allowOptionality = options.assert === 'ignore-optionality';\n    let result = resolvedSchema._cast(value, options);\n    if (options.assert !== false && !resolvedSchema.isType(result)) {\n      if (allowOptionality && isAbsent(result)) {\n        return result;\n      }\n      let formattedValue = printValue(value);\n      let formattedResult = printValue(result);\n      throw new TypeError(`The value of ${options.path || 'field'} could not be cast to a value ` + `that satisfies the schema type: \"${resolvedSchema.type}\". \\n\\n` + `attempted value: ${formattedValue} \\n` + (formattedResult !== formattedValue ? `result of cast: ${formattedResult}` : ''));\n    }\n    return result;\n  }\n  _cast(rawValue, options) {\n    let value = rawValue === undefined ? rawValue : this.transforms.reduce((prevValue, fn) => fn.call(this, prevValue, rawValue, this), rawValue);\n    if (value === undefined) {\n      value = this.getDefault(options);\n    }\n    return value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      path,\n      originalValue = _value,\n      strict = this.spec.strict\n    } = options;\n    let value = _value;\n    if (!strict) {\n      value = this._cast(value, Object.assign({\n        assert: false\n      }, options));\n    }\n    let initialTests = [];\n    for (let test of Object.values(this.internalTests)) {\n      if (test) initialTests.push(test);\n    }\n    this.runTests({\n      path,\n      value,\n      originalValue,\n      options,\n      tests: initialTests\n    }, panic, initialErrors => {\n      // even if we aren't ending early we can't proceed further if the types aren't correct\n      if (initialErrors.length) {\n        return next(initialErrors, value);\n      }\n      this.runTests({\n        path,\n        value,\n        originalValue,\n        options,\n        tests: this.tests\n      }, panic, next);\n    });\n  }\n\n  /**\n   * Executes a set of validations, either schema, produced Tests or a nested\n   * schema validate result.\n   */\n  runTests(runOptions, panic, next) {\n    let fired = false;\n    let {\n      tests,\n      value,\n      originalValue,\n      path,\n      options\n    } = runOptions;\n    let panicOnce = arg => {\n      if (fired) return;\n      fired = true;\n      panic(arg, value);\n    };\n    let nextOnce = arg => {\n      if (fired) return;\n      fired = true;\n      next(arg, value);\n    };\n    let count = tests.length;\n    let nestedErrors = [];\n    if (!count) return nextOnce([]);\n    let args = {\n      value,\n      originalValue,\n      path,\n      options,\n      schema: this\n    };\n    for (let i = 0; i < tests.length; i++) {\n      const test = tests[i];\n      test(args, panicOnce, function finishTestRun(err) {\n        if (err) {\n          Array.isArray(err) ? nestedErrors.push(...err) : nestedErrors.push(err);\n        }\n        if (--count <= 0) {\n          nextOnce(nestedErrors);\n        }\n      });\n    }\n  }\n  asNestedTest({\n    key,\n    index,\n    parent,\n    parentPath,\n    originalParent,\n    options\n  }) {\n    const k = key != null ? key : index;\n    if (k == null) {\n      throw TypeError('Must include `key` or `index` for nested validations');\n    }\n    const isIndex = typeof k === 'number';\n    let value = parent[k];\n    const testOptions = Object.assign({}, options, {\n      // Nested validations fields are always strict:\n      //    1. parent isn't strict so the casting will also have cast inner values\n      //    2. parent is strict in which case the nested values weren't cast either\n      strict: true,\n      parent,\n      value,\n      originalValue: originalParent[k],\n      // FIXME: tests depend on `index` being passed around deeply,\n      //   we should not let the options.key/index bleed through\n      key: undefined,\n      // index: undefined,\n      [isIndex ? 'index' : 'key']: k,\n      path: isIndex || k.includes('.') ? `${parentPath || ''}[${value ? k : `\"${k}\"`}]` : (parentPath ? `${parentPath}.` : '') + key\n    });\n    return (_, panic, next) => this.resolve(testOptions)._validate(value, testOptions, panic, next);\n  }\n  validate(value, options) {\n    var _options$disableStack2;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let disableStackTrace = (_options$disableStack2 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack2 : schema.spec.disableStackTrace;\n    return new Promise((resolve, reject) => schema._validate(value, options, (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      reject(error);\n    }, (errors, validated) => {\n      if (errors.length) reject(new ValidationError(errors, validated, undefined, undefined, disableStackTrace));else resolve(validated);\n    }));\n  }\n  validateSync(value, options) {\n    var _options$disableStack3;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let result;\n    let disableStackTrace = (_options$disableStack3 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack3 : schema.spec.disableStackTrace;\n    schema._validate(value, Object.assign({}, options, {\n      sync: true\n    }), (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      throw error;\n    }, (errors, validated) => {\n      if (errors.length) throw new ValidationError(errors, value, undefined, undefined, disableStackTrace);\n      result = validated;\n    });\n    return result;\n  }\n  isValid(value, options) {\n    return this.validate(value, options).then(() => true, err => {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    });\n  }\n  isValidSync(value, options) {\n    try {\n      this.validateSync(value, options);\n      return true;\n    } catch (err) {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    }\n  }\n  _getDefault(options) {\n    let defaultValue = this.spec.default;\n    if (defaultValue == null) {\n      return defaultValue;\n    }\n    return typeof defaultValue === 'function' ? defaultValue.call(this, options) : clone(defaultValue);\n  }\n  getDefault(options\n  // If schema is defaulted we know it's at least not undefined\n  ) {\n    let schema = this.resolve(options || {});\n    return schema._getDefault(options);\n  }\n  default(def) {\n    if (arguments.length === 0) {\n      return this._getDefault();\n    }\n    let next = this.clone({\n      default: def\n    });\n    return next;\n  }\n  strict(isStrict = true) {\n    return this.clone({\n      strict: isStrict\n    });\n  }\n  nullability(nullable, message) {\n    const next = this.clone({\n      nullable\n    });\n    next.internalTests.nullable = createValidation({\n      message,\n      name: 'nullable',\n      test(value) {\n        return value === null ? this.schema.spec.nullable : true;\n      }\n    });\n    return next;\n  }\n  optionality(optional, message) {\n    const next = this.clone({\n      optional\n    });\n    next.internalTests.optionality = createValidation({\n      message,\n      name: 'optionality',\n      test(value) {\n        return value === undefined ? this.schema.spec.optional : true;\n      }\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  defined(message = mixed.defined) {\n    return this.optionality(false, message);\n  }\n  nullable() {\n    return this.nullability(true);\n  }\n  nonNullable(message = mixed.notNull) {\n    return this.nullability(false, message);\n  }\n  required(message = mixed.required) {\n    return this.clone().withMutation(next => next.nonNullable(message).defined(message));\n  }\n  notRequired() {\n    return this.clone().withMutation(next => next.nullable().optional());\n  }\n  transform(fn) {\n    let next = this.clone();\n    next.transforms.push(fn);\n    return next;\n  }\n\n  /**\n   * Adds a test function to the schema's queue of tests.\n   * tests can be exclusive or non-exclusive.\n   *\n   * - exclusive tests, will replace any existing tests of the same name.\n   * - non-exclusive: can be stacked\n   *\n   * If a non-exclusive test is added to a schema with an exclusive test of the same name\n   * the exclusive test is removed and further tests of the same name will be stacked.\n   *\n   * If an exclusive test is added to a schema with non-exclusive tests of the same name\n   * the previous tests are removed and further tests of the same name will replace each other.\n   */\n\n  test(...args) {\n    let opts;\n    if (args.length === 1) {\n      if (typeof args[0] === 'function') {\n        opts = {\n          test: args[0]\n        };\n      } else {\n        opts = args[0];\n      }\n    } else if (args.length === 2) {\n      opts = {\n        name: args[0],\n        test: args[1]\n      };\n    } else {\n      opts = {\n        name: args[0],\n        message: args[1],\n        test: args[2]\n      };\n    }\n    if (opts.message === undefined) opts.message = mixed.default;\n    if (typeof opts.test !== 'function') throw new TypeError('`test` is a required parameters');\n    let next = this.clone();\n    let validate = createValidation(opts);\n    let isExclusive = opts.exclusive || opts.name && next.exclusiveTests[opts.name] === true;\n    if (opts.exclusive) {\n      if (!opts.name) throw new TypeError('Exclusive tests must provide a unique `name` identifying the test');\n    }\n    if (opts.name) next.exclusiveTests[opts.name] = !!opts.exclusive;\n    next.tests = next.tests.filter(fn => {\n      if (fn.OPTIONS.name === opts.name) {\n        if (isExclusive) return false;\n        if (fn.OPTIONS.test === validate.OPTIONS.test) return false;\n      }\n      return true;\n    });\n    next.tests.push(validate);\n    return next;\n  }\n  when(keys, options) {\n    if (!Array.isArray(keys) && typeof keys !== 'string') {\n      options = keys;\n      keys = '.';\n    }\n    let next = this.clone();\n    let deps = toArray(keys).map(key => new Reference(key));\n    deps.forEach(dep => {\n      // @ts-ignore readonly array\n      if (dep.isSibling) next.deps.push(dep.key);\n    });\n    next.conditions.push(typeof options === 'function' ? new Condition(deps, options) : Condition.fromOptions(deps, options));\n    return next;\n  }\n  typeError(message) {\n    let next = this.clone();\n    next.internalTests.typeError = createValidation({\n      message,\n      name: 'typeError',\n      skipAbsent: true,\n      test(value) {\n        if (!this.schema._typeCheck(value)) return this.createError({\n          params: {\n            type: this.schema.type\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  oneOf(enums, message = mixed.oneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._whitelist.add(val);\n      next._blacklist.delete(val);\n    });\n    next.internalTests.whiteList = createValidation({\n      message,\n      name: 'oneOf',\n      skipAbsent: true,\n      test(value) {\n        let valids = this.schema._whitelist;\n        let resolved = valids.resolveAll(this.resolve);\n        return resolved.includes(value) ? true : this.createError({\n          params: {\n            values: Array.from(valids).join(', '),\n            resolved\n          }\n        });\n      }\n    });\n    return next;\n  }\n  notOneOf(enums, message = mixed.notOneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._blacklist.add(val);\n      next._whitelist.delete(val);\n    });\n    next.internalTests.blacklist = createValidation({\n      message,\n      name: 'notOneOf',\n      test(value) {\n        let invalids = this.schema._blacklist;\n        let resolved = invalids.resolveAll(this.resolve);\n        if (resolved.includes(value)) return this.createError({\n          params: {\n            values: Array.from(invalids).join(', '),\n            resolved\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  strip(strip = true) {\n    let next = this.clone();\n    next.spec.strip = strip;\n    return next;\n  }\n\n  /**\n   * Return a serialized description of the schema including validations, flags, types etc.\n   *\n   * @param options Provide any needed context for resolving runtime schema alterations (lazy, when conditions, etc).\n   */\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const {\n      label,\n      meta,\n      optional,\n      nullable\n    } = next.spec;\n    const description = {\n      meta,\n      label,\n      optional,\n      nullable,\n      default: next.getDefault(options),\n      type: next.type,\n      oneOf: next._whitelist.describe(),\n      notOneOf: next._blacklist.describe(),\n      tests: next.tests.map(fn => ({\n        name: fn.OPTIONS.name,\n        params: fn.OPTIONS.params\n      })).filter((n, idx, list) => list.findIndex(c => c.name === n.name) === idx)\n    };\n    return description;\n  }\n}\n// @ts-expect-error\nSchema.prototype.__isYupSchema__ = true;\nfor (const method of ['validate', 'validateSync']) Schema.prototype[`${method}At`] = function (path, value, options = {}) {\n  const {\n    parent,\n    parentPath,\n    schema\n  } = getIn(this, path, value, options.context);\n  return schema[method](parent && parent[parentPath], Object.assign({}, options, {\n    parent,\n    path\n  }));\n};\nfor (const alias of ['equals', 'is']) Schema.prototype[alias] = Schema.prototype.oneOf;\nfor (const alias of ['not', 'nope']) Schema.prototype[alias] = Schema.prototype.notOneOf;\n\nconst returnsTrue = () => true;\nfunction create$8(spec) {\n  return new MixedSchema(spec);\n}\nclass MixedSchema extends Schema {\n  constructor(spec) {\n    super(typeof spec === 'function' ? {\n      type: 'mixed',\n      check: spec\n    } : Object.assign({\n      type: 'mixed',\n      check: returnsTrue\n    }, spec));\n  }\n}\ncreate$8.prototype = MixedSchema.prototype;\n\nfunction create$7() {\n  return new BooleanSchema();\n}\nclass BooleanSchema extends Schema {\n  constructor() {\n    super({\n      type: 'boolean',\n      check(v) {\n        if (v instanceof Boolean) v = v.valueOf();\n        return typeof v === 'boolean';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (ctx.spec.coerce && !ctx.isType(value)) {\n          if (/^(true|1)$/i.test(String(value))) return true;\n          if (/^(false|0)$/i.test(String(value))) return false;\n        }\n        return value;\n      });\n    });\n  }\n  isTrue(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'true'\n      },\n      test(value) {\n        return isAbsent(value) || value === true;\n      }\n    });\n  }\n  isFalse(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'false'\n      },\n      test(value) {\n        return isAbsent(value) || value === false;\n      }\n    });\n  }\n  default(def) {\n    return super.default(def);\n  }\n  defined(msg) {\n    return super.defined(msg);\n  }\n  optional() {\n    return super.optional();\n  }\n  required(msg) {\n    return super.required(msg);\n  }\n  notRequired() {\n    return super.notRequired();\n  }\n  nullable() {\n    return super.nullable();\n  }\n  nonNullable(msg) {\n    return super.nonNullable(msg);\n  }\n  strip(v) {\n    return super.strip(v);\n  }\n}\ncreate$7.prototype = BooleanSchema.prototype;\n\n// Taken from HTML spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nlet rEmail =\n// eslint-disable-next-line\n/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\nlet rUrl =\n// eslint-disable-next-line\n/^((https?|ftp):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n\n// eslint-disable-next-line\nlet rUUID = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nlet isTrimmed = value => isAbsent(value) || value === value.trim();\nlet objStringTag = {}.toString();\nfunction create$6() {\n  return new StringSchema();\n}\nclass StringSchema extends Schema {\n  constructor() {\n    super({\n      type: 'string',\n      check(value) {\n        if (value instanceof String) value = value.valueOf();\n        return typeof value === 'string';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce || ctx.isType(value)) return value;\n\n        // don't ever convert arrays\n        if (Array.isArray(value)) return value;\n        const strValue = value != null && value.toString ? value.toString() : value;\n\n        // no one wants plain objects converted to [Object object]\n        if (strValue === objStringTag) return value;\n        return strValue;\n      });\n    });\n  }\n  required(message) {\n    return super.required(message).withMutation(schema => schema.test({\n      message: message || mixed.required,\n      name: 'required',\n      skipAbsent: true,\n      test: value => !!value.length\n    }));\n  }\n  notRequired() {\n    return super.notRequired().withMutation(schema => {\n      schema.tests = schema.tests.filter(t => t.OPTIONS.name !== 'required');\n      return schema;\n    });\n  }\n  length(length, message = string.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message = string.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = string.max) {\n    return this.test({\n      name: 'max',\n      exclusive: true,\n      message,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  matches(regex, options) {\n    let excludeEmptyString = false;\n    let message;\n    let name;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          excludeEmptyString = false,\n          message,\n          name\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.test({\n      name: name || 'matches',\n      message: message || string.matches,\n      params: {\n        regex\n      },\n      skipAbsent: true,\n      test: value => value === '' && excludeEmptyString || value.search(regex) !== -1\n    });\n  }\n  email(message = string.email) {\n    return this.matches(rEmail, {\n      name: 'email',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  url(message = string.url) {\n    return this.matches(rUrl, {\n      name: 'url',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  uuid(message = string.uuid) {\n    return this.matches(rUUID, {\n      name: 'uuid',\n      message,\n      excludeEmptyString: false\n    });\n  }\n\n  //-- transforms --\n  ensure() {\n    return this.default('').transform(val => val === null ? '' : val);\n  }\n  trim(message = string.trim) {\n    return this.transform(val => val != null ? val.trim() : val).test({\n      message,\n      name: 'trim',\n      test: isTrimmed\n    });\n  }\n  lowercase(message = string.lowercase) {\n    return this.transform(value => !isAbsent(value) ? value.toLowerCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toLowerCase()\n    });\n  }\n  uppercase(message = string.uppercase) {\n    return this.transform(value => !isAbsent(value) ? value.toUpperCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toUpperCase()\n    });\n  }\n}\ncreate$6.prototype = StringSchema.prototype;\n\n//\n// String Interfaces\n//\n\nlet isNaN$1 = value => value != +value;\nfunction create$5() {\n  return new NumberSchema();\n}\nclass NumberSchema extends Schema {\n  constructor() {\n    super({\n      type: 'number',\n      check(value) {\n        if (value instanceof Number) value = value.valueOf();\n        return typeof value === 'number' && !isNaN$1(value);\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce) return value;\n        let parsed = value;\n        if (typeof parsed === 'string') {\n          parsed = parsed.replace(/\\s/g, '');\n          if (parsed === '') return NaN;\n          // don't use parseFloat to avoid positives on alpha-numeric strings\n          parsed = +parsed;\n        }\n\n        // null -> NaN isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (ctx.isType(parsed) || parsed === null) return parsed;\n        return parseFloat(parsed);\n      });\n    });\n  }\n  min(min, message = number.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = number.max) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(max);\n      }\n    });\n  }\n  lessThan(less, message = number.lessThan) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        less\n      },\n      skipAbsent: true,\n      test(value) {\n        return value < this.resolve(less);\n      }\n    });\n  }\n  moreThan(more, message = number.moreThan) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        more\n      },\n      skipAbsent: true,\n      test(value) {\n        return value > this.resolve(more);\n      }\n    });\n  }\n  positive(msg = number.positive) {\n    return this.moreThan(0, msg);\n  }\n  negative(msg = number.negative) {\n    return this.lessThan(0, msg);\n  }\n  integer(message = number.integer) {\n    return this.test({\n      name: 'integer',\n      message,\n      skipAbsent: true,\n      test: val => Number.isInteger(val)\n    });\n  }\n  truncate() {\n    return this.transform(value => !isAbsent(value) ? value | 0 : value);\n  }\n  round(method) {\n    var _method;\n    let avail = ['ceil', 'floor', 'round', 'trunc'];\n    method = ((_method = method) == null ? void 0 : _method.toLowerCase()) || 'round';\n\n    // this exists for symemtry with the new Math.trunc\n    if (method === 'trunc') return this.truncate();\n    if (avail.indexOf(method.toLowerCase()) === -1) throw new TypeError('Only valid options for round() are: ' + avail.join(', '));\n    return this.transform(value => !isAbsent(value) ? Math[method](value) : value);\n  }\n}\ncreate$5.prototype = NumberSchema.prototype;\n\n//\n// Number Interfaces\n//\n\n/**\n * This file is a modified version of the file from the following repository:\n * Date.parse with progressive enhancement for ISO 8601 <https://github.com/csnover/js-iso8601>\n * NON-CONFORMANT EDITION.\n * © 2011 Colin Snover <http://zetafleet.com>\n * Released under MIT license.\n */\n\n// prettier-ignore\n//                1 YYYY                2 MM        3 DD              4 HH     5 mm        6 ss           7 msec         8 Z 9 ±   10 tzHH    11 tzmm\nconst isoReg = /^(\\d{4}|[+-]\\d{6})(?:-?(\\d{2})(?:-?(\\d{2}))?)?(?:[ T]?(\\d{2}):?(\\d{2})(?::?(\\d{2})(?:[,.](\\d{1,}))?)?(?:(Z)|([+-])(\\d{2})(?::?(\\d{2}))?)?)?$/;\nfunction toNumber(str, defaultValue = 0) {\n  return Number(str) || defaultValue;\n}\nfunction parseIsoDate(date) {\n  const regexResult = isoReg.exec(date);\n  if (!regexResult) return Date.parse ? Date.parse(date) : Number.NaN;\n\n  // use of toNumber() avoids NaN timestamps caused by “undefined”\n  // values being passed to Date constructor\n  const struct = {\n    year: toNumber(regexResult[1]),\n    month: toNumber(regexResult[2], 1) - 1,\n    day: toNumber(regexResult[3], 1),\n    hour: toNumber(regexResult[4]),\n    minute: toNumber(regexResult[5]),\n    second: toNumber(regexResult[6]),\n    millisecond: regexResult[7] ?\n    // allow arbitrary sub-second precision beyond milliseconds\n    toNumber(regexResult[7].substring(0, 3)) : 0,\n    z: regexResult[8] || undefined,\n    plusMinus: regexResult[9] || undefined,\n    hourOffset: toNumber(regexResult[10]),\n    minuteOffset: toNumber(regexResult[11])\n  };\n\n  // timestamps without timezone identifiers should be considered local time\n  if (struct.z === undefined && struct.plusMinus === undefined) {\n    return new Date(struct.year, struct.month, struct.day, struct.hour, struct.minute, struct.second, struct.millisecond).valueOf();\n  }\n  let totalMinutesOffset = 0;\n  if (struct.z !== 'Z' && struct.plusMinus !== undefined) {\n    totalMinutesOffset = struct.hourOffset * 60 + struct.minuteOffset;\n    if (struct.plusMinus === '+') totalMinutesOffset = 0 - totalMinutesOffset;\n  }\n  return Date.UTC(struct.year, struct.month, struct.day, struct.hour, struct.minute + totalMinutesOffset, struct.second, struct.millisecond);\n}\n\nlet invalidDate = new Date('');\nlet isDate = obj => Object.prototype.toString.call(obj) === '[object Date]';\nfunction create$4() {\n  return new DateSchema();\n}\nclass DateSchema extends Schema {\n  constructor() {\n    super({\n      type: 'date',\n      check(v) {\n        return isDate(v) && !isNaN(v.getTime());\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        // null -> InvalidDate isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (!ctx.spec.coerce || ctx.isType(value) || value === null) return value;\n        value = parseIsoDate(value);\n\n        // 0 is a valid timestamp equivalent to 1970-01-01T00:00:00Z(unix epoch) or before.\n        return !isNaN(value) ? new Date(value) : DateSchema.INVALID_DATE;\n      });\n    });\n  }\n  prepareParam(ref, name) {\n    let param;\n    if (!Reference.isRef(ref)) {\n      let cast = this.cast(ref);\n      if (!this._typeCheck(cast)) throw new TypeError(`\\`${name}\\` must be a Date or a value that can be \\`cast()\\` to a Date`);\n      param = cast;\n    } else {\n      param = ref;\n    }\n    return param;\n  }\n  min(min, message = date.min) {\n    let limit = this.prepareParam(min, 'min');\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(limit);\n      }\n    });\n  }\n  max(max, message = date.max) {\n    let limit = this.prepareParam(max, 'max');\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(limit);\n      }\n    });\n  }\n}\nDateSchema.INVALID_DATE = invalidDate;\ncreate$4.prototype = DateSchema.prototype;\ncreate$4.INVALID_DATE = invalidDate;\n\n// @ts-expect-error\nfunction sortFields(fields, excludedEdges = []) {\n  let edges = [];\n  let nodes = new Set();\n  let excludes = new Set(excludedEdges.map(([a, b]) => `${a}-${b}`));\n  function addNode(depPath, key) {\n    let node = split(depPath)[0];\n    nodes.add(node);\n    if (!excludes.has(`${key}-${node}`)) edges.push([key, node]);\n  }\n  for (const key of Object.keys(fields)) {\n    let value = fields[key];\n    nodes.add(key);\n    if (Reference.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && 'deps' in value) value.deps.forEach(path => addNode(path, key));\n  }\n  return toposort.array(Array.from(nodes), edges).reverse();\n}\n\nfunction findIndex(arr, err) {\n  let idx = Infinity;\n  arr.some((key, ii) => {\n    var _err$path;\n    if ((_err$path = err.path) != null && _err$path.includes(key)) {\n      idx = ii;\n      return true;\n    }\n  });\n  return idx;\n}\nfunction sortByKeyOrder(keys) {\n  return (a, b) => {\n    return findIndex(keys, a) - findIndex(keys, b);\n  };\n}\n\nconst parseJson = (value, _, ctx) => {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  let parsed = value;\n  try {\n    parsed = JSON.parse(value);\n  } catch (err) {\n    /* */\n  }\n  return ctx.isType(parsed) ? parsed : value;\n};\n\n// @ts-ignore\nfunction deepPartial(schema) {\n  if ('fields' in schema) {\n    const partial = {};\n    for (const [key, fieldSchema] of Object.entries(schema.fields)) {\n      partial[key] = deepPartial(fieldSchema);\n    }\n    return schema.setFields(partial);\n  }\n  if (schema.type === 'array') {\n    const nextArray = schema.optional();\n    if (nextArray.innerType) nextArray.innerType = deepPartial(nextArray.innerType);\n    return nextArray;\n  }\n  if (schema.type === 'tuple') {\n    return schema.optional().clone({\n      types: schema.spec.types.map(deepPartial)\n    });\n  }\n  if ('optional' in schema) {\n    return schema.optional();\n  }\n  return schema;\n}\nconst deepHas = (obj, p) => {\n  const path = [...normalizePath(p)];\n  if (path.length === 1) return path[0] in obj;\n  let last = path.pop();\n  let parent = getter(join(path), true)(obj);\n  return !!(parent && last in parent);\n};\nlet isObject = obj => Object.prototype.toString.call(obj) === '[object Object]';\nfunction unknown(ctx, value) {\n  let known = Object.keys(ctx.fields);\n  return Object.keys(value).filter(key => known.indexOf(key) === -1);\n}\nconst defaultSort = sortByKeyOrder([]);\nfunction create$3(spec) {\n  return new ObjectSchema(spec);\n}\nclass ObjectSchema extends Schema {\n  constructor(spec) {\n    super({\n      type: 'object',\n      check(value) {\n        return isObject(value) || typeof value === 'function';\n      }\n    });\n    this.fields = Object.create(null);\n    this._sortErrors = defaultSort;\n    this._nodes = [];\n    this._excludedEdges = [];\n    this.withMutation(() => {\n      if (spec) {\n        this.shape(spec);\n      }\n    });\n  }\n  _cast(_value, options = {}) {\n    var _options$stripUnknown;\n    let value = super._cast(_value, options);\n\n    //should ignore nulls here\n    if (value === undefined) return this.getDefault(options);\n    if (!this._typeCheck(value)) return value;\n    let fields = this.fields;\n    let strip = (_options$stripUnknown = options.stripUnknown) != null ? _options$stripUnknown : this.spec.noUnknown;\n    let props = [].concat(this._nodes, Object.keys(value).filter(v => !this._nodes.includes(v)));\n    let intermediateValue = {}; // is filled during the transform below\n    let innerOptions = Object.assign({}, options, {\n      parent: intermediateValue,\n      __validating: options.__validating || false\n    });\n    let isChanged = false;\n    for (const prop of props) {\n      let field = fields[prop];\n      let exists = (prop in value);\n      if (field) {\n        let fieldValue;\n        let inputValue = value[prop];\n\n        // safe to mutate since this is fired in sequence\n        innerOptions.path = (options.path ? `${options.path}.` : '') + prop;\n        field = field.resolve({\n          value: inputValue,\n          context: options.context,\n          parent: intermediateValue\n        });\n        let fieldSpec = field instanceof Schema ? field.spec : undefined;\n        let strict = fieldSpec == null ? void 0 : fieldSpec.strict;\n        if (fieldSpec != null && fieldSpec.strip) {\n          isChanged = isChanged || prop in value;\n          continue;\n        }\n        fieldValue = !options.__validating || !strict ?\n        // TODO: use _cast, this is double resolving\n        field.cast(value[prop], innerOptions) : value[prop];\n        if (fieldValue !== undefined) {\n          intermediateValue[prop] = fieldValue;\n        }\n      } else if (exists && !strip) {\n        intermediateValue[prop] = value[prop];\n      }\n      if (exists !== prop in intermediateValue || intermediateValue[prop] !== value[prop]) {\n        isChanged = true;\n      }\n    }\n    return isChanged ? intermediateValue : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      from = [],\n      originalValue = _value,\n      recursive = this.spec.recursive\n    } = options;\n    options.from = [{\n      schema: this,\n      value: originalValue\n    }, ...from];\n    // this flag is needed for handling `strict` correctly in the context of\n    // validation vs just casting. e.g strict() on a field is only used when validating\n    options.__validating = true;\n    options.originalValue = originalValue;\n    super._validate(_value, options, panic, (objectErrors, value) => {\n      if (!recursive || !isObject(value)) {\n        next(objectErrors, value);\n        return;\n      }\n      originalValue = originalValue || value;\n      let tests = [];\n      for (let key of this._nodes) {\n        let field = this.fields[key];\n        if (!field || Reference.isRef(field)) {\n          continue;\n        }\n        tests.push(field.asNestedTest({\n          options,\n          key,\n          parent: value,\n          parentPath: options.path,\n          originalParent: originalValue\n        }));\n      }\n      this.runTests({\n        tests,\n        value,\n        originalValue,\n        options\n      }, panic, fieldErrors => {\n        next(fieldErrors.sort(this._sortErrors).concat(objectErrors), value);\n      });\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    next.fields = Object.assign({}, this.fields);\n    next._nodes = this._nodes;\n    next._excludedEdges = this._excludedEdges;\n    next._sortErrors = this._sortErrors;\n    return next;\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n    let nextFields = next.fields;\n    for (let [field, schemaOrRef] of Object.entries(this.fields)) {\n      const target = nextFields[field];\n      nextFields[field] = target === undefined ? schemaOrRef : target;\n    }\n    return next.withMutation(s =>\n    // XXX: excludes here is wrong\n    s.setFields(nextFields, [...this._excludedEdges, ...schema._excludedEdges]));\n  }\n  _getDefault(options) {\n    if ('default' in this.spec) {\n      return super._getDefault(options);\n    }\n\n    // if there is no default set invent one\n    if (!this._nodes.length) {\n      return undefined;\n    }\n    let dft = {};\n    this._nodes.forEach(key => {\n      var _innerOptions;\n      const field = this.fields[key];\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      dft[key] = field && 'getDefault' in field ? field.getDefault(innerOptions) : undefined;\n    });\n    return dft;\n  }\n  setFields(shape, excludedEdges) {\n    let next = this.clone();\n    next.fields = shape;\n    next._nodes = sortFields(shape, excludedEdges);\n    next._sortErrors = sortByKeyOrder(Object.keys(shape));\n    // XXX: this carries over edges which may not be what you want\n    if (excludedEdges) next._excludedEdges = excludedEdges;\n    return next;\n  }\n  shape(additions, excludes = []) {\n    return this.clone().withMutation(next => {\n      let edges = next._excludedEdges;\n      if (excludes.length) {\n        if (!Array.isArray(excludes[0])) excludes = [excludes];\n        edges = [...next._excludedEdges, ...excludes];\n      }\n\n      // XXX: excludes here is wrong\n      return next.setFields(Object.assign(next.fields, additions), edges);\n    });\n  }\n  partial() {\n    const partial = {};\n    for (const [key, schema] of Object.entries(this.fields)) {\n      partial[key] = 'optional' in schema && schema.optional instanceof Function ? schema.optional() : schema;\n    }\n    return this.setFields(partial);\n  }\n  deepPartial() {\n    const next = deepPartial(this);\n    return next;\n  }\n  pick(keys) {\n    const picked = {};\n    for (const key of keys) {\n      if (this.fields[key]) picked[key] = this.fields[key];\n    }\n    return this.setFields(picked, this._excludedEdges.filter(([a, b]) => keys.includes(a) && keys.includes(b)));\n  }\n  omit(keys) {\n    const remaining = [];\n    for (const key of Object.keys(this.fields)) {\n      if (keys.includes(key)) continue;\n      remaining.push(key);\n    }\n    return this.pick(remaining);\n  }\n  from(from, to, alias) {\n    let fromGetter = getter(from, true);\n    return this.transform(obj => {\n      if (!obj) return obj;\n      let newObj = obj;\n      if (deepHas(obj, from)) {\n        newObj = Object.assign({}, obj);\n        if (!alias) delete newObj[from];\n        newObj[to] = fromGetter(obj);\n      }\n      return newObj;\n    });\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n  noUnknown(noAllow = true, message = object.noUnknown) {\n    if (typeof noAllow !== 'boolean') {\n      message = noAllow;\n      noAllow = true;\n    }\n    let next = this.test({\n      name: 'noUnknown',\n      exclusive: true,\n      message: message,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return !noAllow || unknownKeys.length === 0 || this.createError({\n          params: {\n            unknown: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n    next.spec.noUnknown = noAllow;\n    return next;\n  }\n  unknown(allow = true, message = object.noUnknown) {\n    return this.noUnknown(!allow, message);\n  }\n  transformKeys(fn) {\n    return this.transform(obj => {\n      if (!obj) return obj;\n      const result = {};\n      for (const key of Object.keys(obj)) result[fn(key)] = obj[key];\n      return result;\n    });\n  }\n  camelCase() {\n    return this.transformKeys(camelCase);\n  }\n  snakeCase() {\n    return this.transformKeys(snakeCase);\n  }\n  constantCase() {\n    return this.transformKeys(key => snakeCase(key).toUpperCase());\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.fields = {};\n    for (const [key, value] of Object.entries(next.fields)) {\n      var _innerOptions2;\n      let innerOptions = options;\n      if ((_innerOptions2 = innerOptions) != null && _innerOptions2.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      base.fields[key] = value.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$3.prototype = ObjectSchema.prototype;\n\nfunction create$2(type) {\n  return new ArraySchema(type);\n}\nclass ArraySchema extends Schema {\n  constructor(type) {\n    super({\n      type: 'array',\n      spec: {\n        types: type\n      },\n      check(v) {\n        return Array.isArray(v);\n      }\n    });\n\n    // `undefined` specifically means uninitialized, as opposed to \"no subtype\"\n    this.innerType = void 0;\n    this.innerType = type;\n  }\n  _cast(_value, _opts) {\n    const value = super._cast(_value, _opts);\n\n    // should ignore nulls here\n    if (!this._typeCheck(value) || !this.innerType) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = value.map((v, idx) => {\n      const castElement = this.innerType.cast(v, Object.assign({}, _opts, {\n        path: `${_opts.path || ''}[${idx}]`\n      }));\n      if (castElement !== v) {\n        isChanged = true;\n      }\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    var _options$recursive;\n    // let sync = options.sync;\n    // let path = options.path;\n    let innerType = this.innerType;\n    // let endEarly = options.abortEarly ?? this.spec.abortEarly;\n    let recursive = (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive;\n    options.originalValue != null ? options.originalValue : _value;\n    super._validate(_value, options, panic, (arrayErrors, value) => {\n      var _options$originalValu2;\n      if (!recursive || !innerType || !this._typeCheck(value)) {\n        next(arrayErrors, value);\n        return;\n      }\n\n      // #950 Ensure that sparse array empty slots are validated\n      let tests = new Array(value.length);\n      for (let index = 0; index < value.length; index++) {\n        var _options$originalValu;\n        tests[index] = innerType.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(arrayErrors), value));\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    return next;\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    if (schema.innerType)\n      // @ts-expect-error readonly\n      next.innerType = next.innerType ?\n      // @ts-expect-error Lazy doesn't have concat and will break\n      next.innerType.concat(schema.innerType) : schema.innerType;\n    return next;\n  }\n  of(schema) {\n    // FIXME: this should return a new instance of array without the default to be\n    let next = this.clone();\n    if (!isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema not: ' + printValue(schema));\n\n    // @ts-expect-error readonly\n    next.innerType = schema;\n    next.spec = Object.assign({}, next.spec, {\n      types: schema\n    });\n    return next;\n  }\n  length(length, message = array.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message) {\n    message = message || array.min;\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      // FIXME(ts): Array<typeof T>\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message) {\n    message = message || array.max;\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  ensure() {\n    return this.default(() => []).transform((val, original) => {\n      // We don't want to return `null` for nullable schema\n      if (this._typeCheck(val)) return val;\n      return original == null ? [] : [].concat(original);\n    });\n  }\n  compact(rejector) {\n    let reject = !rejector ? v => !!v : (v, i, a) => !rejector(v, i, a);\n    return this.transform(values => values != null ? values.filter(reject) : values);\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    if (next.innerType) {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[0]\n        });\n      }\n      base.innerType = next.innerType.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$2.prototype = ArraySchema.prototype;\n\n// @ts-ignore\nfunction create$1(schemas) {\n  return new TupleSchema(schemas);\n}\nclass TupleSchema extends Schema {\n  constructor(schemas) {\n    super({\n      type: 'tuple',\n      spec: {\n        types: schemas\n      },\n      check(v) {\n        const types = this.spec.types;\n        return Array.isArray(v) && v.length === types.length;\n      }\n    });\n    this.withMutation(() => {\n      this.typeError(tuple.notType);\n    });\n  }\n  _cast(inputValue, options) {\n    const {\n      types\n    } = this.spec;\n    const value = super._cast(inputValue, options);\n    if (!this._typeCheck(value)) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = types.map((type, idx) => {\n      const castElement = type.cast(value[idx], Object.assign({}, options, {\n        path: `${options.path || ''}[${idx}]`\n      }));\n      if (castElement !== value[idx]) isChanged = true;\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let itemTypes = this.spec.types;\n    super._validate(_value, options, panic, (tupleErrors, value) => {\n      var _options$originalValu2;\n      // intentionally not respecting recursive\n      if (!this._typeCheck(value)) {\n        next(tupleErrors, value);\n        return;\n      }\n      let tests = [];\n      for (let [index, itemSchema] of itemTypes.entries()) {\n        var _options$originalValu;\n        tests[index] = itemSchema.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(tupleErrors), value));\n    });\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.innerType = next.spec.types.map((schema, index) => {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[index]\n        });\n      }\n      return schema.describe(innerOptions);\n    });\n    return base;\n  }\n}\ncreate$1.prototype = TupleSchema.prototype;\n\nfunction create(builder) {\n  return new Lazy(builder);\n}\nclass Lazy {\n  constructor(builder) {\n    this.type = 'lazy';\n    this.__isYupSchema__ = true;\n    this.spec = void 0;\n    this._resolve = (value, options = {}) => {\n      let schema = this.builder(value, options);\n      if (!isSchema(schema)) throw new TypeError('lazy() functions must return a valid schema');\n      if (this.spec.optional) schema = schema.optional();\n      return schema.resolve(options);\n    };\n    this.builder = builder;\n    this.spec = {\n      meta: undefined,\n      optional: false\n    };\n  }\n  clone(spec) {\n    const next = new Lazy(this.builder);\n    next.spec = Object.assign({}, this.spec, spec);\n    return next;\n  }\n  optionality(optional) {\n    const next = this.clone({\n      optional\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  resolve(options) {\n    return this._resolve(options.value, options);\n  }\n  cast(value, options) {\n    return this._resolve(value, options).cast(value, options);\n  }\n  asNestedTest(config) {\n    let {\n      key,\n      index,\n      parent,\n      options\n    } = config;\n    let value = parent[index != null ? index : key];\n    return this._resolve(value, Object.assign({}, options, {\n      value,\n      parent\n    })).asNestedTest(config);\n  }\n  validate(value, options) {\n    return this._resolve(value, options).validate(value, options);\n  }\n  validateSync(value, options) {\n    return this._resolve(value, options).validateSync(value, options);\n  }\n  validateAt(path, value, options) {\n    return this._resolve(value, options).validateAt(path, value, options);\n  }\n  validateSyncAt(path, value, options) {\n    return this._resolve(value, options).validateSyncAt(path, value, options);\n  }\n  isValid(value, options) {\n    return this._resolve(value, options).isValid(value, options);\n  }\n  isValidSync(value, options) {\n    return this._resolve(value, options).isValidSync(value, options);\n  }\n  describe(options) {\n    return options ? this.resolve(options).describe(options) : {\n      type: 'lazy',\n      meta: this.spec.meta,\n      label: undefined\n    };\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n}\n\nfunction setLocale(custom) {\n  Object.keys(custom).forEach(type => {\n    // @ts-ignore\n    Object.keys(custom[type]).forEach(method => {\n      // @ts-ignore\n      locale[type][method] = custom[type][method];\n    });\n  });\n}\n\nfunction addMethod(schemaType, name, fn) {\n  if (!schemaType || !isSchema(schemaType.prototype)) throw new TypeError('You must provide a yup schema constructor function');\n  if (typeof name !== 'string') throw new TypeError('A Method name must be provided');\n  if (typeof fn !== 'function') throw new TypeError('Method function must be provided');\n  schemaType.prototype[name] = fn;\n}\n\nexport { ArraySchema, BooleanSchema, DateSchema, MixedSchema, NumberSchema, ObjectSchema, Schema, StringSchema, TupleSchema, ValidationError, addMethod, create$2 as array, create$7 as bool, create$7 as boolean, create$4 as date, locale as defaultLocale, getIn, isSchema, create as lazy, create$8 as mixed, create$5 as number, create$3 as object, printValue, reach, create$9 as ref, setLocale, create$6 as string, create$1 as tuple };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const result = await db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app));\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache?.heartbeats == null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n      // If we failed to construct a heartbeats cache, then return immediately.\n      if (this._heartbeatsCache?.heartbeats == null) {\n        return;\n      }\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache?.heartbeats == null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n"],"names":["_prodErrorMap","prodErrorMap","_DEFAULT_AUTH_ERROR_FACTORY","ErrorFactory","logClient","Logger","_logWarn","msg","logLevel","LogLevel","args","warn","SDK_VERSION","_logError","error","_fail","authOrCode","rest","createErrorInternal","_createError","_errorWithCustomMessage","auth","code","message","errorMap","Object","create","appName","name","_assertInstanceOf","object","instance","constructor","fullParams","slice","_errorFactory","_assert","assertion","debugFail","failure","Error","debugAssert","_getCurrentUrl","self","location","href","_isHttpOrHttps","_getCurrentScheme","protocol","Delay","shortDelay","longDelay","_classCallCheck","this","isMobile","isMobileCordova","isReactNative","_createClass","key","value","navigator","onLine","isBrowserExtension","Math","min","_emulatorUrl","config","path","emulator","url","startsWith","FetchProvider","fetchImpl","headersImpl","responseImpl","fetch","globalThis","Headers","Response","SERVER_ERROR_MAP","DEFAULT_API_TIMEOUT_MS","_addTidIfNecessary","request","tenantId","_performApiRequest","_performApiRequest2","method","_args101","customErrorMap","_performFetchWithErrorHandling","body","params","JSON","stringify","query","querystring","apiKey","_context100","_getAdditionalHeaders","headers","languageCode","_getFinalTarget","apiHost","referrerPolicy","_performFetchWithErrorHandling2","fetchFn","_canInitEmulator","_context102","networkTimeout","NetworkTimeout","Promise","race","promise","response","clearNetworkTimeout","json","_makeTaggedError","ok","errorMessage","_errorMessage$split","split","serverErrorCode","serverErrorMessage","authError","toLowerCase","replace","FirebaseError","String","_performSignInRequest","_performSignInRequest2","serverResponse","_args103","_context103","_serverResponse","host","base","apiScheme","_parseEnforcementState","enforcementStateStr","_","reject","_this","timer","setTimeout","get","clearTimeout","errorParams","email","phoneNumber","customData","_tokenResponse","isEnterprise","grecaptcha","undefined","enterprise","RecaptchaConfig","recaptchaKey","siteKey","recaptchaEnforcementState","providerStr","length","_step","provider","enforcementState","_iterator","getProviderEnforcementState","getRecaptchaConfig","_getRecaptchaConfig","deleteAccount","_deleteAccount","getAccountInfo","_getAccountInfo","utcTimestampToDateString","utcTimestamp","date","Date","Number","isNaN","getTime","toUTCString","e","_getIdTokenResult","user","userInternal","token","claims","firebase","signInProvider","_args109","forceRefresh","getModularInstance","_context109","getIdToken","_parseToken","exp","auth_time","iat","authTime","secondsStringToMilliseconds","issuedAtTime","expirationTime","signInSecondFactor","seconds","_token$split2","algorithm","payload","signature","decoded","base64Decode","parse","toString","_logoutIfInvalidated","_logoutIfInvalidated2","_args110","_context110","isUserInvalidated","currentUser","signOut","ProactiveRefresh","errorBackoff","isRunning","schedule","timerId","wasError","interval","stsTokenManager","now","max","getInterval","_context","_this2","iteration","_context2","UserMetadata","createdAt","lastLoginAt","_initializeTime","lastSignInTime","creationTime","metadata","_reloadWithoutSaving","_reloadWithoutSaving2","_context111","idToken","users","coreAccount","_notifyReloadListener","newProviderData","providerUserInfo","extractProviderData","providerData","mergeProviderData","oldIsAnonymous","isAnonymous","newIsAnonymous","passwordHash","updates","uid","localId","displayName","photoURL","photoUrl","emailVerified","assign","_reload","_context112","_persistUserIfCurrent","_notifyListenersIfCurrent","original","newData","deduped","filter","o","some","n","providerId","providers","map","_a","rawId","requestStsToken","_requestStsToken","refreshToken","_context114","_auth$config","tokenApiHost","_context113","accessToken","access_token","expiresIn","expires_in","refresh_token","revokeToken","_revokeToken","StsTokenManager","parsedToken","_tokenExpiresIn","updateTokensAndExpiration","_args3","isExpired","_context3","refresh","oldToken","_context4","_yield$requestStsToke","expiresInSec","toJSON","manager","assertStringOrUndefined","UserImpl","opt","__rest","proactiveRefresh","_context5","getToken","getIdTokenResult","reload","userInfo","_copy","_assign","newUser","_clone","callback","reloadListener","reloadUserInfo","_start","_stop","tokensRefreshed","_args6","updateFromServerResponse","_context6","_context7","clearRefreshToken","_redirectEventId","plainObjectTokenManager","fromJSON","Array","isArray","idTokenResponse","_args8","instanceCache","Map","_getInstance","cls","Function","set","InMemoryPersistence","type","storage","_key","_listener","inMemoryPersistence","_persistenceKeyName","PersistenceUserManager","persistence","userKey","fullUserKey","fullPersistenceKey","boundEventHandler","_onStorageEvent","bind","_addListener","_set","_context13","_get","blob","_fromJSON","_remove","newPersistence","_context14","getCurrentUser","removeCurrentUser","setCurrentUser","_removeListener","persistenceHierarchy","availablePersistences","selectedPersistence","userToMigrate","_iterator2","_step2","migrationHierarchy","_args17","_context17","all","_context15","_isAvailable","p","_shouldAllowMigration","_context16","_getBrowserName","userAgent","ua","includes","_isIEMobile","_isFirefox","_isBlackBerry","_isWebOS","_isSafari","_isChromeIOS","_isAndroid","matches","match","getUA","test","_isIOS","_isIOSStandalone","window","standalone","_isIE10","isIE","document","documentMode","_isMobileBrowser","_getClientVersion","clientPlatform","reportedPlatform","frameworks","reportedFrameworks","join","AuthMiddlewareQueue","onAbort","wrappedCallback","resolve","queue","push","index","_this3","nextUser","_context18","onAbortStack","_iterator3","beforeStateCallback","reverse","_iterator4","originalMessage","_getPasswordPolicy","_getPasswordPolicy2","_args116","PasswordPolicyImpl","responseOptions","customStrengthOptions","minPasswordLength","maxPasswordLength","containsLowercaseCharacter","containsLowercaseLetter","containsUppercaseCharacter","containsUppercaseLetter","containsNumericCharacter","containsNonAlphanumericCharacter","allowedNonAlphanumericCharacters","forceUpgradeOnSignin","schemaVersion","password","status","isValid","passwordPolicy","validatePasswordLengthOptions","validatePasswordCharacterOptions","meetsMinPasswordLength","meetsMaxPasswordLength","passwordChar","updatePasswordCharacterOptionsStatuses","i","charAt","AuthImpl","app","heartbeatServiceProvider","appCheckServiceProvider","operations","authStateSubscription","Subscription","idTokenSubscription","beforeStateQueue","settings","appVerificationDisabledForTesting","clientVersion","sdkClientVersion","popupRedirectResolver","_popupRedirectResolver","_initializationPromise","_this4","_deleted","_context19","persistenceManager","_shouldInitProactively","_initialize","initializeCurrentUser","lastNotifiedUid","_isInitialized","_context20","assertedPersistence","_currentUser","_updateCurrentUser","_context21","previouslyStoredUser","futureCurrentUser","needsTocheckMiddleware","authDomain","getOrInitRedirectPersistenceManager","redirectUserEventId","redirectUser","storedUserEventId","tryRedirectSignIn","result","directlySetCurrentUser","runMiddleware","_overrideRedirectResult","reloadAndSetCurrentUserOrClear","redirectResolver","_context22","_completeRedirectFn","_setRedirectUser","_context23","navigatorLanguage","languages","language","_getUserLanguage","userExtern","_args27","skipBeforeStateCallbacks","_context27","_context26","_this5","notifyAuthListeners","_context28","redirectPersistenceManager","_context29","_this6","setPersistence","_agentRecaptchaConfig","_tenantRecaptchaConfigs","_getPasswordPolicyInternal","_context30","_updatePasswordPolicy","EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION","validatePassword","_projectPasswordPolicy","_tenantPasswordPolicies","_context31","nextOrObserver","completed","registerStateListener","pushCallback","_this7","unsubscribe","onAuthStateChanged","_context32","tokenType","_context33","redirectManager","_context34","resolver","_redirectPersistence","id","_context36","_context38","_this8","isProactiveRefreshEnabled","_startProactiveRefresh","_stopProactiveRefresh","next","currentUid","subscription","cb","isUnsubscribed","then","_this9","addObserver","_context39","action","framework","sort","_getFrameworks","options","appId","getImmediate","optional","getHeartbeatsHeader","heartbeatsHeader","_getAppCheckToken","appCheckToken","_context41","appCheckTokenResult","_castAuth","createSubscribe","observer","_this10","_loadJS","el","createElement","setAttribute","onload","onerror","charset","getElementsByTagName","getScriptParentElement","appendChild","_generateCallbackName","prefix","floor","random","RECAPTCHA_ENTERPRISE_URL","FAKE_TOKEN","RecaptchaEnterpriseVerifier","authExtern","retrieveSiteKey","_retrieveSiteKey","retrieveRecaptchaToken","_args44","ready","execute","catch","_context43","clientType","version","_this11","jsHelpers\r\n                        ._loadJS","injectRecaptchaFields","_injectRecaptchaFields","verifier","captchaResponse","newRequest","_args117","captchaResp","_context117","verify","handleRecaptchaFlow","_handleRecaptchaFlow","authInstance","actionName","actionMethod","isProviderEnabled","_context119","requestWithRecaptcha","_context118","console","log","initializeAuth","deps","_getProvider","isInitialized","initialOptions","getOptions","deepEqual","initialize","connectAuthEmulator","authInternal","disableWarnings","extractProtocol","authority","exec","substr","port","hostAndPort","pop","bracketedIPv6","parsePort","_hostAndPort$split2","extractHostAndPort","portStr","emulatorConfig","freeze","attachBanner","sty","style","innerText","position","width","backgroundColor","border","color","bottom","left","margin","zIndex","textAlign","classList","add","info","readyState","addEventListener","emitEmulatorWarning","protocolEnd","indexOf","AuthCredential","signInMethod","_auth","_idToken","linkEmailPassword","_linkEmailPassword","signInWithPassword","_signInWithPassword","signInWithEmailLink","signInWithEmailLink$1","_signInWithEmailLink$","signInWithEmailLinkForLinking","_signInWithEmailLinkForLinking","EmailAuthCredential","_inherits","_email","_password","_tenantId","_this12","_context45","returnSecureToken","oobCode","_context46","_getIdTokenResponse","obj","_fromEmailAndPassword","_fromEmailAndCode","signInWithIdp","_signInWithIdp","OAuthCredential","pendingToken","secret","nonce","buildRequest","autoCreate","requestUri","postBody","cred","oauthToken","oauthTokenSecret","sendPhoneVerificationCode","_sendPhoneVerificationCode","_signInWithPhoneNumber$","_linkWithPhoneNumber$","_context136","temporaryProof","VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_","_verifyPhoneNumberForExisting","apiRequest","operation","PhoneAuthCredential","_this14","signInWithPhoneNumber$1","signInWithPhoneNumber","_makeVerificationRequest","linkWithPhoneNumber$1","linkWithPhoneNumber","verifyPhoneNumberForExisting","verificationId","verificationCode","sessionInfo","ActionCodeURL","actionLink","searchParams","querystringDecode","extractQuerystring","mode","parseMode","continueUrl","link","doubleDeepLink","iOSDeepLink","parseDeepLink","EmailAuthProvider","PROVIDER_ID","emailLink","actionCodeUrl","parseLink","FederatedAuthProvider","defaultLanguageCode","customOAuthParameters","customParameters","BaseOAuthProvider","scopes","scope","FacebookAuthProvider","_fromParams","FACEBOOK_SIGN_IN_METHOD","userCredential","credentialFromTaggedObject","tokenResponse","oauthAccessToken","credential","GoogleAuthProvider","_this16","addScope","GOOGLE_SIGN_IN_METHOD","oauthIdToken","GithubAuthProvider","GITHUB_SIGN_IN_METHOD","TwitterAuthProvider","TWITTER_SIGN_IN_METHOD","UserCredentialImpl","operationType","userCred","_args47","_context47","_fromIdTokenResponse","providerIdForResponse","_context48","_updateTokensIfNecessary","MultiFactorError","_this18","setPrototypeOf","prototype","_processCredentialSavingMfaContextIfNecessary","_getReauthenticationResolver","_fromErrorAndOperation","_link","_link$1","_link$","_args141","bypassAuthState","_context141","_linkToIdToken","_forOperation","_reauthenticate","_reauthenticate2","parsed","_args143","_context143","sub","_signInWithCredential","_signInWithCredential2","_args144","_context144","onIdTokenChanged","beforeAuthStateChanged","startEnrollPhoneMfa","finalizeEnrollTotpMfa","WeakMap","STORAGE_AVAILABLE_KEY","BrowserPersistenceClass","storageRetriever","setItem","removeItem","getItem","BrowserLocalPersistence","_this22","localStorage","event","poll","onStorageEvent","listeners","localCache","pollTimer","_iframeCannotSyncWebStorage","top","_isIframe","fallbackToPolling","keys","newValue","oldValue","detachListener","stopPolling","safariLocalStorageNotSynced","storedValue","triggerListeners","_this23","notifyListeners","forAllChangedKeys","_oldValue","from","listener","setInterval","_this24","StorageEvent","clearInterval","removeEventListener","startPolling","attachListener","Set","delete","size","_context55","_context56","_context57","browserLocalPersistence","BrowserSessionPersistence","sessionStorage","browserSessionPersistence","_allSettled","promises","_context58","fulfilled","reason","Receiver","eventTarget","handleEvent","_messageEvent$data","messageEvent","data","eventId","eventType","handlers","handlersMap","_context60","ports","postMessage","handler","origin","eventHandler","existingInstance","receivers","find","receiver","isListeningto","newInstance","_generateEventId","digits","Sender","target","messageChannel","port1","onMessage","close","completionTimer","_args61","timeout","MessageChannel","_context61","start","ackTimer","_this25","port2","finally","removeMessageHandler","_window","_setWindowLocation","_isWorker","_getActiveServiceWorker","_getActiveServiceWorker2","serviceWorker","_context169","registration","active","_getServiceWorkerController","controller","DB_NAME","DB_OBJECTSTORE_NAME","DB_DATA_KEYPATH","DBPromise","_this26","getObjectStore","db","isReadWrite","transaction","objectStore","_deleteDatabase","indexedDB","deleteDatabase","toPromise","_openDatabase","open","createObjectStore","keyPath","objectStoreNames","contains","_context62","_putObject","_putObject2","put","getObject","_getObject","_context171","_deleteObject","IndexedDBLocalPersistence","_workerInitializationPromise","initializeServiceWorkerMessaging","_context63","op","numAttempts","_context64","_openDb","initializeReceiver","initializeSender","_subscribe","_origin","_context66","_this27","_poll","keyProcessed","_data","_context69","activeServiceWorker","sender","_send","results","serviceWorkerReceiverAvailable","_context70","_context71","write","pendingWrites","_context72","_withPendingWrite","_context73","_this28","_withRetries","notifyServiceWorker","_context75","_context76","_this29","_context78","getAllRequest","getAll","keysInResult","_iterator5","_step5$value","fbase_key","localKey","has","_this30","indexedDBLocalPersistence","startSignInPhoneMfa","finalizeSignInTotpMfa","jsHelpers._generateCallbackName","RECAPTCHA_VERIFIER_TYPE","_verifyPhoneNumber","_verifyPhoneNumber2","_context175","recaptchaToken","phoneInfoOptions","session","phoneEnrollmentInfo","phoneSessionInfo","mfaEnrollmentId","multiFactorHint","multiFactorUid","mfaPendingCredential","phoneSignInInfo","phoneResponseInfo","_yield$sendPhoneVerif","_reset","PhoneAuthProvider","phoneOptions","applicationVerifier","_fromVerification","_fromTokenResponse","_withDefaultResolver","resolverOverride","IdpCredential","_this38","_buildIdpRequest","sessionId","returnIdpCredential","_signIn","_reauth","_link2","_linkUser","AbstractPopupRedirectOperation","_this39","pendingPromise","_context85","eventManager","onExecution","registerConsumer","urlResponse","_context86","getIdpTask","unregisterAndCleanUp","unregisterConsumer","cleanUp","_POLL_WINDOW_CLOSE_TIMEOUT","signInWithPopup","_signInWithPopup","resolverInternal","PopupOperation","executeNotNull","_this40","authWindow","pollId","currentPopupAction","cancel","_context87","_context88","_openPopup","associatedEvent","_originValidation","_this41","_isIframeWebStorageSupported","isSupported","pollUserCancellation","closed","_this42","redirectOutcomeMap","RedirectAction","_this43","readyOutcome","_context89","_getAndClearPendingRedirectStatus","_context90","_redirectUserForId","_getAndClearPendingRedirectStatus2","pendingRedirectKey","resolverPersistence","_context181","hasPendingRedirect","_getRedirectResult","_getRedirectResult3","resolverExtern","_args187","_context187","AuthEventManager","cachedEventUids","consumers","lastProcessedEventTime","authEventConsumer","queuedRedirectEvent","isEventForConsumer","sendToConsumer","saveEventToCache","hasEventBeenHandled","handled","forEach","consumer","_this44","hasHandledPotentialRedirect","isNullRedirectEvent","isRedirectEvent","onError","onAuthEvent","eventIdMatches","clear","eventUid","v","_getProjectConfig","_getProjectConfig2","_args189","IP_ADDRESS_REGEX","HTTP_REGEX","_validateOrigin2","_context190","_yield$_getProjectCon","authorizedDomains","_iterator6","domain","matchDomain","expected","currentUrl","URL","hostname","ceUrl","escapedDomainPattern","RegExp","NETWORK_TIMEOUT","resetUnloadedGapiModules","beacon","___jsl","H","hint","r","L","CP","cachedGApiLoader","_loadGapi","loadGapiIframe","gapi","load","iframes","getContext","ontimeout","Iframe","cbName","js._generateCallbackName","js\r\n                ._loadJS","loadGapi","PING_TIMEOUT","IFRAME_ATTRIBUTES","height","tabindex","EID_FROM_APIHOST","getIframeUrl","eid","fw","_openIframe","_openIframe2","_context192","gapiLoader._loadGapi","context","where","messageHandlersFilter","CROSS_ORIGIN_IFRAMES_FILTER","attributes","dontclear","iframe","clearTimerAndResolve","networkErrorTimer","_context191","restyle","setHideOnLeave","networkError","ping","BASE_POPUP_OPTIONS","resizable","statusbar","toolbar","TARGET_BLANK","FIREFOX_EMPTY_URL","AuthPopup","_open","screen","availHeight","availWidth","scrollbars","optionsString","entries","reduce","accum","openAsNewWindowIOS","newWin","focus","click","createEvent","initMouseEvent","dispatchEvent","FIREBASE_APP_CHECK_FRAGMENT_ID","encodeURIComponent","_getRedirectUrl","_getRedirectUrl2","authType","redirectUrl","additionalParams","setDefaultLanguage","isEmpty","getCustomParameters","_Object$entries$_i","getScopes","tid","paramsDict","appCheckTokenFragment","getHandlerBase","WEB_STORAGE_SUPPORT_KEY","BrowserPopupRedirectResolver","eventManagers","_context92","_context93","initAndGetManager","_this45","_context94","register","iframeEvent","authEvent","onEvent","send","originValidationPromises","_validateOrigin","browserPopupRedirectResolver","MultiFactorAssertionImpl","factorId","_finalizeEnroll","_finalizeSignIn","PhoneMultiFactorAssertionImpl","_this46","finalizeEnrollPhoneMfa","phoneVerificationInfo","finalizeSignInPhoneMfa","_fromCredential","TotpMultiFactorGenerator","oneTimePassword","TotpMultiFactorAssertionImpl","_fromSecret","enrollmentId","_fromEnrollmentId","mfaSession","_context95","totpEnrollmentInfo","TotpSecret","_fromStartTotpMfaEnrollmentResponse","otp","_this47","totpVerificationInfo","_makeTotpVerificationInfo","secretKey","hashingAlgorithm","codeLength","codeIntervalSeconds","enrollmentCompletionDeadline","accountName","issuer","useDefaults","_isEmptyString","totpSessionInfo","sharedSecretKey","verificationCodeLength","periodSec","finalizeEnrollmentTime","input","AuthInterop","internalListeners","assertAuthConfigured","_context98","updateProactiveRefresh","authIdTokenMaxAge","getExperimentalSetting","lastPostedIdToken","mintCookieFactory","_context99","idTokenResult","idTokenAge","getAuth","getApp","authTokenSyncUrl","mintCookie","authEmulatorHost","getDefaultEmulatorHost","_registerComponent","Component","container","getProvider","hierarchy","_updateErrorMap","_initializeWithPersistence","_initializeAuthInstance","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","registerVersion","getVersionForPlatform","setSDKVersion","DOMStorageWrapper","domStorage_","prefixedName_","storedVal","jsonEval","prefix_","MemoryStorage","cache_","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","LUIDGenerator","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","buildLogMessage_","arguments","arg","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","remove","varArgs","logWrapper","fatal","isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","k","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","s","f","ln","bias","Infinity","abs","pow","LN2","round","bits","hexByteString","hexByte","parseInt","INTEGER_REGEXP_","intVal","exceptionGuard","stack","setTimeoutNonBlocking","time","Deno","unrefTimer","AppCheckTokenProvider","appName_","appCheckProvider","appCheck","addTokenListener","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","addAuthTokenListener","removeAuthTokenListener","EmulatorTokenProvider","PROTOCOL_VERSION","FORGE_DOMAIN_RE","WEBSOCKET","LONG_POLLING","RepoInfo","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","_host","_domain","internalHost","newHost","isCacheableHost","toURLString","repoInfoConnectionURL","repoInfo","connURL","isCustomHost","repoInfoNeedsQueryParam","pairs","StatsCollection","amount","counters_","deepCopy","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","responseNum","closeAfterResponse","onClose","currentResponseNum","requestNum","pendingResponses","toProcess","_loop2","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","BrowserPollConnection","connId","applicationId","authToken","transportSessionId","lastSessionId","log_","stats_","urlFn","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","called","wrappedFn","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","everConnected_","sendNewPolls","closeAfter","pN","handleResponse","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","myDisconnFrame","removeChild","shutdown_","dataStr","bytesSent","incrementCounter","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","display","bytesReceived","forceAllow_","forceDisallow_","Windows","UI","commandCB","onMessageCB","outstandingRequests","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","alive","textContent","myID","myPW","newRequest_","pendingSegs","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript","async","onreadystatechange","rstate","parentNode","contentWindow","contentDocument","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","connectionURL_","device","process","platform","env","proxy","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","frames","totalFrames","fullMess","jsonMess","frameCount","handleNewFrameCount_","mess","resetKeepAlive","appendFrame_","remainingData","extractFrameCount_","sendString_","keepaliveTimer","isOldAndroid","oldAndroidMatch","parseFloat","isInMemoryStorage","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","ALL_TRANSPORTS","transport","globalTransportInitialized_","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","state_","transportManager_","start_","conn","initialTransport","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","_this13","healthyTimeoutMS","healthyTimeout_","markConnectionHealthy","connectionCount","everConnected","onConnectionLost_","onSecondaryConnectionLost_","_this15","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","t","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","onSecondaryControl_","pendingDataMessages","proceedWithUpgrade_","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","handshakePayload","h","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","onConnectionEstablished_","tryStartUpgrade_","upgradeTransport","startUpgrade_","closeConnections_","_this17","ServerActions","pathString","onComplete","hash","stats","EventEmitter","allowedEvents_","listeners_","validateEventType_","eventData","getInitialEvent","splice","et","OnlineMonitor","online_","trigger","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","newEmptyPath","pathGetFront","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","stringLength","validationPathCheckValid","validationPath","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","_this19","visible_","visible","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","_this20","nextPersistentConnectionId_","interruptReasons_","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","getInstance","on","onVisible_","onOnline_","onResponse","curReqNum","sendRequest","initConnection_","deferred","Deferred","outstandingGet","_path","q","_queryObject","sendGet_","currentHashFn","tag","queryId","_queryIdentifier","listens","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","_this21","req","warnOnListenWarnings_","removeListen_","tryAuth","reduceReconnectDelayIfAdminCredential_","isAdmin","tryAppCheck","authMethod","isValidFormat","requestData","res","onAuthRevoked_","onAppCheckRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","scheduleConnect_","online","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onRealtimeDisconnect_","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","_yield$Promise$all","_yield$Promise$all2","interrupt","delta","serverTimeOffset","listen","normalizedPathString","statusCode","explanation","notifyForInvalidToken","values","_step3","queries","clientName","reportStats","currentlyOnline","warnings","safeGet","indexSpec","getIndex","indexPath","__EMPTY_NODE","NamedNode","node","Index","compare","oldNode","newNode","oldWrapped","newWrapped","MIN","KeyIndex","assertionError","indexValue","val","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","cmp","right","nodeStack_","LLRBNode","RED","SortedMap","EMPTY_NODE","count","inorderTraversal","reverseTraversal","min_","maxKey","copy","insert","fixUp_","isRed_","moveRedLeft_","removeMin_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","blackDepth","check_","MAX_NODE","LLRBEmptyNode","comparator_","root_","BLACK","rightParent","minKey","resultGenerator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","__childrenNodeConstructor","nodeFromJSON","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","newPriorityNode","childName","childNode","newChildNode","updatePriority","updateImmediateChild","front","updateChild","exportFormat","getValue","lazyHash_","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","equals","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","compareTo","PRIORITY_INDEX","LOG_2","Base12Num","num","current_","mask","bits_","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","nextBitIsOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","indexDefinition","existingChildren","newIndex","sawIndexedValue","iter","getIterator","Wrap","getNext","isDefinedOn","getCompare","indexName","newIndexSet","newIndexes","indexedChildren","existingSnap","newChildren","ChildrenNode","children_","indexMap_","child","getImmediateChild","getChild","newIndexMap","removeFromIndexes","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","forEachChild","array","childHash","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","iterator","peek","getReverseIteratorFrom","maxPost","endPost","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","Default","defineProperties","MAX","setPriorityMaxNode","jsonLeaf","childData","children","childrenHavePriority","hinzeJsonObj","childSet","sortedChildSet","setNodeFromJSON","PathIndex","indexPath_","snap","aChild","extractChild","bChild","valueNode","ValueIndex","VALUE_INDEX","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","source","optChangeAccumulator","isIndexed","oldChild","hasChild","trackChildChange","withIndex","newSnap","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","startIsInclusive_","startAfterSet_","endIsInclusive_","endBeforeSet_","isWithinStart","getStartPost","isWithinEnd","getEndPost","filtered","updateFullNode","hasStart","startName","getIndexStartName","makePost","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","_this31","reverse_","withinEndPost","withinStartPost","compareRes","rangedFilter_","limit_","getLimit","isViewFromLeft","numChildren","getIndexedFilter","fullLimitUpdateChild_","hasNext","withinDirectionalStart","withinDirectionalEnd","getReverseIterator","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","getFirstChild","getLastChild","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","startSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","limitSet_","queryParamsToRestQueryStringParameters","queryParams","orderBy","qs","startParam","endParam","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","_this32","listens_","listenId","getListenId_","thisListen","queryStringParameters","restRequest_","_this33","_this34","_this35","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","sparseSnapshotTreeForEachTree","prefixPath","func","tree","sparseSnapshotTreeForEachChild","OperationType","StatsListener","collection_","newStats","last_","stat","StatsReporter","collection","server_","statsListener_","reportStats_","reportedStats","haveStatsToReport","_this36","statsToReport_","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","getPredecessorChildName","eventGeneratorMaterializeSingleChange","respondsTo","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","getNode","viewCacheGetCompleteServerSnap","EmptyChildren","ImmutableTree","relativePath","predicate","childExistingPathAndValue","findRootMostMatchingPathAndValue","toSet","newTree","setTree","fold_","pathSoFar","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach_","childPath","CompoundWrite","writeTree_","compoundWriteAddWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree","compoundWriteAddWrites","newWrite","compoundWriteRemoveWrite","empty","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeGetWrite","writeId","allWrites","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","merge","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","writesCache","completeCache","filterServerNode","accumulator","overwrite","viewProcessorApplyUserOverwrite","isFiltered","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","foreach","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","filtersNodes","viewProcessorRevertUserWrite","ackPath","isCompleteForPath","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","getChanges","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","newEventChild","childChangePath","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","getCompleteChild","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","referenceConstructor","View","initialViewCache","indexFilter","hasLimit","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","eventRegistrations_","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","indexedValueChanged","eventGeneratorGenerateEventsForChanges","SyncPoint","views","syncPointIsEmpty","syncPoint","syncPointApplyOperation","optCompleteServerCache","_step4","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","_step5","viewQueryId","_repo","syncPointGetQueryViews","_step6","_iterator7","syncPointGetCompleteServerCache","_step7","_iterator8","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","_step8","_iterator9","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","writeTreeAddOverwrite","pendingWriteTree_","syncTreeApplyOperationToSyncPoints_","syncTreeAckUserWrite","needToReevaluate","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","covered","findOnPath","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeAddEventRegistration","skipSetupListener","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","foreachChild","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","operationForChild","childServerCache","childWritesCache","viewGetServerCache","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","toUpperCase","errorForServerCode","splitIndex","fold","maybeChildSyncPoint","childMap","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","childQueries","queryToStop","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","validateFirebaseData","errorPrefix","hasDotValue","hasActualChild","last","validationPathPop","validatePathString","fnName","argumentName","errorPrefixFxn","validateUrl","parsedUrl","isValidRootPathString","EventQueue","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventLists_","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","recursionDepth_","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","Repo","forceRestClient_","appCheckProvider_","eventQueue_","transactionQueueTree_","repoStart","repo","authOverride","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","persistentConnection_","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","addTokenChangeListener","refreshAuthToken","refreshAppCheckToken","statsReporter_","creatorFunction","statsManagerGetOrCreateReporter","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","unlisten","repoServerTime","offset","repoGenerateServerValues","dataUpdateCount","interceptServerDataCallback_","taggedChildren","raw","changeTree","fromObject","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","updateSnapshot","repoGetNextWriteId","nextWriteId_","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","repoBuildTransactionQueue","allRun","every","repoSendTransactionQueue","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","_loop3","abortReason","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","_loop4","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","treeForEachAncestor","repoAbortTransactionsOnNode","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryString","_step9","segment","kv","_iterator10","decodeQuery","hostWithoutPort","dotInd","PUSH_CHARS","DataEvent","lastPushTime","lastRandChars","snapshot","ref","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","expDataSnapshot","previousChildName","call","hasCancelCallback","userCallback","QueryImpl","_orderByCalled","ReferenceImpl","sameRepo","samePath","sameQueryIdentifier","pathToUrlEncodedString","parentPath","DataSnapshot","_node","_index","childRef","_this37","_checkNotDeleted","_root","ValueEventRegistration","callbackContext","getEventType","onCancel","onValue","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","onceCallback","dataSnapshot","repoAddEventCallbackForQuery","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","repos","useRestClient","repoManagerApplyEmulatorSettings","tokenProvider","repoManagerDatabaseFromApp","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","OWNER","appRepos","repoManagerCreateRepo","Database","_repoInternal","_instanceStarted","_rootInternal","repoManagerDeleteRepo","apiName","getDatabase","identifier","getDefaultEmulatorHostnameAndPort","connectDatabaseEmulator","mockUserToken","createMockUserToken","simpleListen","echo","onEcho","variant","instanceIdentifier","setMultipleInstances","CONSTANTS","out","charCodeAt","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","bytes","pos","c1","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","DecodeBase64StringError","base64urlEncodeWithoutPadding","deepExtend","prop","getDefaultsFromGlobal","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","defaultsJsonString","getDefaultsFromEnvVariable","cookie","getDefaultsFromCookie","productName","emulatorHosts","separatorIndex","lastIndexOf","getDefaultAppConfig","project","user_id","iss","aud","sign_in_provider","identities","alg","runtime","chrome","browser","isIndexedDBAvailable","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","onsuccess","onupgradeneeded","captureStackTrace","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","PATTERN","decode","header","parts","contextObj","aKeys","bKeys","aProp","bProp","isObject","thing","querystringParams","arrayVal","_loop","queryStart","fragmentStart","blockSize","pad_","reset","chain_","inbuf_","total_","buf","W","W_","lengthMinusBlock","buf_","inbuf","compress_","totalBits","executor","onNoObservers","ObserverProxy","subscribe","task","forEachObserver","methods","implementsAnyMethods","noop","unsub","unsubscribeOne","observers","finalized","finalError","observerCount","sendOne","err","argName","_delegate","isMergeableObject","isNonNullObject","stringValue","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","clone","deepmerge","defaultArrayMerge","element","arrayMerge","sourceIsArray","destination","mergeObject","prev","freeSelf","freeGlobal","objectProto","nativeObjectToString","symToStringTag","isOwn","unmasked","getRawTag","objectToString","transform","overArg","getPrototypeOf","funcProto","funcToString","objectCtorString","isObjectLike","baseGetTag","proto","getPrototype","Ctor","condition","__data__","eq","assocIndexOf","ListCache","entry","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","maskSrcKey","coreJsData","reIsHostCtor","reIsNative","isMasked","isFunction","toSource","baseIsNative","getNative","nativeCreate","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","isKeyable","getMapData","MapCache","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","LARGE_ARRAY_SIZE","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","iteratee","defineProperty","objValue","baseAssignValue","props","customizer","isNew","assignValue","propertyIsEnumerable","isArguments","baseIsArguments","freeExports","exports","nodeType","freeModule","module","Buffer","isBuffer","stubFalse","reIsUint","typedArrayTags","isLength","freeProcess","types","require","binding","nodeIsTypedArray","nodeUtil","baseUnary","baseIsTypedArray","inherited","isArr","isArg","isBuff","isType","isTypedArray","skipIndexes","baseTimes","isIndex","isPrototype","nativeKeys","isArrayLike","arrayLikeKeys","baseKeys","copyObject","nativeKeysIn","isProto","baseKeysIn","keysIn","allocUnsafe","buffer","isDeep","resIndex","nativeGetSymbols","getOwnPropertySymbols","arrayFilter","symbol","stubArray","getSymbols","arrayPush","getSymbolsIn","keysFunc","symbolsFunc","baseGetAllKeys","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","DataView","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","ctorString","arrayBuffer","byteLength","Uint8Array","dataView","cloneArrayBuffer","byteOffset","reFlags","regexp","lastIndex","symbolProto","symbolValueOf","valueOf","typedArray","cloneDataView","cloneTypedArray","cloneRegExp","cloneSymbol","objectCreate","baseCreate","nodeIsMap","baseIsMap","nodeIsSet","baseIsSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","isFlat","isFull","initCloneArray","copyArray","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","baseAssignIn","copySymbols","baseAssign","initCloneByTag","stacked","isSet","subValue","isMap","getAllKeysIn","getAllKeys","arrayEach","memoize","TypeError","memoized","Cache","rePropName","reEscapeChar","memoizeCapped","string","number","quote","subString","isSymbol","symbolToString","baseToString","arrayMap","toKey","stringToPath","CLONE_DEEP_FLAG","FormikContext","React","FormikProvider","Provider","FormikConsumer","Consumer","useFormikContext","formik","isEmptyArray","isInteger","isString","isEmptyChildren","isPromise","getIn","def","toPath","setIn","resVal","pathArray","currentPath","currentObj","nextPath","setNestedObjectValues","visited","emptyErrors","emptyTouched","useFormik","validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit","initialValues","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","current","setIteration","stateRef","touched","isSubmitting","isValidating","submitCount","state","dispatch","isEqual","field","formikReducer","x","runValidateHandler","maybePromisedErrors","validate","actualException","runValidationSchema","validationSchema","schema","validateAt","sync","normalizedValues","prepareDataForValidation","abortEarly","validateYupSchema","yupError","_ref5","_i","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","fieldValidations","fieldErrorsList","curr","runAllValidations","fieldErrors","schemaErrors","validateErrors","validateFormWithHighPriority","useEventCallback","combinedErrors","resetForm","nextState","dispatchFn","onReset","maybePromisedOnReset","imperativeMethods","validateField","maybePromise","registerField","unregisterField","setTouched","shouldValidate","setErrors","setValues","resolvedValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","maybePath","persist","currentTarget","checked","outerHTML","multiple","currentValue","valueProp","Boolean","currentArrayOfValues","isValueInArray","getValueForCheckbox","selected","getSelectedValues","handleChange","eventOrPath","setFieldTouched","executeBlur","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","submitForm","isInstanceOfError","promiseOrUndefined","executeSubmit","_errors","handleSubmit","preventDefault","stopPropagation","validateForm","handleReset","getFieldMeta","initialValue","initialError","getFieldHelpers","setValue","setError","getFieldProps","nameOrOptions","isAnObject","valueState","onChange","onBlur","is","as","dirty","Formik","formikbag","component","render","innerRef","isPlainObject","shouldClone","useIsomorphicLayoutEffect","Field","className","_validate","meta","legacyBag","form","asElement","Form","_action","connect","Comp","C","componentDisplayName","WrappedComponent","hoistNonReactStatics","arrayLike","copyArrayLike","maxIndex","createAlterationHandler","alteration","defaultFunction","FieldArrayInner","updateArrayField","alterTouched","alterErrors","prevState","updateErrors","updateTouched","fieldError","fieldTouched","cloneDeep","handlePush","swap","indexA","indexB","handleSwap","move","handleMove","handleInsert","handleReplace","unshift","arr","handleUnshift","handleRemove","handlePop","componentDidUpdate","prevProps","tmp","arrayHelpers","restOfFormik","defaultProps","ErrorMessageImpl","shouldComponentUpdate","touch","ErrorMessage","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","isMemo","ForwardRef","Memo","getOwnPropertyNames","getOwnPropertyDescriptor","objectPrototype","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","g","l","w","y","z","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","maxSize","_maxSize","_size","_values","SPLIT_REGEX","DIGIT_REGEX","LEAD_DIGIT_REGEX","SPEC_CHAR_REGEX","CLEAN_QUOTES_REGEX","pathCache","setCache","getCache","normalizePath","part","isQuoted","shouldBeQuoted","hasLeadingNumber","hasSpecialChars","setter","getter","safe","segments","thisArg","isBracket","keyList","hasProp","hasElementType","equal","arrA","arrB","dateA","dateB","regexpA","regexpB","reWords","words","upperFirst","camelCase","acc","pascalCase","snakeCase","kebabCase","sentenceCase","titleCase","toposort","edges","cursor","sorted","outgoingEdges","edge","makeOutgoingEdges","nodesHash","makeNodesHash","visit","predecessors","nodeRep","outgoing","uniqueNodes","_Symbol$toStringTag","errorToString","regExpToString","SYMBOL_REGEXP","printNumber","printSimpleValue","quoteStrings","toISOString","printValue","toArray","strReg","toStringTag","ValidationError","_Error","_super","_createSuper","errorOrErrors","disableStack","isError","_this$errors","_this$inner","_toConsumableArray","innerErrors","_assertThisInitialized","label","_wrapNativeSuper","mixed","default","required","defined","notNull","oneOf","notOneOf","notType","_ref","originalValue","castMsg","uuid","trim","lowercase","uppercase","lessThan","moreThan","positive","negative","integer","boolean","isValue","noUnknown","tuple","typeLen","spec","formatError","isSchema","__isYupSchema__","Condition","refs","builder","otherwise","check","_len","_branch","branch","prefixes","Reference","isContext","isSibling","__isYupRef","isAbsent","createValidation","_ref2","panic","_ref2$path","skipAbsent","_options$abortEarly2","_options$disableStack4","disableStackTrace","item","isRef","createError","_overrides$disableSta","overrides","nextParams","_Object$keys","invalid","ctx","handleResult","validOrError","handleError","_result","OPTIONS","lastPart","lastPartDebug","_part","isTuple","innerType","fields","ReferenceSet","_Set","_super2","description","_createForOfIteratorHelper","done","describe","newItems","removeItems","seen","_step3$value","_slicedToArray","_i2","_Object$entries","Schema","tests","transforms","conditions","_mutate","internalTests","_whitelist","_blacklist","exclusiveTests","_typeCheck","withMutation","typeError","strip","strict","recursive","nullable","coerce","nonNullable","before","combined","mergedSpec","prevSchema","_options$strict","_options$abortEarly","_options$recursive","_options$disableStack","resolvedSchema","allowOptionality","_cast","formattedValue","formattedResult","rawValue","prevValue","getDefault","_value","_options$originalValu3","_options$strict2","initialTests","_i3","_Object$values","runTests","runOptions","fired","panicOnce","nextOnce","nestedErrors","_ref3","_Object$assign","originalParent","testOptions","_defineProperty","_options$disableStack2","validated","_options$disableStack3","validateSync","defaultValue","_getDefault","isStrict","optionality","nullability","opts","isExclusive","exclusive","dep","fromOptions","enums","whiteList","valids","resolveAll","invalids","_next$spec","list","_arr","_i4","_getIn","_i5","_arr2","alias","_i6","_arr3","returnsTrue","MixedSchema","_Schema","_super3","BooleanSchema","_Schema2","_super4","_raw","_getPrototypeOf","rEmail","rUrl","rUUID","isTrimmed","objStringTag","create$6","StringSchema","_Schema3","_super5","strValue","regex","excludeEmptyString","_options$excludeEmpty","create$5","NumberSchema","_Schema4","_super6","isNaN$1","NaN","less","more","_method","avail","truncate","isoReg","toNumber","invalidDate","create$4","DateSchema","_Schema5","_super7","regexResult","struct","year","month","day","hour","minute","second","millisecond","plusMinus","hourOffset","minuteOffset","totalMinutesOffset","UTC","parseIsoDate","INVALID_DATE","param","cast","limit","prepareParam","ii","_err$path","sortByKeyOrder","parseJson","deepPartial","partial","_i8","_Object$entries2","_Object$entries2$_i","fieldSchema","setFields","nextArray","unknown","known","defaultSort","create$3","ObjectSchema","_Schema6","_super8","_sortErrors","_nodes","_excludedEdges","shape","_options$stripUnknown","stripUnknown","intermediateValue","innerOptions","__validating","isChanged","exists","fieldValue","inputValue","fieldSpec","_options$from","_options$originalValu4","_options$recursive2","objectErrors","asNestedTest","nextFields","_i9","_Object$entries3","_Object$entries3$_i","schemaOrRef","dft","_innerOptions","excludedEdges","excludes","_ref4","addNode","depPath","_Object$keys2","_i7","sortFields","additions","_i10","_Object$entries4","_Object$entries4$_i","picked","_ref6","_ref7","_i11","_Object$keys3","pick","fromGetter","newObj","deepHas","noAllow","unknownKeys","allow","_i12","_Object$keys4","transformKeys","_i13","_Object$entries5","_innerOptions2","_Object$entries5$_i","ArraySchema","_Schema7","_super9","_opts","castArray","castElement","arrayErrors","_options$originalValu2","_options$originalValu","innerTypeErrors","rejector","TupleSchema","_Schema8","_super10","schemas","itemTypes","tupleErrors","_step8$value","itemSchema","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_superPropBase","property","Reflect","desc","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","IDBTransaction","wrap","wrapFunction","IDBDatabase","IDBCursor","advance","continue","continuePrimaryKey","_len2","_key2","unwrap","_len3","_key3","storeNames","tx","transformCachableValue","DOMException","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","promisifyRequest","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","_regeneratorRuntime","_callee","storeName","_target","_args","store","abrupt","sent","stop","_x","oldTraps","_objectSpread","PlatformLoggerServiceImpl","getProviders","getComponent","isVersionServiceProvider","library","logString","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","_components","_addComponent","addComponent","debug","componentName","heartbeatController","triggerHeartbeat","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","_isDeleted","isDeleted","initializeApp","rawConfig","existingApp","ComponentContainer","newApp","libraryKeyOrName","libraryMismatch","versionMismatch","warning","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","oldVersion","newVersion","openDB","originalErrorMessage","readHeartbeatsFromIndexedDB","_readHeartbeatsFromIndexedDB","_context8","computeKey","idbGetError","writeHeartbeatsToIndexedDB","_writeHeartbeatsToIndexedDB","heartbeatObject","_context9","HeartbeatServiceImpl","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_heartbeatsCache","platformLogger","agent","getPlatformInfoString","getUTCDateString","heartbeats","lastSentHeartbeatDate","singleDateHeartbeat","hbTimestamp","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","heartbeatsCache","heartbeatEntry","hb","dates","countBytes","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","instanceFactory","instantiationMode","multipleInstances","serviceProps","onInstanceCreated","instances","instancesDeferred","instancesOptions","onInitCallbacks","normalizedIdentifier","normalizeInstanceIdentifier","shouldAutoInitialize","getOrInitializeService","isComponentEager","instanceDeferred","services","INTERNAL","_delete","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","_ref$options","invokeOnInitCallbacks","setComponent","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","_logLevel","_logHandler","_userLogHandler"],"sourceRoot":""}